//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace onvif.services.device {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", ConfigurationName="device.Device")]
    public interface Device {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.device.GetDeviceInformationResponse GetDeviceInformation(onvif.services.device.GetDeviceInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetDeviceInformation(onvif.services.device.GetDeviceInformationRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetDeviceInformationResponse EndGetDeviceInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetSystemDateAndTimeResponse SetSystemDateAndTime(onvif.services.device.SetSystemDateAndTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime", ReplyAction="*")]
        System.IAsyncResult BeginSetSystemDateAndTime(onvif.services.device.SetSystemDateAndTimeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetSystemDateAndTimeResponse EndSetSystemDateAndTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetSystemDateAndTimeResponse GetSystemDateAndTime(onvif.services.device.GetSystemDateAndTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemDateAndTime(onvif.services.device.GetSystemDateAndTimeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetSystemDateAndTimeResponse EndGetSystemDateAndTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetSystemFactoryDefaultResponse SetSystemFactoryDefault(onvif.services.device.SetSystemFactoryDefaultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault", ReplyAction="*")]
        System.IAsyncResult BeginSetSystemFactoryDefault(onvif.services.device.SetSystemFactoryDefaultRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetSystemFactoryDefaultResponse EndSetSystemFactoryDefault(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.UpgradeSystemFirmwareResponse UpgradeSystemFirmware(onvif.services.device.UpgradeSystemFirmwareRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware", ReplyAction="*")]
        System.IAsyncResult BeginUpgradeSystemFirmware(onvif.services.device.UpgradeSystemFirmwareRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.UpgradeSystemFirmwareResponse EndUpgradeSystemFirmware(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SystemReboot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SystemRebootResponse SystemReboot(onvif.services.device.SystemRebootRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SystemReboot", ReplyAction="*")]
        System.IAsyncResult BeginSystemReboot(onvif.services.device.SystemRebootRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SystemRebootResponse EndSystemReboot(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.RestoreSystemResponse RestoreSystem(onvif.services.device.RestoreSystemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RestoreSystem", ReplyAction="*")]
        System.IAsyncResult BeginRestoreSystem(onvif.services.device.RestoreSystemRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.RestoreSystemResponse EndRestoreSystem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetSystemBackupResponse GetSystemBackup(onvif.services.device.GetSystemBackupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemBackup", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemBackup(onvif.services.device.GetSystemBackupRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetSystemBackupResponse EndGetSystemBackup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetSystemLogResponse GetSystemLog(onvif.services.device.GetSystemLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemLog", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemLog(onvif.services.device.GetSystemLogRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetSystemLogResponse EndGetSystemLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetSystemSupportInformationResponse GetSystemSupportInformation(onvif.services.device.GetSystemSupportInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation", ReplyAction="*")]
        System.IAsyncResult BeginGetSystemSupportInformation(onvif.services.device.GetSystemSupportInformationRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetSystemSupportInformationResponse EndGetSystemSupportInformation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetScopesResponse GetScopes(onvif.services.device.GetScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetScopes", ReplyAction="*")]
        System.IAsyncResult BeginGetScopes(onvif.services.device.GetScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetScopesResponse EndGetScopes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetScopesResponse SetScopes(onvif.services.device.SetScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetScopes", ReplyAction="*")]
        System.IAsyncResult BeginSetScopes(onvif.services.device.SetScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetScopesResponse EndSetScopes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/AddScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.AddScopesResponse AddScopes(onvif.services.device.AddScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/AddScopes", ReplyAction="*")]
        System.IAsyncResult BeginAddScopes(onvif.services.device.AddScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.AddScopesResponse EndAddScopes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.RemoveScopesResponse RemoveScopes(onvif.services.device.RemoveScopesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RemoveScopes", ReplyAction="*")]
        System.IAsyncResult BeginRemoveScopes(onvif.services.device.RemoveScopesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.RemoveScopesResponse EndRemoveScopes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetDiscoveryModeResponse GetDiscoveryMode(onvif.services.device.GetDiscoveryModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginGetDiscoveryMode(onvif.services.device.GetDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetDiscoveryModeResponse EndGetDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetDiscoveryModeResponse SetDiscoveryMode(onvif.services.device.SetDiscoveryModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginSetDiscoveryMode(onvif.services.device.SetDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetDiscoveryModeResponse EndSetDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetRemoteDiscoveryModeResponse GetRemoteDiscoveryMode(onvif.services.device.GetRemoteDiscoveryModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginGetRemoteDiscoveryMode(onvif.services.device.GetRemoteDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetRemoteDiscoveryModeResponse EndGetRemoteDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetRemoteDiscoveryModeResponse SetRemoteDiscoveryMode(onvif.services.device.SetRemoteDiscoveryModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode", ReplyAction="*")]
        System.IAsyncResult BeginSetRemoteDiscoveryMode(onvif.services.device.SetRemoteDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetRemoteDiscoveryModeResponse EndSetRemoteDiscoveryMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetDPAddressesResponse GetDPAddresses(onvif.services.device.GetDPAddressesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDPAddresses", ReplyAction="*")]
        System.IAsyncResult BeginGetDPAddresses(onvif.services.device.GetDPAddressesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetDPAddressesResponse EndGetDPAddresses(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetDPAddressesResponse SetDPAddresses(onvif.services.device.SetDPAddressesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDPAddresses", ReplyAction="*")]
        System.IAsyncResult BeginSetDPAddresses(onvif.services.device.SetDPAddressesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetDPAddressesResponse EndSetDPAddresses(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetUsersResponse GetUsers(onvif.services.device.GetUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetUsers", ReplyAction="*")]
        System.IAsyncResult BeginGetUsers(onvif.services.device.GetUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetUsersResponse EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.CreateUsersResponse CreateUsers(onvif.services.device.CreateUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateUsers", ReplyAction="*")]
        System.IAsyncResult BeginCreateUsers(onvif.services.device.CreateUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.CreateUsersResponse EndCreateUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.DeleteUsersResponse DeleteUsers(onvif.services.device.DeleteUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteUsers", ReplyAction="*")]
        System.IAsyncResult BeginDeleteUsers(onvif.services.device.DeleteUsersRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.DeleteUsersResponse EndDeleteUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetUserResponse SetUser(onvif.services.device.SetUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetUser", ReplyAction="*")]
        System.IAsyncResult BeginSetUser(onvif.services.device.SetUserRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetUserResponse EndSetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetWsdlUrlResponse GetWsdlUrl(onvif.services.device.GetWsdlUrlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl", ReplyAction="*")]
        System.IAsyncResult BeginGetWsdlUrl(onvif.services.device.GetWsdlUrlRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetWsdlUrlResponse EndGetWsdlUrl(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetCapabilitiesResponse GetCapabilities(onvif.services.device.GetCapabilitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCapabilities", ReplyAction="*")]
        System.IAsyncResult BeginGetCapabilities(onvif.services.device.GetCapabilitiesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetCapabilitiesResponse EndGetCapabilities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetHostname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetHostnameResponse GetHostname(onvif.services.device.GetHostnameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetHostname", ReplyAction="*")]
        System.IAsyncResult BeginGetHostname(onvif.services.device.GetHostnameRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetHostnameResponse EndGetHostname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetHostname", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetHostnameResponse SetHostname(onvif.services.device.SetHostnameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetHostname", ReplyAction="*")]
        System.IAsyncResult BeginSetHostname(onvif.services.device.SetHostnameRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetHostnameResponse EndSetHostname(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetDNSResponse GetDNS(onvif.services.device.GetDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDNS", ReplyAction="*")]
        System.IAsyncResult BeginGetDNS(onvif.services.device.GetDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetDNSResponse EndGetDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetDNSResponse SetDNS(onvif.services.device.SetDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDNS", ReplyAction="*")]
        System.IAsyncResult BeginSetDNS(onvif.services.device.SetDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetDNSResponse EndSetDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetNTPResponse GetNTP(onvif.services.device.GetNTPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNTP", ReplyAction="*")]
        System.IAsyncResult BeginGetNTP(onvif.services.device.GetNTPRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetNTPResponse EndGetNTP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNTP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetNTPResponse SetNTP(onvif.services.device.SetNTPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNTP", ReplyAction="*")]
        System.IAsyncResult BeginSetNTP(onvif.services.device.SetNTPRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetNTPResponse EndSetNTP(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetDynamicDNSResponse GetDynamicDNS(onvif.services.device.GetDynamicDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS", ReplyAction="*")]
        System.IAsyncResult BeginGetDynamicDNS(onvif.services.device.GetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetDynamicDNSResponse EndGetDynamicDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetDynamicDNSResponse SetDynamicDNS(onvif.services.device.SetDynamicDNSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS", ReplyAction="*")]
        System.IAsyncResult BeginSetDynamicDNS(onvif.services.device.SetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetDynamicDNSResponse EndSetDynamicDNS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetNetworkInterfacesResponse GetNetworkInterfaces(onvif.services.device.GetNetworkInterfacesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkInterfaces(onvif.services.device.GetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetNetworkInterfacesResponse EndGetNetworkInterfaces(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetNetworkInterfacesResponse SetNetworkInterfaces(onvif.services.device.SetNetworkInterfacesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkInterfaces(onvif.services.device.SetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetNetworkInterfacesResponse EndSetNetworkInterfaces(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetNetworkProtocolsResponse GetNetworkProtocols(onvif.services.device.GetNetworkProtocolsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkProtocols(onvif.services.device.GetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetNetworkProtocolsResponse EndGetNetworkProtocols(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetNetworkProtocolsResponse SetNetworkProtocols(onvif.services.device.SetNetworkProtocolsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkProtocols(onvif.services.device.SetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetNetworkProtocolsResponse EndSetNetworkProtocols(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetNetworkDefaultGatewayResponse GetNetworkDefaultGateway(onvif.services.device.GetNetworkDefaultGatewayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway", ReplyAction="*")]
        System.IAsyncResult BeginGetNetworkDefaultGateway(onvif.services.device.GetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetNetworkDefaultGatewayResponse EndGetNetworkDefaultGateway(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetNetworkDefaultGatewayResponse SetNetworkDefaultGateway(onvif.services.device.SetNetworkDefaultGatewayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway", ReplyAction="*")]
        System.IAsyncResult BeginSetNetworkDefaultGateway(onvif.services.device.SetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetNetworkDefaultGatewayResponse EndSetNetworkDefaultGateway(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetZeroConfigurationResponse GetZeroConfiguration(onvif.services.device.GetZeroConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginGetZeroConfiguration(onvif.services.device.GetZeroConfigurationRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetZeroConfigurationResponse EndGetZeroConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetZeroConfigurationResponse SetZeroConfiguration(onvif.services.device.SetZeroConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration", ReplyAction="*")]
        System.IAsyncResult BeginSetZeroConfiguration(onvif.services.device.SetZeroConfigurationRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetZeroConfigurationResponse EndSetZeroConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetIPAddressFilterResponse GetIPAddressFilter(onvif.services.device.GetIPAddressFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginGetIPAddressFilter(onvif.services.device.GetIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetIPAddressFilterResponse EndGetIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetIPAddressFilterResponse SetIPAddressFilter(onvif.services.device.SetIPAddressFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginSetIPAddressFilter(onvif.services.device.SetIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetIPAddressFilterResponse EndSetIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.AddIPAddressFilterResponse AddIPAddressFilter(onvif.services.device.AddIPAddressFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginAddIPAddressFilter(onvif.services.device.AddIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.AddIPAddressFilterResponse EndAddIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.RemoveIPAddressFilterResponse RemoveIPAddressFilter(onvif.services.device.RemoveIPAddressFilterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter", ReplyAction="*")]
        System.IAsyncResult BeginRemoveIPAddressFilter(onvif.services.device.RemoveIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.RemoveIPAddressFilterResponse EndRemoveIPAddressFilter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetAccessPolicyResponse GetAccessPolicy(onvif.services.device.GetAccessPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy", ReplyAction="*")]
        System.IAsyncResult BeginGetAccessPolicy(onvif.services.device.GetAccessPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetAccessPolicyResponse EndGetAccessPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetAccessPolicyResponse SetAccessPolicy(onvif.services.device.SetAccessPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy", ReplyAction="*")]
        System.IAsyncResult BeginSetAccessPolicy(onvif.services.device.SetAccessPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetAccessPolicyResponse EndSetAccessPolicy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.CreateCertificateResponse CreateCertificate(onvif.services.device.CreateCertificateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/CreateCertificate", ReplyAction="*")]
        System.IAsyncResult BeginCreateCertificate(onvif.services.device.CreateCertificateRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.CreateCertificateResponse EndCreateCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetCertificatesResponse GetCertificates(onvif.services.device.GetCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCertificates", ReplyAction="*")]
        System.IAsyncResult BeginGetCertificates(onvif.services.device.GetCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetCertificatesResponse EndGetCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetCertificatesStatusResponse GetCertificatesStatus(onvif.services.device.GetCertificatesStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetCertificatesStatus(onvif.services.device.GetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetCertificatesStatusResponse EndGetCertificatesStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetCertificatesStatusResponse SetCertificatesStatus(onvif.services.device.SetCertificatesStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus", ReplyAction="*")]
        System.IAsyncResult BeginSetCertificatesStatus(onvif.services.device.SetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetCertificatesStatusResponse EndSetCertificatesStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.DeleteCertificatesResponse DeleteCertificates(onvif.services.device.DeleteCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/DeleteCertificates", ReplyAction="*")]
        System.IAsyncResult BeginDeleteCertificates(onvif.services.device.DeleteCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.DeleteCertificatesResponse EndDeleteCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetPkcs10RequestResponse GetPkcs10Request(onvif.services.device.GetPkcs10RequestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request", ReplyAction="*")]
        System.IAsyncResult BeginGetPkcs10Request(onvif.services.device.GetPkcs10RequestRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetPkcs10RequestResponse EndGetPkcs10Request(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.LoadCertificatesResponse LoadCertificates(onvif.services.device.LoadCertificatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/LoadCertificates", ReplyAction="*")]
        System.IAsyncResult BeginLoadCertificates(onvif.services.device.LoadCertificatesRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.LoadCertificatesResponse EndLoadCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetClientCertificateModeResponse GetClientCertificateMode(onvif.services.device.GetClientCertificateModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode", ReplyAction="*")]
        System.IAsyncResult BeginGetClientCertificateMode(onvif.services.device.GetClientCertificateModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetClientCertificateModeResponse EndGetClientCertificateMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetClientCertificateModeResponse SetClientCertificateMode(onvif.services.device.SetClientCertificateModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode", ReplyAction="*")]
        System.IAsyncResult BeginSetClientCertificateMode(onvif.services.device.SetClientCertificateModeRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetClientCertificateModeResponse EndSetClientCertificateMode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.GetRelayOutputsResponse GetRelayOutputs(onvif.services.device.GetRelayOutputsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs", ReplyAction="*")]
        System.IAsyncResult BeginGetRelayOutputs(onvif.services.device.GetRelayOutputsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.GetRelayOutputsResponse EndGetRelayOutputs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetRelayOutputSettingsResponse SetRelayOutputSettings(onvif.services.device.SetRelayOutputSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings", ReplyAction="*")]
        System.IAsyncResult BeginSetRelayOutputSettings(onvif.services.device.SetRelayOutputSettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetRelayOutputSettingsResponse EndSetRelayOutputSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeviceEntity))]
        onvif.services.device.SetRelayOutputStateResponse SetRelayOutputState(onvif.services.device.SetRelayOutputStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState", ReplyAction="*")]
        System.IAsyncResult BeginSetRelayOutputState(onvif.services.device.SetRelayOutputStateRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.device.SetRelayOutputStateResponse EndSetRelayOutputState(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceInformation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDeviceInformationRequest {
        
        public GetDeviceInformationRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceInformationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDeviceInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string Manufacturer;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public string FirmwareVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=3)]
        public string SerialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=4)]
        public string HardwareId;
        
        public GetDeviceInformationResponse() {
        }
        
        public GetDeviceInformationResponse(string Manufacturer, string Model, string FirmwareVersion, string SerialNumber, string HardwareId) {
            this.Manufacturer = Manufacturer;
            this.Model = Model;
            this.FirmwareVersion = FirmwareVersion;
            this.SerialNumber = SerialNumber;
            this.HardwareId = HardwareId;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum SetDateTimeType {
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        NTP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class TimeZone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tzField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string TZ {
            get {
                return this.tzField;
            }
            set {
                this.tzField = value;
                this.RaisePropertyChanged("TZ");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CertificateStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private bool statusField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Certificate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string certificateIDField;
        
        private BinaryData certificate1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string CertificateID {
            get {
                return this.certificateIDField;
            }
            set {
                this.certificateIDField = value;
                this.RaisePropertyChanged("CertificateID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Certificate", Order=1)]
        public BinaryData Certificate1 {
            get {
                return this.certificate1Field;
            }
            set {
                this.certificate1Field = value;
                this.RaisePropertyChanged("Certificate1");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BinaryData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] dataField;
        
        private string contentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/2005/05/xmlmime")]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("contentType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddressFilterExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddressFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IPAddressFilterType typeField;
        
        private PrefixedIPv4Address[] iPv4AddressField;
        
        private PrefixedIPv6Address[] iPv6AddressField;
        
        private IPAddressFilterExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IPAddressFilterType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", Order=1)]
        public PrefixedIPv4Address[] IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", Order=2)]
        public PrefixedIPv6Address[] IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPAddressFilterExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPAddressFilterType {
        
        /// <remarks/>
        Allow,
        
        /// <remarks/>
        Deny,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PrefixedIPv4Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        private int prefixLengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PrefixLength {
            get {
                return this.prefixLengthField;
            }
            set {
                this.prefixLengthField = value;
                this.RaisePropertyChanged("PrefixLength");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PrefixedIPv6Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressField;
        
        private int prefixLengthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=0)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PrefixLength {
            get {
                return this.prefixLengthField;
            }
            set {
                this.prefixLengthField = value;
                this.RaisePropertyChanged("PrefixLength");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkZeroConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkZeroConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string interfaceTokenField;
        
        private bool enabledField;
        
        private string[] addressesField;
        
        private NetworkZeroConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string InterfaceToken {
            get {
                return this.interfaceTokenField;
            }
            set {
                this.interfaceTokenField = value;
                this.RaisePropertyChanged("InterfaceToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Addresses", DataType="token", Order=2)]
        public string[] Addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
                this.RaisePropertyChanged("Addresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NetworkZeroConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkGateway : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] iPv4AddressField;
        
        private string[] iPv6AddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", DataType="token", Order=0)]
        public string[] IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", DataType="token", Order=1)]
        public string[] IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkProtocolExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkProtocol : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkProtocolType nameField;
        
        private bool enabledField;
        
        private int[] portField;
        
        private NetworkProtocolExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkProtocolType Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Port", Order=2)]
        public int[] Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
                this.RaisePropertyChanged("Port");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NetworkProtocolExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum NetworkProtocolType {
        
        /// <remarks/>
        HTTP,
        
        /// <remarks/>
        HTTPS,
        
        /// <remarks/>
        RTSP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceSetConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private bool acceptRouterAdvertField;
        
        private bool acceptRouterAdvertFieldSpecified;
        
        private PrefixedIPv6Address[] manualField;
        
        private IPv6DHCPConfiguration dHCPField;
        
        private bool dHCPFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool AcceptRouterAdvert {
            get {
                return this.acceptRouterAdvertField;
            }
            set {
                this.acceptRouterAdvertField = value;
                this.RaisePropertyChanged("AcceptRouterAdvert");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptRouterAdvertSpecified {
            get {
                return this.acceptRouterAdvertFieldSpecified;
            }
            set {
                this.acceptRouterAdvertFieldSpecified = value;
                this.RaisePropertyChanged("AcceptRouterAdvertSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=2)]
        public PrefixedIPv6Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv6DHCPConfiguration DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DHCPSpecified {
            get {
                return this.dHCPFieldSpecified;
            }
            set {
                this.dHCPFieldSpecified = value;
                this.RaisePropertyChanged("DHCPSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPv6DHCPConfiguration {
        
        /// <remarks/>
        Auto,
        
        /// <remarks/>
        Stateful,
        
        /// <remarks/>
        Stateless,
        
        /// <remarks/>
        Off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private PrefixedIPv4Address[] manualField;
        
        private bool dHCPField;
        
        private bool dHCPFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=1)]
        public PrefixedIPv4Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DHCPSpecified {
            get {
                return this.dHCPFieldSpecified;
            }
            set {
                this.dHCPFieldSpecified = value;
                this.RaisePropertyChanged("DHCPSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceSetConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private NetworkInterfaceConnectionSetting linkField;
        
        private int mTUField;
        
        private bool mTUFieldSpecified;
        
        private IPv4NetworkInterfaceSetConfiguration iPv4Field;
        
        private IPv6NetworkInterfaceSetConfiguration iPv6Field;
        
        private NetworkInterfaceSetConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
                this.RaisePropertyChanged("EnabledSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceConnectionSetting Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("Link");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
                this.RaisePropertyChanged("MTU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
                this.RaisePropertyChanged("MTUSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv4NetworkInterfaceSetConfiguration IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public IPv6NetworkInterfaceSetConfiguration IPv6 {
            get {
                return this.iPv6Field;
            }
            set {
                this.iPv6Field = value;
                this.RaisePropertyChanged("IPv6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NetworkInterfaceSetConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceConnectionSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool autoNegotiationField;
        
        private int speedField;
        
        private Duplex duplexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool AutoNegotiation {
            get {
                return this.autoNegotiationField;
            }
            set {
                this.autoNegotiationField = value;
                this.RaisePropertyChanged("AutoNegotiation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Duplex Duplex {
            get {
                return this.duplexField;
            }
            set {
                this.duplexField = value;
                this.RaisePropertyChanged("Duplex");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum Duplex {
        
        /// <remarks/>
        Full,
        
        /// <remarks/>
        Half,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZNodeExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZSpacesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Space1DDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRIField;
        
        private FloatRange xRangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
                this.RaisePropertyChanged("URI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange XRange {
            get {
                return this.xRangeField;
            }
            set {
                this.xRangeField = value;
                this.RaisePropertyChanged("XRange");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FloatRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float minField;
        
        private float maxField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
                this.RaisePropertyChanged("Min");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
                this.RaisePropertyChanged("Max");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Space2DDescription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uRIField;
        
        private FloatRange xRangeField;
        
        private FloatRange yRangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
                this.RaisePropertyChanged("URI");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange XRange {
            get {
                return this.xRangeField;
            }
            set {
                this.xRangeField = value;
                this.RaisePropertyChanged("XRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange YRange {
            get {
                return this.yRangeField;
            }
            set {
                this.yRangeField = value;
                this.RaisePropertyChanged("YRange");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZSpaces : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Space2DDescription[] absolutePanTiltPositionSpaceField;
        
        private Space1DDescription[] absoluteZoomPositionSpaceField;
        
        private Space2DDescription[] relativePanTiltTranslationSpaceField;
        
        private Space1DDescription[] relativeZoomTranslationSpaceField;
        
        private Space2DDescription[] continuousPanTiltVelocitySpaceField;
        
        private Space1DDescription[] continuousZoomVelocitySpaceField;
        
        private Space1DDescription[] panTiltSpeedSpaceField;
        
        private Space1DDescription[] zoomSpeedSpaceField;
        
        private PTZSpacesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AbsolutePanTiltPositionSpace", Order=0)]
        public Space2DDescription[] AbsolutePanTiltPositionSpace {
            get {
                return this.absolutePanTiltPositionSpaceField;
            }
            set {
                this.absolutePanTiltPositionSpaceField = value;
                this.RaisePropertyChanged("AbsolutePanTiltPositionSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AbsoluteZoomPositionSpace", Order=1)]
        public Space1DDescription[] AbsoluteZoomPositionSpace {
            get {
                return this.absoluteZoomPositionSpaceField;
            }
            set {
                this.absoluteZoomPositionSpaceField = value;
                this.RaisePropertyChanged("AbsoluteZoomPositionSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelativePanTiltTranslationSpace", Order=2)]
        public Space2DDescription[] RelativePanTiltTranslationSpace {
            get {
                return this.relativePanTiltTranslationSpaceField;
            }
            set {
                this.relativePanTiltTranslationSpaceField = value;
                this.RaisePropertyChanged("RelativePanTiltTranslationSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelativeZoomTranslationSpace", Order=3)]
        public Space1DDescription[] RelativeZoomTranslationSpace {
            get {
                return this.relativeZoomTranslationSpaceField;
            }
            set {
                this.relativeZoomTranslationSpaceField = value;
                this.RaisePropertyChanged("RelativeZoomTranslationSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContinuousPanTiltVelocitySpace", Order=4)]
        public Space2DDescription[] ContinuousPanTiltVelocitySpace {
            get {
                return this.continuousPanTiltVelocitySpaceField;
            }
            set {
                this.continuousPanTiltVelocitySpaceField = value;
                this.RaisePropertyChanged("ContinuousPanTiltVelocitySpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContinuousZoomVelocitySpace", Order=5)]
        public Space1DDescription[] ContinuousZoomVelocitySpace {
            get {
                return this.continuousZoomVelocitySpaceField;
            }
            set {
                this.continuousZoomVelocitySpaceField = value;
                this.RaisePropertyChanged("ContinuousZoomVelocitySpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PanTiltSpeedSpace", Order=6)]
        public Space1DDescription[] PanTiltSpeedSpace {
            get {
                return this.panTiltSpeedSpaceField;
            }
            set {
                this.panTiltSpeedSpaceField = value;
                this.RaisePropertyChanged("PanTiltSpeedSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ZoomSpeedSpace", Order=7)]
        public Space1DDescription[] ZoomSpeedSpace {
            get {
                return this.zoomSpeedSpaceField;
            }
            set {
                this.zoomSpeedSpaceField = value;
                this.RaisePropertyChanged("ZoomSpeedSpace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public PTZSpacesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelayOutputSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RelayMode modeField;
        
        private string delayTimeField;
        
        private RelayIdleState idleStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RelayMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=1)]
        public string DelayTime {
            get {
                return this.delayTimeField;
            }
            set {
                this.delayTimeField = value;
                this.RaisePropertyChanged("DelayTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RelayIdleState IdleState {
            get {
                return this.idleStateField;
            }
            set {
                this.idleStateField = value;
                this.RaisePropertyChanged("IdleState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayMode {
        
        /// <remarks/>
        Monostable,
        
        /// <remarks/>
        Bistable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayIdleState {
        
        /// <remarks/>
        closed,
        
        /// <remarks/>
        open,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6ConfigurationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool acceptRouterAdvertField;
        
        private bool acceptRouterAdvertFieldSpecified;
        
        private IPv6DHCPConfiguration dHCPField;
        
        private PrefixedIPv6Address[] manualField;
        
        private PrefixedIPv6Address[] linkLocalField;
        
        private PrefixedIPv6Address[] fromDHCPField;
        
        private PrefixedIPv6Address[] fromRAField;
        
        private IPv6ConfigurationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool AcceptRouterAdvert {
            get {
                return this.acceptRouterAdvertField;
            }
            set {
                this.acceptRouterAdvertField = value;
                this.RaisePropertyChanged("AcceptRouterAdvert");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AcceptRouterAdvertSpecified {
            get {
                return this.acceptRouterAdvertFieldSpecified;
            }
            set {
                this.acceptRouterAdvertFieldSpecified = value;
                this.RaisePropertyChanged("AcceptRouterAdvertSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv6DHCPConfiguration DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=2)]
        public PrefixedIPv6Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinkLocal", Order=3)]
        public PrefixedIPv6Address[] LinkLocal {
            get {
                return this.linkLocalField;
            }
            set {
                this.linkLocalField = value;
                this.RaisePropertyChanged("LinkLocal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FromDHCP", Order=4)]
        public PrefixedIPv6Address[] FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FromRA", Order=5)]
        public PrefixedIPv6Address[] FromRA {
            get {
                return this.fromRAField;
            }
            set {
                this.fromRAField = value;
                this.RaisePropertyChanged("FromRA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IPv6ConfigurationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv6NetworkInterface : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private IPv6Configuration configField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv6Configuration Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
                this.RaisePropertyChanged("Config");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PrefixedIPv4Address[] manualField;
        
        private PrefixedIPv4Address linkLocalField;
        
        private PrefixedIPv4Address fromDHCPField;
        
        private bool dHCPField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Manual", Order=0)]
        public PrefixedIPv4Address[] Manual {
            get {
                return this.manualField;
            }
            set {
                this.manualField = value;
                this.RaisePropertyChanged("Manual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PrefixedIPv4Address LinkLocal {
            get {
                return this.linkLocalField;
            }
            set {
                this.linkLocalField = value;
                this.RaisePropertyChanged("LinkLocal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public PrefixedIPv4Address FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DHCP {
            get {
                return this.dHCPField;
            }
            set {
                this.dHCPField = value;
                this.RaisePropertyChanged("DHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPv4NetworkInterface : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool enabledField;
        
        private IPv4Configuration configField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public IPv4Configuration Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
                this.RaisePropertyChanged("Config");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceLink : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkInterfaceConnectionSetting adminSettingsField;
        
        private NetworkInterfaceConnectionSetting operSettingsField;
        
        private int interfaceTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkInterfaceConnectionSetting AdminSettings {
            get {
                return this.adminSettingsField;
            }
            set {
                this.adminSettingsField = value;
                this.RaisePropertyChanged("AdminSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceConnectionSetting OperSettings {
            get {
                return this.operSettingsField;
            }
            set {
                this.operSettingsField = value;
                this.RaisePropertyChanged("OperSettings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int InterfaceType {
            get {
                return this.interfaceTypeField;
            }
            set {
                this.interfaceTypeField = value;
                this.RaisePropertyChanged("InterfaceType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterfaceInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string hwAddressField;
        
        private int mTUField;
        
        private bool mTUFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string HwAddress {
            get {
                return this.hwAddressField;
            }
            set {
                this.hwAddressField = value;
                this.RaisePropertyChanged("HwAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MTU {
            get {
                return this.mTUField;
            }
            set {
                this.mTUField = value;
                this.RaisePropertyChanged("MTU");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MTUSpecified {
            get {
                return this.mTUFieldSpecified;
            }
            set {
                this.mTUFieldSpecified = value;
                this.RaisePropertyChanged("MTUSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoSourceExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WhiteBalanceMode modeField;
        
        private float crGainField;
        
        private float cbGainField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WhiteBalanceMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float CrGain {
            get {
                return this.crGainField;
            }
            set {
                this.crGainField = value;
                this.RaisePropertyChanged("CrGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float CbGain {
            get {
                return this.cbGainField;
            }
            set {
                this.cbGainField = value;
                this.RaisePropertyChanged("CbGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WhiteBalanceMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WideDynamicRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WideDynamicMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WideDynamicMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AutoFocusMode autoFocusModeField;
        
        private float defaultSpeedField;
        
        private float nearLimitField;
        
        private float farLimitField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AutoFocusMode AutoFocusMode {
            get {
                return this.autoFocusModeField;
            }
            set {
                this.autoFocusModeField = value;
                this.RaisePropertyChanged("AutoFocusMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float DefaultSpeed {
            get {
                return this.defaultSpeedField;
            }
            set {
                this.defaultSpeedField = value;
                this.RaisePropertyChanged("DefaultSpeed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float NearLimit {
            get {
                return this.nearLimitField;
            }
            set {
                this.nearLimitField = value;
                this.RaisePropertyChanged("NearLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float FarLimit {
            get {
                return this.farLimitField;
            }
            set {
                this.farLimitField = value;
                this.RaisePropertyChanged("FarLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum AutoFocusMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Rectangle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float bottomField;
        
        private bool bottomFieldSpecified;
        
        private float topField;
        
        private bool topFieldSpecified;
        
        private float rightField;
        
        private bool rightFieldSpecified;
        
        private float leftField;
        
        private bool leftFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bottomSpecified {
            get {
                return this.bottomFieldSpecified;
            }
            set {
                this.bottomFieldSpecified = value;
                this.RaisePropertyChanged("bottomSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("top");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topSpecified {
            get {
                return this.topFieldSpecified;
            }
            set {
                this.topFieldSpecified = value;
                this.RaisePropertyChanged("topSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("right");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rightSpecified {
            get {
                return this.rightFieldSpecified;
            }
            set {
                this.rightFieldSpecified = value;
                this.RaisePropertyChanged("rightSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leftSpecified {
            get {
                return this.leftFieldSpecified;
            }
            set {
                this.leftFieldSpecified = value;
                this.RaisePropertyChanged("leftSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Exposure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExposureMode modeField;
        
        private ExposurePriority priorityField;
        
        private Rectangle windowField;
        
        private float minExposureTimeField;
        
        private float maxExposureTimeField;
        
        private float minGainField;
        
        private float maxGainField;
        
        private float minIrisField;
        
        private float maxIrisField;
        
        private float exposureTimeField;
        
        private float gainField;
        
        private float irisField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExposureMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ExposurePriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Rectangle Window {
            get {
                return this.windowField;
            }
            set {
                this.windowField = value;
                this.RaisePropertyChanged("Window");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float MinExposureTime {
            get {
                return this.minExposureTimeField;
            }
            set {
                this.minExposureTimeField = value;
                this.RaisePropertyChanged("MinExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float MaxExposureTime {
            get {
                return this.maxExposureTimeField;
            }
            set {
                this.maxExposureTimeField = value;
                this.RaisePropertyChanged("MaxExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public float MinGain {
            get {
                return this.minGainField;
            }
            set {
                this.minGainField = value;
                this.RaisePropertyChanged("MinGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public float MaxGain {
            get {
                return this.maxGainField;
            }
            set {
                this.maxGainField = value;
                this.RaisePropertyChanged("MaxGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float MinIris {
            get {
                return this.minIrisField;
            }
            set {
                this.minIrisField = value;
                this.RaisePropertyChanged("MinIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public float MaxIris {
            get {
                return this.maxIrisField;
            }
            set {
                this.maxIrisField = value;
                this.RaisePropertyChanged("MaxIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public float ExposureTime {
            get {
                return this.exposureTimeField;
            }
            set {
                this.exposureTimeField = value;
                this.RaisePropertyChanged("ExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public float Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
                this.RaisePropertyChanged("Gain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public float Iris {
            get {
                return this.irisField;
            }
            set {
                this.irisField = value;
                this.RaisePropertyChanged("Iris");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposureMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposurePriority {
        
        /// <remarks/>
        LowNoise,
        
        /// <remarks/>
        FrameRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BacklightCompensation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensationMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum BacklightCompensationMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensation backlightCompensationField;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private float colorSaturationField;
        
        private bool colorSaturationFieldSpecified;
        
        private float contrastField;
        
        private bool contrastFieldSpecified;
        
        private Exposure exposureField;
        
        private FocusConfiguration focusField;
        
        private IrCutFilterMode irCutFilterField;
        
        private bool irCutFilterFieldSpecified;
        
        private float sharpnessField;
        
        private bool sharpnessFieldSpecified;
        
        private WideDynamicRange wideDynamicRangeField;
        
        private WhiteBalance whiteBalanceField;
        
        private ImagingSettingsExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensation BacklightCompensation {
            get {
                return this.backlightCompensationField;
            }
            set {
                this.backlightCompensationField = value;
                this.RaisePropertyChanged("BacklightCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
                this.RaisePropertyChanged("Brightness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
                this.RaisePropertyChanged("BrightnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float ColorSaturation {
            get {
                return this.colorSaturationField;
            }
            set {
                this.colorSaturationField = value;
                this.RaisePropertyChanged("ColorSaturation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSaturationSpecified {
            get {
                return this.colorSaturationFieldSpecified;
            }
            set {
                this.colorSaturationFieldSpecified = value;
                this.RaisePropertyChanged("ColorSaturationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float Contrast {
            get {
                return this.contrastField;
            }
            set {
                this.contrastField = value;
                this.RaisePropertyChanged("Contrast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified {
            get {
                return this.contrastFieldSpecified;
            }
            set {
                this.contrastFieldSpecified = value;
                this.RaisePropertyChanged("ContrastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Exposure Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
                this.RaisePropertyChanged("Exposure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FocusConfiguration Focus {
            get {
                return this.focusField;
            }
            set {
                this.focusField = value;
                this.RaisePropertyChanged("Focus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IrCutFilterMode IrCutFilter {
            get {
                return this.irCutFilterField;
            }
            set {
                this.irCutFilterField = value;
                this.RaisePropertyChanged("IrCutFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrCutFilterSpecified {
            get {
                return this.irCutFilterFieldSpecified;
            }
            set {
                this.irCutFilterFieldSpecified = value;
                this.RaisePropertyChanged("IrCutFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float Sharpness {
            get {
                return this.sharpnessField;
            }
            set {
                this.sharpnessField = value;
                this.RaisePropertyChanged("Sharpness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharpnessSpecified {
            get {
                return this.sharpnessFieldSpecified;
            }
            set {
                this.sharpnessFieldSpecified = value;
                this.RaisePropertyChanged("SharpnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public WideDynamicRange WideDynamicRange {
            get {
                return this.wideDynamicRangeField;
            }
            set {
                this.wideDynamicRangeField = value;
                this.RaisePropertyChanged("WideDynamicRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public WhiteBalance WhiteBalance {
            get {
                return this.whiteBalanceField;
            }
            set {
                this.whiteBalanceField = value;
                this.RaisePropertyChanged("WhiteBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public ImagingSettingsExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IrCutFilterMode {
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        AUTO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoResolution : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int widthField;
        
        private int heightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PTZNode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelayOutput))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NetworkInterface))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AudioSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VideoSource))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("token");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZNode : DeviceEntity {
        
        private string nameField;
        
        private PTZSpaces supportedPTZSpacesField;
        
        private int maximumNumberOfPresetsField;
        
        private bool homeSupportedField;
        
        private string[] auxiliaryCommandsField;
        
        private PTZNodeExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PTZSpaces SupportedPTZSpaces {
            get {
                return this.supportedPTZSpacesField;
            }
            set {
                this.supportedPTZSpacesField = value;
                this.RaisePropertyChanged("SupportedPTZSpaces");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int MaximumNumberOfPresets {
            get {
                return this.maximumNumberOfPresetsField;
            }
            set {
                this.maximumNumberOfPresetsField = value;
                this.RaisePropertyChanged("MaximumNumberOfPresets");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool HomeSupported {
            get {
                return this.homeSupportedField;
            }
            set {
                this.homeSupportedField = value;
                this.RaisePropertyChanged("HomeSupported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AuxiliaryCommands", Order=4)]
        public string[] AuxiliaryCommands {
            get {
                return this.auxiliaryCommandsField;
            }
            set {
                this.auxiliaryCommandsField = value;
                this.RaisePropertyChanged("AuxiliaryCommands");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public PTZNodeExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelayOutput : DeviceEntity {
        
        private RelayOutputSettings propertiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RelayOutputSettings Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkInterface : DeviceEntity {
        
        private bool enabledField;
        
        private NetworkInterfaceInfo infoField;
        
        private NetworkInterfaceLink linkField;
        
        private IPv4NetworkInterface iPv4Field;
        
        private IPv6NetworkInterface iPv6Field;
        
        private NetworkInterfaceExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
                this.RaisePropertyChanged("Enabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkInterfaceInfo Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
                this.RaisePropertyChanged("Info");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public NetworkInterfaceLink Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
                this.RaisePropertyChanged("Link");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IPv4NetworkInterface IPv4 {
            get {
                return this.iPv4Field;
            }
            set {
                this.iPv4Field = value;
                this.RaisePropertyChanged("IPv4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public IPv6NetworkInterface IPv6 {
            get {
                return this.iPv6Field;
            }
            set {
                this.iPv6Field = value;
                this.RaisePropertyChanged("IPv6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public NetworkInterfaceExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AudioSource : DeviceEntity {
        
        private int channelsField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
                this.RaisePropertyChanged("Channels");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class VideoSource : DeviceEntity {
        
        private float framerateField;
        
        private VideoResolution resolutionField;
        
        private ImagingSettings imagingField;
        
        private VideoSourceExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Framerate {
            get {
                return this.framerateField;
            }
            set {
                this.framerateField = value;
                this.RaisePropertyChanged("Framerate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public VideoResolution Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
                this.RaisePropertyChanged("Resolution");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ImagingSettings Imaging {
            get {
                return this.imagingField;
            }
            set {
                this.imagingField = value;
                this.RaisePropertyChanged("Imaging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public VideoSourceExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DynamicDNSInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DynamicDNSInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DynamicDNSType typeField;
        
        private string nameField;
        
        private string tTLField;
        
        private DynamicDNSInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DynamicDNSType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=2)]
        public string TTL {
            get {
                return this.tTLField;
            }
            set {
                this.tTLField = value;
                this.RaisePropertyChanged("TTL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DynamicDNSInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum DynamicDNSType {
        
        /// <remarks/>
        NoUpdate,
        
        /// <remarks/>
        ClientUpdates,
        
        /// <remarks/>
        ServerUpdates,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NTPInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NTPInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private NetworkHost[] nTPFromDHCPField;
        
        private NetworkHost[] nTPManualField;
        
        private NTPInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NTPFromDHCP", Order=1)]
        public NetworkHost[] NTPFromDHCP {
            get {
                return this.nTPFromDHCPField;
            }
            set {
                this.nTPFromDHCPField = value;
                this.RaisePropertyChanged("NTPFromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NTPManual", Order=2)]
        public NetworkHost[] NTPManual {
            get {
                return this.nTPManualField;
            }
            set {
                this.nTPManualField = value;
                this.RaisePropertyChanged("NTPManual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NTPInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkHost : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NetworkHostType typeField;
        
        private string iPv4AddressField;
        
        private string iPv6AddressField;
        
        private string dNSnameField;
        
        private NetworkHostExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NetworkHostType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=2)]
        public string IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=3)]
        public string DNSname {
            get {
                return this.dNSnameField;
            }
            set {
                this.dNSnameField = value;
                this.RaisePropertyChanged("DNSname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public NetworkHostExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum NetworkHostType {
        
        /// <remarks/>
        IPv4,
        
        /// <remarks/>
        IPv6,
        
        /// <remarks/>
        DNS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkHostExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DNSInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IPAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private IPType typeField;
        
        private string iPv4AddressField;
        
        private string iPv6AddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IPType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string IPv4Address {
            get {
                return this.iPv4AddressField;
            }
            set {
                this.iPv4AddressField = value;
                this.RaisePropertyChanged("IPv4Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=2)]
        public string IPv6Address {
            get {
                return this.iPv6AddressField;
            }
            set {
                this.iPv6AddressField = value;
                this.RaisePropertyChanged("IPv6Address");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IPType {
        
        /// <remarks/>
        IPv4,
        
        /// <remarks/>
        IPv6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DNSInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private string[] searchDomainField;
        
        private IPAddress[] dNSFromDHCPField;
        
        private IPAddress[] dNSManualField;
        
        private DNSInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SearchDomain", DataType="token", Order=1)]
        public string[] SearchDomain {
            get {
                return this.searchDomainField;
            }
            set {
                this.searchDomainField = value;
                this.RaisePropertyChanged("SearchDomain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DNSFromDHCP", Order=2)]
        public IPAddress[] DNSFromDHCP {
            get {
                return this.dNSFromDHCPField;
            }
            set {
                this.dNSFromDHCPField = value;
                this.RaisePropertyChanged("DNSFromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DNSManual", Order=3)]
        public IPAddress[] DNSManual {
            get {
                return this.dNSManualField;
            }
            set {
                this.dNSManualField = value;
                this.RaisePropertyChanged("DNSManual");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public DNSInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class HostnameInformationExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class HostnameInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool fromDHCPField;
        
        private string nameField;
        
        private HostnameInformationExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool FromDHCP {
            get {
                return this.fromDHCPField;
            }
            set {
                this.fromDHCPField = value;
                this.RaisePropertyChanged("FromDHCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public HostnameInformationExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class CapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class PTZCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ProfileCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int maximumNumberOfProfilesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MaximumNumberOfProfiles {
            get {
                return this.maximumNumberOfProfilesField;
            }
            set {
                this.maximumNumberOfProfilesField = value;
                this.RaisePropertyChanged("MaximumNumberOfProfiles");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class MediaCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProfileCapabilities profileCapabilitiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ProfileCapabilities ProfileCapabilities {
            get {
                return this.profileCapabilitiesField;
            }
            set {
                this.profileCapabilitiesField = value;
                this.RaisePropertyChanged("ProfileCapabilities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RealTimeStreamingCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RealTimeStreamingCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool rTPMulticastField;
        
        private bool rTPMulticastFieldSpecified;
        
        private bool rTP_TCPField;
        
        private bool rTP_TCPFieldSpecified;
        
        private bool rTP_RTSP_TCPField;
        
        private bool rTP_RTSP_TCPFieldSpecified;
        
        private RealTimeStreamingCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool RTPMulticast {
            get {
                return this.rTPMulticastField;
            }
            set {
                this.rTPMulticastField = value;
                this.RaisePropertyChanged("RTPMulticast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTPMulticastSpecified {
            get {
                return this.rTPMulticastFieldSpecified;
            }
            set {
                this.rTPMulticastFieldSpecified = value;
                this.RaisePropertyChanged("RTPMulticastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RTP_TCP {
            get {
                return this.rTP_TCPField;
            }
            set {
                this.rTP_TCPField = value;
                this.RaisePropertyChanged("RTP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTP_TCPSpecified {
            get {
                return this.rTP_TCPFieldSpecified;
            }
            set {
                this.rTP_TCPFieldSpecified = value;
                this.RaisePropertyChanged("RTP_TCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RTP_RTSP_TCP {
            get {
                return this.rTP_RTSP_TCPField;
            }
            set {
                this.rTP_RTSP_TCPField = value;
                this.RaisePropertyChanged("RTP_RTSP_TCP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RTP_RTSP_TCPSpecified {
            get {
                return this.rTP_RTSP_TCPFieldSpecified;
            }
            set {
                this.rTP_RTSP_TCPFieldSpecified = value;
                this.RaisePropertyChanged("RTP_RTSP_TCPSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RealTimeStreamingCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class MediaCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private RealTimeStreamingCapabilities streamingCapabilitiesField;
        
        private System.Xml.XmlElement[] anyField;
        
        private MediaCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RealTimeStreamingCapabilities StreamingCapabilities {
            get {
                return this.streamingCapabilitiesField;
            }
            set {
                this.streamingCapabilitiesField = value;
                this.RaisePropertyChanged("StreamingCapabilities");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public MediaCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class EventCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool wSSubscriptionPolicySupportField;
        
        private bool wSPullPointSupportField;
        
        private bool wSPausableSubscriptionManagerInterfaceSupportField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool WSSubscriptionPolicySupport {
            get {
                return this.wSSubscriptionPolicySupportField;
            }
            set {
                this.wSSubscriptionPolicySupportField = value;
                this.RaisePropertyChanged("WSSubscriptionPolicySupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool WSPullPointSupport {
            get {
                return this.wSPullPointSupportField;
            }
            set {
                this.wSPullPointSupportField = value;
                this.RaisePropertyChanged("WSPullPointSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool WSPausableSubscriptionManagerInterfaceSupport {
            get {
                return this.wSPausableSubscriptionManagerInterfaceSupportField;
            }
            set {
                this.wSPausableSubscriptionManagerInterfaceSupportField = value;
                this.RaisePropertyChanged("WSPausableSubscriptionManagerInterfaceSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SecurityCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tLS10Field;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.0", Order=0)]
        public bool TLS10 {
            get {
                return this.tLS10Field;
            }
            set {
                this.tLS10Field = value;
                this.RaisePropertyChanged("TLS10");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.onvif.org/ver10/schema", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SecurityCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool tLS11Field;
        
        private bool tLS12Field;
        
        private bool onboardKeyGenerationField;
        
        private bool accessPolicyConfigField;
        
        private bool x509TokenField;
        
        private bool sAMLTokenField;
        
        private bool kerberosTokenField;
        
        private bool rELTokenField;
        
        private System.Xml.XmlElement[] anyField;
        
        private SecurityCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.1", Order=0)]
        public bool TLS11 {
            get {
                return this.tLS11Field;
            }
            set {
                this.tLS11Field = value;
                this.RaisePropertyChanged("TLS11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TLS1.2", Order=1)]
        public bool TLS12 {
            get {
                return this.tLS12Field;
            }
            set {
                this.tLS12Field = value;
                this.RaisePropertyChanged("TLS12");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool OnboardKeyGeneration {
            get {
                return this.onboardKeyGenerationField;
            }
            set {
                this.onboardKeyGenerationField = value;
                this.RaisePropertyChanged("OnboardKeyGeneration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool AccessPolicyConfig {
            get {
                return this.accessPolicyConfigField;
            }
            set {
                this.accessPolicyConfigField = value;
                this.RaisePropertyChanged("AccessPolicyConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("X.509Token", Order=4)]
        public bool X509Token {
            get {
                return this.x509TokenField;
            }
            set {
                this.x509TokenField = value;
                this.RaisePropertyChanged("X509Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool SAMLToken {
            get {
                return this.sAMLTokenField;
            }
            set {
                this.sAMLTokenField = value;
                this.RaisePropertyChanged("SAMLToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool KerberosToken {
            get {
                return this.kerberosTokenField;
            }
            set {
                this.kerberosTokenField = value;
                this.RaisePropertyChanged("KerberosToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool RELToken {
            get {
                return this.rELTokenField;
            }
            set {
                this.rELTokenField = value;
                this.RaisePropertyChanged("RELToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public SecurityCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IOCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class IOCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int inputConnectorsField;
        
        private bool inputConnectorsFieldSpecified;
        
        private int relayOutputsField;
        
        private bool relayOutputsFieldSpecified;
        
        private IOCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int InputConnectors {
            get {
                return this.inputConnectorsField;
            }
            set {
                this.inputConnectorsField = value;
                this.RaisePropertyChanged("InputConnectors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InputConnectorsSpecified {
            get {
                return this.inputConnectorsFieldSpecified;
            }
            set {
                this.inputConnectorsFieldSpecified = value;
                this.RaisePropertyChanged("InputConnectorsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int RelayOutputs {
            get {
                return this.relayOutputsField;
            }
            set {
                this.relayOutputsField = value;
                this.RaisePropertyChanged("RelayOutputs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelayOutputsSpecified {
            get {
                return this.relayOutputsFieldSpecified;
            }
            set {
                this.relayOutputsFieldSpecified = value;
                this.RaisePropertyChanged("RelayOutputsSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public IOCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class OnvifVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int majorField;
        
        private int minorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
                this.RaisePropertyChanged("Major");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
                this.RaisePropertyChanged("Minor");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool discoveryResolveField;
        
        private bool discoveryByeField;
        
        private bool remoteDiscoveryField;
        
        private bool systemBackupField;
        
        private bool systemLoggingField;
        
        private bool firmwareUpgradeField;
        
        private OnvifVersion[] supportedVersionsField;
        
        private SystemCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool DiscoveryResolve {
            get {
                return this.discoveryResolveField;
            }
            set {
                this.discoveryResolveField = value;
                this.RaisePropertyChanged("DiscoveryResolve");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool DiscoveryBye {
            get {
                return this.discoveryByeField;
            }
            set {
                this.discoveryByeField = value;
                this.RaisePropertyChanged("DiscoveryBye");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool RemoteDiscovery {
            get {
                return this.remoteDiscoveryField;
            }
            set {
                this.remoteDiscoveryField = value;
                this.RaisePropertyChanged("RemoteDiscovery");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool SystemBackup {
            get {
                return this.systemBackupField;
            }
            set {
                this.systemBackupField = value;
                this.RaisePropertyChanged("SystemBackup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool SystemLogging {
            get {
                return this.systemLoggingField;
            }
            set {
                this.systemLoggingField = value;
                this.RaisePropertyChanged("SystemLogging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool FirmwareUpgrade {
            get {
                return this.firmwareUpgradeField;
            }
            set {
                this.firmwareUpgradeField = value;
                this.RaisePropertyChanged("FirmwareUpgrade");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedVersions", Order=6)]
        public OnvifVersion[] SupportedVersions {
            get {
                return this.supportedVersionsField;
            }
            set {
                this.supportedVersionsField = value;
                this.RaisePropertyChanged("SupportedVersions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public SystemCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkCapabilitiesExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class NetworkCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool iPFilterField;
        
        private bool iPFilterFieldSpecified;
        
        private bool zeroConfigurationField;
        
        private bool zeroConfigurationFieldSpecified;
        
        private bool iPVersion6Field;
        
        private bool iPVersion6FieldSpecified;
        
        private bool dynDNSField;
        
        private bool dynDNSFieldSpecified;
        
        private NetworkCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool IPFilter {
            get {
                return this.iPFilterField;
            }
            set {
                this.iPFilterField = value;
                this.RaisePropertyChanged("IPFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPFilterSpecified {
            get {
                return this.iPFilterFieldSpecified;
            }
            set {
                this.iPFilterFieldSpecified = value;
                this.RaisePropertyChanged("IPFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ZeroConfiguration {
            get {
                return this.zeroConfigurationField;
            }
            set {
                this.zeroConfigurationField = value;
                this.RaisePropertyChanged("ZeroConfiguration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZeroConfigurationSpecified {
            get {
                return this.zeroConfigurationFieldSpecified;
            }
            set {
                this.zeroConfigurationFieldSpecified = value;
                this.RaisePropertyChanged("ZeroConfigurationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool IPVersion6 {
            get {
                return this.iPVersion6Field;
            }
            set {
                this.iPVersion6Field = value;
                this.RaisePropertyChanged("IPVersion6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IPVersion6Specified {
            get {
                return this.iPVersion6FieldSpecified;
            }
            set {
                this.iPVersion6FieldSpecified = value;
                this.RaisePropertyChanged("IPVersion6Specified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool DynDNS {
            get {
                return this.dynDNSField;
            }
            set {
                this.dynDNSField = value;
                this.RaisePropertyChanged("DynDNS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynDNSSpecified {
            get {
                return this.dynDNSFieldSpecified;
            }
            set {
                this.dynDNSFieldSpecified = value;
                this.RaisePropertyChanged("DynDNSSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public NetworkCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DeviceCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private NetworkCapabilities networkField;
        
        private SystemCapabilities systemField;
        
        private IOCapabilities ioField;
        
        private SecurityCapabilities securityField;
        
        private DeviceCapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public NetworkCapabilities Network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
                this.RaisePropertyChanged("Network");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SystemCapabilities System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
                this.RaisePropertyChanged("System");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public IOCapabilities IO {
            get {
                return this.ioField;
            }
            set {
                this.ioField = value;
                this.RaisePropertyChanged("IO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SecurityCapabilities Security {
            get {
                return this.securityField;
            }
            set {
                this.securityField = value;
                this.RaisePropertyChanged("Security");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public DeviceCapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AnalyticsCapabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string xAddrField;
        
        private bool ruleSupportField;
        
        private bool analyticsModuleSupportField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=0)]
        public string XAddr {
            get {
                return this.xAddrField;
            }
            set {
                this.xAddrField = value;
                this.RaisePropertyChanged("XAddr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool RuleSupport {
            get {
                return this.ruleSupportField;
            }
            set {
                this.ruleSupportField = value;
                this.RaisePropertyChanged("RuleSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool AnalyticsModuleSupport {
            get {
                return this.analyticsModuleSupportField;
            }
            set {
                this.analyticsModuleSupportField = value;
                this.RaisePropertyChanged("AnalyticsModuleSupport");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Capabilities : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AnalyticsCapabilities analyticsField;
        
        private DeviceCapabilities deviceField;
        
        private EventCapabilities eventsField;
        
        private ImagingCapabilities imagingField;
        
        private MediaCapabilities mediaField;
        
        private PTZCapabilities pTZField;
        
        private CapabilitiesExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AnalyticsCapabilities Analytics {
            get {
                return this.analyticsField;
            }
            set {
                this.analyticsField = value;
                this.RaisePropertyChanged("Analytics");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DeviceCapabilities Device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
                this.RaisePropertyChanged("Device");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public EventCapabilities Events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
                this.RaisePropertyChanged("Events");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ImagingCapabilities Imaging {
            get {
                return this.imagingField;
            }
            set {
                this.imagingField = value;
                this.RaisePropertyChanged("Imaging");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public MediaCapabilities Media {
            get {
                return this.mediaField;
            }
            set {
                this.mediaField = value;
                this.RaisePropertyChanged("Media");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public PTZCapabilities PTZ {
            get {
                return this.pTZField;
            }
            set {
                this.pTZField = value;
                this.RaisePropertyChanged("PTZ");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public CapabilitiesExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class UserExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private UserLevel userLevelField;
        
        private UserExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public UserLevel UserLevel {
            get {
                return this.userLevelField;
            }
            set {
                this.userLevelField = value;
                this.RaisePropertyChanged("UserLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public UserExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum UserLevel {
        
        /// <remarks/>
        Administrator,
        
        /// <remarks/>
        Operator,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Anonymous,
        
        /// <remarks/>
        Extended,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Scope : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ScopeDefinition scopeDefField;
        
        private string scopeItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ScopeDefinition ScopeDef {
            get {
                return this.scopeDefField;
            }
            set {
                this.scopeDefField = value;
                this.RaisePropertyChanged("ScopeDef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=1)]
        public string ScopeItem {
            get {
                return this.scopeItemField;
            }
            set {
                this.scopeItemField = value;
                this.RaisePropertyChanged("ScopeItem");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ScopeDefinition {
        
        /// <remarks/>
        Fixed,
        
        /// <remarks/>
        Configurable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SupportInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AttachmentData binaryField;
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AttachmentData Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
                this.RaisePropertyChanged("Binary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string String {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("String");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AttachmentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Include includeField;
        
        private string contentTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.w3.org/2004/08/xop/include", Order=0)]
        public Include Include {
            get {
                return this.includeField;
            }
            set {
                this.includeField = value;
                this.RaisePropertyChanged("Include");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/2005/05/xmlmime")]
        public string contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
                this.RaisePropertyChanged("contentType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/2004/08/xop/include")]
    public partial class Include : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        private string hrefField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                this.hrefField = value;
                this.RaisePropertyChanged("href");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AttachmentData binaryField;
        
        private string stringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AttachmentData Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
                this.RaisePropertyChanged("Binary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string String {
            get {
                return this.stringField;
            }
            set {
                this.stringField = value;
                this.RaisePropertyChanged("String");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BackupFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private AttachmentData dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public AttachmentData Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("Data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemDateTimeExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class SystemDateTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SetDateTimeType dateTimeTypeField;
        
        private bool daylightSavingsField;
        
        private TimeZone timeZoneField;
        
        private DateTime uTCDateTimeField;
        
        private DateTime localDateTimeField;
        
        private SystemDateTimeExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SetDateTimeType DateTimeType {
            get {
                return this.dateTimeTypeField;
            }
            set {
                this.dateTimeTypeField = value;
                this.RaisePropertyChanged("DateTimeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool DaylightSavings {
            get {
                return this.daylightSavingsField;
            }
            set {
                this.daylightSavingsField = value;
                this.RaisePropertyChanged("DaylightSavings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public TimeZone TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
                this.RaisePropertyChanged("TimeZone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DateTime UTCDateTime {
            get {
                return this.uTCDateTimeField;
            }
            set {
                this.uTCDateTimeField = value;
                this.RaisePropertyChanged("UTCDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public DateTime LocalDateTime {
            get {
                return this.localDateTimeField;
            }
            set {
                this.localDateTimeField = value;
                this.RaisePropertyChanged("LocalDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SystemDateTimeExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class DateTime : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Time timeField;
        
        private Date dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Time Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Date Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Time : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int hourField;
        
        private int minuteField;
        
        private int secondField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
                this.RaisePropertyChanged("Hour");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
                this.RaisePropertyChanged("Minute");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
                this.RaisePropertyChanged("Second");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Date : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int yearField;
        
        private int monthField;
        
        private int dayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
                this.RaisePropertyChanged("Year");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
                this.RaisePropertyChanged("Month");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemDateAndTime", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetSystemDateAndTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.SetDateTimeType DateTimeType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public bool DaylightSavings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public onvif.services.device.TimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=3)]
        public onvif.services.device.DateTime UTCDateTime;
        
        public SetSystemDateAndTimeRequest() {
        }
        
        public SetSystemDateAndTimeRequest(onvif.services.device.SetDateTimeType DateTimeType, bool DaylightSavings, onvif.services.device.TimeZone TimeZone, onvif.services.device.DateTime UTCDateTime) {
            this.DateTimeType = DateTimeType;
            this.DaylightSavings = DaylightSavings;
            this.TimeZone = TimeZone;
            this.UTCDateTime = UTCDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemDateAndTimeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetSystemDateAndTimeResponse {
        
        public SetSystemDateAndTimeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemDateAndTime", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemDateAndTimeRequest {
        
        public GetSystemDateAndTimeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemDateAndTimeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemDateAndTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.SystemDateTime SystemDateAndTime;
        
        public GetSystemDateAndTimeResponse() {
        }
        
        public GetSystemDateAndTimeResponse(onvif.services.device.SystemDateTime SystemDateAndTime) {
            this.SystemDateAndTime = SystemDateAndTime;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum FactoryDefaultType {
        
        /// <remarks/>
        Hard,
        
        /// <remarks/>
        Soft,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemFactoryDefault", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetSystemFactoryDefaultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.FactoryDefaultType FactoryDefault;
        
        public SetSystemFactoryDefaultRequest() {
        }
        
        public SetSystemFactoryDefaultRequest(onvif.services.device.FactoryDefaultType FactoryDefault) {
            this.FactoryDefault = FactoryDefault;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSystemFactoryDefaultResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetSystemFactoryDefaultResponse {
        
        public SetSystemFactoryDefaultResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpgradeSystemFirmware", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class UpgradeSystemFirmwareRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.AttachmentData Firmware;
        
        public UpgradeSystemFirmwareRequest() {
        }
        
        public UpgradeSystemFirmwareRequest(onvif.services.device.AttachmentData Firmware) {
            this.Firmware = Firmware;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpgradeSystemFirmwareResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class UpgradeSystemFirmwareResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string Message;
        
        public UpgradeSystemFirmwareResponse() {
        }
        
        public UpgradeSystemFirmwareResponse(string Message) {
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SystemReboot", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SystemRebootRequest {
        
        public SystemRebootRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SystemRebootResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SystemRebootResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string Message;
        
        public SystemRebootResponse() {
        }
        
        public SystemRebootResponse(string Message) {
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreSystem", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RestoreSystemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("BackupFiles")]
        public BackupFile[] BackupFiles;
        
        public RestoreSystemRequest() {
        }
        
        public RestoreSystemRequest(BackupFile[] BackupFiles) {
            this.BackupFiles = BackupFiles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RestoreSystemResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RestoreSystemResponse {
        
        public RestoreSystemResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemBackup", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemBackupRequest {
        
        public GetSystemBackupRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemBackupResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemBackupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("BackupFiles")]
        public BackupFile[] BackupFiles;
        
        public GetSystemBackupResponse() {
        }
        
        public GetSystemBackupResponse(BackupFile[] BackupFiles) {
            this.BackupFiles = BackupFiles;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum SystemLogType {
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        Access,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemLog", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.SystemLogType LogType;
        
        public GetSystemLogRequest() {
        }
        
        public GetSystemLogRequest(onvif.services.device.SystemLogType LogType) {
            this.LogType = LogType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemLogResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.SystemLog SystemLog;
        
        public GetSystemLogResponse() {
        }
        
        public GetSystemLogResponse(onvif.services.device.SystemLog SystemLog) {
            this.SystemLog = SystemLog;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemSupportInformation", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemSupportInformationRequest {
        
        public GetSystemSupportInformationRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSystemSupportInformationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetSystemSupportInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.SupportInformation SupportInformation;
        
        public GetSystemSupportInformationResponse() {
        }
        
        public GetSystemSupportInformationResponse(onvif.services.device.SupportInformation SupportInformation) {
            this.SupportInformation = SupportInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetScopesRequest {
        
        public GetScopesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetScopesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Scopes")]
        public Scope[] Scopes;
        
        public GetScopesResponse() {
        }
        
        public GetScopesResponse(Scope[] Scopes) {
            this.Scopes = Scopes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Scopes", DataType="anyURI")]
        public string[] Scopes;
        
        public SetScopesRequest() {
        }
        
        public SetScopesRequest(string[] Scopes) {
            this.Scopes = Scopes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetScopesResponse {
        
        public SetScopesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public AddScopesRequest() {
        }
        
        public AddScopesRequest(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddScopesResponse {
        
        public AddScopesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveScopes", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveScopesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public RemoveScopesRequest() {
        }
        
        public RemoveScopesRequest(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveScopesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveScopesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScopeItem", DataType="anyURI")]
        public string[] ScopeItem;
        
        public RemoveScopesResponse() {
        }
        
        public RemoveScopesResponse(string[] ScopeItem) {
            this.ScopeItem = ScopeItem;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum DiscoveryMode {
        
        /// <remarks/>
        Discoverable,
        
        /// <remarks/>
        NonDiscoverable,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiscoveryMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDiscoveryModeRequest {
        
        public GetDiscoveryModeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiscoveryModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDiscoveryModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DiscoveryMode DiscoveryMode;
        
        public GetDiscoveryModeResponse() {
        }
        
        public GetDiscoveryModeResponse(onvif.services.device.DiscoveryMode DiscoveryMode) {
            this.DiscoveryMode = DiscoveryMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDiscoveryMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDiscoveryModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DiscoveryMode DiscoveryMode;
        
        public SetDiscoveryModeRequest() {
        }
        
        public SetDiscoveryModeRequest(onvif.services.device.DiscoveryMode DiscoveryMode) {
            this.DiscoveryMode = DiscoveryMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDiscoveryModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDiscoveryModeResponse {
        
        public SetDiscoveryModeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRemoteDiscoveryMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRemoteDiscoveryModeRequest {
        
        public GetRemoteDiscoveryModeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRemoteDiscoveryModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRemoteDiscoveryModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DiscoveryMode RemoteDiscoveryMode;
        
        public GetRemoteDiscoveryModeResponse() {
        }
        
        public GetRemoteDiscoveryModeResponse(onvif.services.device.DiscoveryMode RemoteDiscoveryMode) {
            this.RemoteDiscoveryMode = RemoteDiscoveryMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRemoteDiscoveryMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRemoteDiscoveryModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DiscoveryMode RemoteDiscoveryMode;
        
        public SetRemoteDiscoveryModeRequest() {
        }
        
        public SetRemoteDiscoveryModeRequest(onvif.services.device.DiscoveryMode RemoteDiscoveryMode) {
            this.RemoteDiscoveryMode = RemoteDiscoveryMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRemoteDiscoveryModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRemoteDiscoveryModeResponse {
        
        public SetRemoteDiscoveryModeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDPAddresses", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDPAddressesRequest {
        
        public GetDPAddressesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDPAddressesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDPAddressesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DPAddress")]
        public NetworkHost[] DPAddress;
        
        public GetDPAddressesResponse() {
        }
        
        public GetDPAddressesResponse(NetworkHost[] DPAddress) {
            this.DPAddress = DPAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDPAddresses", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDPAddressesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DPAddress")]
        public NetworkHost[] DPAddress;
        
        public SetDPAddressesRequest() {
        }
        
        public SetDPAddressesRequest(NetworkHost[] DPAddress) {
            this.DPAddress = DPAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDPAddressesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDPAddressesResponse {
        
        public SetDPAddressesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetUsersRequest {
        
        public GetUsersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public User[] User;
        
        public GetUsersResponse() {
        }
        
        public GetUsersResponse(User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public User[] User;
        
        public CreateUsersRequest() {
        }
        
        public CreateUsersRequest(User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateUsersResponse {
        
        public CreateUsersResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUsers", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Username")]
        public string[] Username;
        
        public DeleteUsersRequest() {
        }
        
        public DeleteUsersRequest(string[] Username) {
            this.Username = Username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUsersResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteUsersResponse {
        
        public DeleteUsersResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUser", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("User")]
        public User[] User;
        
        public SetUserRequest() {
        }
        
        public SetUserRequest(User[] User) {
            this.User = User;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetUserResponse {
        
        public SetUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWsdlUrl", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetWsdlUrlRequest {
        
        public GetWsdlUrlRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWsdlUrlResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetWsdlUrlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string WsdlUrl;
        
        public GetWsdlUrlResponse() {
        }
        
        public GetWsdlUrlResponse(string WsdlUrl) {
            this.WsdlUrl = WsdlUrl;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum CapabilityCategory {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Analytics,
        
        /// <remarks/>
        Device,
        
        /// <remarks/>
        Events,
        
        /// <remarks/>
        Imaging,
        
        /// <remarks/>
        Media,
        
        /// <remarks/>
        PTZ,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilities", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCapabilitiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Category")]
        public CapabilityCategory[] Category;
        
        public GetCapabilitiesRequest() {
        }
        
        public GetCapabilitiesRequest(CapabilityCategory[] Category) {
            this.Category = Category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCapabilitiesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCapabilitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.Capabilities Capabilities;
        
        public GetCapabilitiesResponse() {
        }
        
        public GetCapabilitiesResponse(onvif.services.device.Capabilities Capabilities) {
            this.Capabilities = Capabilities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHostname", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetHostnameRequest {
        
        public GetHostnameRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHostnameResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetHostnameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.HostnameInformation HostnameInformation;
        
        public GetHostnameResponse() {
        }
        
        public GetHostnameResponse(onvif.services.device.HostnameInformation HostnameInformation) {
            this.HostnameInformation = HostnameInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetHostname", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetHostnameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string Name;
        
        public SetHostnameRequest() {
        }
        
        public SetHostnameRequest(string Name) {
            this.Name = Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetHostnameResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetHostnameResponse {
        
        public SetHostnameResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDNSRequest {
        
        public GetDNSRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDNSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DNSInformation DNSInformation;
        
        public GetDNSResponse() {
        }
        
        public GetDNSResponse(onvif.services.device.DNSInformation DNSInformation) {
            this.DNSInformation = DNSInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDNSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool FromDHCP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("SearchDomain", DataType="token")]
        public string[] SearchDomain;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("DNSManual")]
        public IPAddress[] DNSManual;
        
        public SetDNSRequest() {
        }
        
        public SetDNSRequest(bool FromDHCP, string[] SearchDomain, IPAddress[] DNSManual) {
            this.FromDHCP = FromDHCP;
            this.SearchDomain = SearchDomain;
            this.DNSManual = DNSManual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDNSResponse {
        
        public SetDNSResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNTP", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNTPRequest {
        
        public GetNTPRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNTPResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNTPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.NTPInformation NTPInformation;
        
        public GetNTPResponse() {
        }
        
        public GetNTPResponse(onvif.services.device.NTPInformation NTPInformation) {
            this.NTPInformation = NTPInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNTP", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNTPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool FromDHCP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("NTPManual")]
        public NetworkHost[] NTPManual;
        
        public SetNTPRequest() {
        }
        
        public SetNTPRequest(bool FromDHCP, NetworkHost[] NTPManual) {
            this.FromDHCP = FromDHCP;
            this.NTPManual = NTPManual;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNTPResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNTPResponse {
        
        public SetNTPResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDynamicDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDynamicDNSRequest {
        
        public GetDynamicDNSRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDynamicDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetDynamicDNSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DynamicDNSInformation DynamicDNSInformation;
        
        public GetDynamicDNSResponse() {
        }
        
        public GetDynamicDNSResponse(onvif.services.device.DynamicDNSInformation DynamicDNSInformation) {
            this.DynamicDNSInformation = DynamicDNSInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDynamicDNS", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDynamicDNSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.DynamicDNSType Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string TTL;
        
        public SetDynamicDNSRequest() {
        }
        
        public SetDynamicDNSRequest(onvif.services.device.DynamicDNSType Type, string Name, string TTL) {
            this.Type = Type;
            this.Name = Name;
            this.TTL = TTL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDynamicDNSResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetDynamicDNSResponse {
        
        public SetDynamicDNSResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkInterfaces", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkInterfacesRequest {
        
        public GetNetworkInterfacesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkInterfacesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkInterfacesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkInterfaces")]
        public NetworkInterface[] NetworkInterfaces;
        
        public GetNetworkInterfacesResponse() {
        }
        
        public GetNetworkInterfacesResponse(NetworkInterface[] NetworkInterfaces) {
            this.NetworkInterfaces = NetworkInterfaces;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkInterfaces", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkInterfacesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string InterfaceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public onvif.services.device.NetworkInterfaceSetConfiguration NetworkInterface;
        
        public SetNetworkInterfacesRequest() {
        }
        
        public SetNetworkInterfacesRequest(string InterfaceToken, onvif.services.device.NetworkInterfaceSetConfiguration NetworkInterface) {
            this.InterfaceToken = InterfaceToken;
            this.NetworkInterface = NetworkInterface;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkInterfacesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkInterfacesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool RebootNeeded;
        
        public SetNetworkInterfacesResponse() {
        }
        
        public SetNetworkInterfacesResponse(bool RebootNeeded) {
            this.RebootNeeded = RebootNeeded;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkProtocols", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkProtocolsRequest {
        
        public GetNetworkProtocolsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkProtocolsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkProtocolsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkProtocols")]
        public NetworkProtocol[] NetworkProtocols;
        
        public GetNetworkProtocolsResponse() {
        }
        
        public GetNetworkProtocolsResponse(NetworkProtocol[] NetworkProtocols) {
            this.NetworkProtocols = NetworkProtocols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkProtocols", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkProtocolsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NetworkProtocols")]
        public NetworkProtocol[] NetworkProtocols;
        
        public SetNetworkProtocolsRequest() {
        }
        
        public SetNetworkProtocolsRequest(NetworkProtocol[] NetworkProtocols) {
            this.NetworkProtocols = NetworkProtocols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkProtocolsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkProtocolsResponse {
        
        public SetNetworkProtocolsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkDefaultGateway", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkDefaultGatewayRequest {
        
        public GetNetworkDefaultGatewayRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNetworkDefaultGatewayResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetNetworkDefaultGatewayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.NetworkGateway NetworkGateway;
        
        public GetNetworkDefaultGatewayResponse() {
        }
        
        public GetNetworkDefaultGatewayResponse(onvif.services.device.NetworkGateway NetworkGateway) {
            this.NetworkGateway = NetworkGateway;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkDefaultGateway", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkDefaultGatewayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("IPv4Address", DataType="token")]
        public string[] IPv4Address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("IPv6Address", DataType="token")]
        public string[] IPv6Address;
        
        public SetNetworkDefaultGatewayRequest() {
        }
        
        public SetNetworkDefaultGatewayRequest(string[] IPv4Address, string[] IPv6Address) {
            this.IPv4Address = IPv4Address;
            this.IPv6Address = IPv6Address;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetNetworkDefaultGatewayResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetNetworkDefaultGatewayResponse {
        
        public SetNetworkDefaultGatewayResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetZeroConfiguration", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetZeroConfigurationRequest {
        
        public GetZeroConfigurationRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetZeroConfigurationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetZeroConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.NetworkZeroConfiguration ZeroConfiguration;
        
        public GetZeroConfigurationResponse() {
        }
        
        public GetZeroConfigurationResponse(onvif.services.device.NetworkZeroConfiguration ZeroConfiguration) {
            this.ZeroConfiguration = ZeroConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetZeroConfiguration", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetZeroConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string InterfaceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public bool Enabled;
        
        public SetZeroConfigurationRequest() {
        }
        
        public SetZeroConfigurationRequest(string InterfaceToken, bool Enabled) {
            this.InterfaceToken = InterfaceToken;
            this.Enabled = Enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetZeroConfigurationResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetZeroConfigurationResponse {
        
        public SetZeroConfigurationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIPAddressFilter", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetIPAddressFilterRequest {
        
        public GetIPAddressFilterRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIPAddressFilterResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetIPAddressFilterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.IPAddressFilter IPAddressFilter;
        
        public GetIPAddressFilterResponse() {
        }
        
        public GetIPAddressFilterResponse(onvif.services.device.IPAddressFilter IPAddressFilter) {
            this.IPAddressFilter = IPAddressFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetIPAddressFilter", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetIPAddressFilterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.IPAddressFilter IPAddressFilter;
        
        public SetIPAddressFilterRequest() {
        }
        
        public SetIPAddressFilterRequest(onvif.services.device.IPAddressFilter IPAddressFilter) {
            this.IPAddressFilter = IPAddressFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetIPAddressFilterResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetIPAddressFilterResponse {
        
        public SetIPAddressFilterResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddIPAddressFilter", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddIPAddressFilterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.IPAddressFilter IPAddressFilter;
        
        public AddIPAddressFilterRequest() {
        }
        
        public AddIPAddressFilterRequest(onvif.services.device.IPAddressFilter IPAddressFilter) {
            this.IPAddressFilter = IPAddressFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddIPAddressFilterResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class AddIPAddressFilterResponse {
        
        public AddIPAddressFilterResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveIPAddressFilter", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveIPAddressFilterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.IPAddressFilter IPAddressFilter;
        
        public RemoveIPAddressFilterRequest() {
        }
        
        public RemoveIPAddressFilterRequest(onvif.services.device.IPAddressFilter IPAddressFilter) {
            this.IPAddressFilter = IPAddressFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveIPAddressFilterResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class RemoveIPAddressFilterResponse {
        
        public RemoveIPAddressFilterResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessPolicy", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetAccessPolicyRequest {
        
        public GetAccessPolicyRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccessPolicyResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetAccessPolicyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.BinaryData PolicyFile;
        
        public GetAccessPolicyResponse() {
        }
        
        public GetAccessPolicyResponse(onvif.services.device.BinaryData PolicyFile) {
            this.PolicyFile = PolicyFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAccessPolicy", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetAccessPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.BinaryData PolicyFile;
        
        public SetAccessPolicyRequest() {
        }
        
        public SetAccessPolicyRequest(onvif.services.device.BinaryData PolicyFile) {
            this.PolicyFile = PolicyFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAccessPolicyResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetAccessPolicyResponse {
        
        public SetAccessPolicyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCertificate", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateCertificateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string CertificateID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public System.DateTime ValidNotBefore;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=3)]
        public System.DateTime ValidNotAfter;
        
        public CreateCertificateRequest() {
        }
        
        public CreateCertificateRequest(string CertificateID, string Subject, System.DateTime ValidNotBefore, System.DateTime ValidNotAfter) {
            this.CertificateID = CertificateID;
            this.Subject = Subject;
            this.ValidNotBefore = ValidNotBefore;
            this.ValidNotAfter = ValidNotAfter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCertificateResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class CreateCertificateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.Certificate NvtCertificate;
        
        public CreateCertificateResponse() {
        }
        
        public CreateCertificateResponse(onvif.services.device.Certificate NvtCertificate) {
            this.NvtCertificate = NvtCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesRequest {
        
        public GetCertificatesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NvtCertificate")]
        public Certificate[] NvtCertificate;
        
        public GetCertificatesResponse() {
        }
        
        public GetCertificatesResponse(Certificate[] NvtCertificate) {
            this.NvtCertificate = NvtCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesStatus", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesStatusRequest {
        
        public GetCertificatesStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCertificatesStatusResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetCertificatesStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateStatus")]
        public CertificateStatus[] CertificateStatus;
        
        public GetCertificatesStatusResponse() {
        }
        
        public GetCertificatesStatusResponse(CertificateStatus[] CertificateStatus) {
            this.CertificateStatus = CertificateStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCertificatesStatus", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetCertificatesStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateStatus")]
        public CertificateStatus[] CertificateStatus;
        
        public SetCertificatesStatusRequest() {
        }
        
        public SetCertificatesStatusRequest(CertificateStatus[] CertificateStatus) {
            this.CertificateStatus = CertificateStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCertificatesStatusResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetCertificatesStatusResponse {
        
        public SetCertificatesStatusResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteCertificatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateID", DataType="token")]
        public string[] CertificateID;
        
        public DeleteCertificatesRequest() {
        }
        
        public DeleteCertificatesRequest(string[] CertificateID) {
            this.CertificateID = CertificateID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class DeleteCertificatesResponse {
        
        public DeleteCertificatesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPkcs10Request", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetPkcs10RequestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="token")]
        public string CertificateID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=2)]
        public onvif.services.device.BinaryData Attributes;
        
        public GetPkcs10RequestRequest() {
        }
        
        public GetPkcs10RequestRequest(string CertificateID, string Subject, onvif.services.device.BinaryData Attributes) {
            this.CertificateID = CertificateID;
            this.Subject = Subject;
            this.Attributes = Attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPkcs10RequestResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetPkcs10RequestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public onvif.services.device.BinaryData Pkcs10Request;
        
        public GetPkcs10RequestResponse() {
        }
        
        public GetPkcs10RequestResponse(onvif.services.device.BinaryData Pkcs10Request) {
            this.Pkcs10Request = Pkcs10Request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificates", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("NVTCertificate")]
        public Certificate[] NVTCertificate;
        
        public LoadCertificatesRequest() {
        }
        
        public LoadCertificatesRequest(Certificate[] NVTCertificate) {
            this.NVTCertificate = NVTCertificate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadCertificatesResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class LoadCertificatesResponse {
        
        public LoadCertificatesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientCertificateMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetClientCertificateModeRequest {
        
        public GetClientCertificateModeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientCertificateModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetClientCertificateModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool Enabled;
        
        public GetClientCertificateModeResponse() {
        }
        
        public GetClientCertificateModeResponse(bool Enabled) {
            this.Enabled = Enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetClientCertificateMode", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetClientCertificateModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public bool Enabled;
        
        public SetClientCertificateModeRequest() {
        }
        
        public SetClientCertificateModeRequest(bool Enabled) {
            this.Enabled = Enabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetClientCertificateModeResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetClientCertificateModeResponse {
        
        public SetClientCertificateModeResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayOutputs", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRelayOutputsRequest {
        
        public GetRelayOutputsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRelayOutputsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class GetRelayOutputsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("RelayOutputs")]
        public RelayOutput[] RelayOutputs;
        
        public GetRelayOutputsResponse() {
        }
        
        public GetRelayOutputsResponse(RelayOutput[] RelayOutputs) {
            this.RelayOutputs = RelayOutputs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRelayOutputSettings", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRelayOutputSettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string RelayOutputToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public onvif.services.device.RelayOutputSettings Properties;
        
        public SetRelayOutputSettingsRequest() {
        }
        
        public SetRelayOutputSettingsRequest(string RelayOutputToken, onvif.services.device.RelayOutputSettings Properties) {
            this.RelayOutputToken = RelayOutputToken;
            this.Properties = Properties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRelayOutputSettingsResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRelayOutputSettingsResponse {
        
        public SetRelayOutputSettingsResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum RelayLogicalState {
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        inactive,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRelayOutputState", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRelayOutputStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=0)]
        public string RelayOutputToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/device/wsdl", Order=1)]
        public onvif.services.device.RelayLogicalState LogicalState;
        
        public SetRelayOutputStateRequest() {
        }
        
        public SetRelayOutputStateRequest(string RelayOutputToken, onvif.services.device.RelayLogicalState LogicalState) {
            this.RelayOutputToken = RelayOutputToken;
            this.LogicalState = LogicalState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetRelayOutputStateResponse", WrapperNamespace="http://www.onvif.org/ver10/device/wsdl", IsWrapped=true)]
    public partial class SetRelayOutputStateResponse {
        
        public SetRelayOutputStateResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DeviceChannel : onvif.services.device.Device, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetDeviceInformationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetDeviceInformationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetSystemDateAndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetSystemDateAndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetSystemDateAndTimeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetSystemDateAndTimeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemDateAndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemDateAndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetSystemDateAndTimeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetSystemDateAndTimeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetSystemFactoryDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetSystemFactoryDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetSystemFactoryDefaultResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetSystemFactoryDefaultResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpgradeSystemFirmwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpgradeSystemFirmwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.UpgradeSystemFirmwareResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.UpgradeSystemFirmwareResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SystemRebootCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SystemRebootCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SystemRebootResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SystemRebootResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestoreSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RestoreSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.RestoreSystemResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.RestoreSystemResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetSystemBackupResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetSystemBackupResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetSystemLogResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetSystemLogResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSystemSupportInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSystemSupportInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetSystemSupportInformationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetSystemSupportInformationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetScopesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetScopesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetScopesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetScopesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.AddScopesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.AddScopesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveScopesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveScopesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.RemoveScopesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.RemoveScopesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetDiscoveryModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetDiscoveryModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetDiscoveryModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetDiscoveryModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRemoteDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRemoteDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetRemoteDiscoveryModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetRemoteDiscoveryModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetRemoteDiscoveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetRemoteDiscoveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetRemoteDiscoveryModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetRemoteDiscoveryModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDPAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDPAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetDPAddressesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetDPAddressesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDPAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDPAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetDPAddressesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetDPAddressesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetUsersResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetUsersResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.CreateUsersResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.CreateUsersResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.DeleteUsersResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.DeleteUsersResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetUserResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetUserResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWsdlUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWsdlUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetWsdlUrlResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetWsdlUrlResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetCapabilitiesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetCapabilitiesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHostnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHostnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetHostnameResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetHostnameResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetHostnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetHostnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetHostnameResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetHostnameResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetDNSResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetDNSResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetDNSResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetDNSResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetNTPResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetNTPResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetNTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetNTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetNTPResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetNTPResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDynamicDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDynamicDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetDynamicDNSResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetDynamicDNSResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDynamicDNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDynamicDNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetDynamicDNSResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetDynamicDNSResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetNetworkInterfacesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetNetworkInterfacesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetNetworkInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetNetworkInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetNetworkInterfacesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetNetworkInterfacesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkProtocolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkProtocolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetNetworkProtocolsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetNetworkProtocolsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetNetworkProtocolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetNetworkProtocolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetNetworkProtocolsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetNetworkProtocolsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkDefaultGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkDefaultGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetNetworkDefaultGatewayResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetNetworkDefaultGatewayResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetNetworkDefaultGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetNetworkDefaultGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetNetworkDefaultGatewayResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetNetworkDefaultGatewayResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZeroConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZeroConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetZeroConfigurationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetZeroConfigurationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetZeroConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetZeroConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetZeroConfigurationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetZeroConfigurationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIPAddressFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIPAddressFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetIPAddressFilterResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetIPAddressFilterResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetIPAddressFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetIPAddressFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetIPAddressFilterResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetIPAddressFilterResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddIPAddressFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddIPAddressFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.AddIPAddressFilterResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.AddIPAddressFilterResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveIPAddressFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveIPAddressFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.RemoveIPAddressFilterResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.RemoveIPAddressFilterResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccessPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccessPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetAccessPolicyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetAccessPolicyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetAccessPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetAccessPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetAccessPolicyResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetAccessPolicyResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.CreateCertificateResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.CreateCertificateResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetCertificatesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetCertificatesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificatesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificatesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetCertificatesStatusResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetCertificatesStatusResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetCertificatesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetCertificatesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetCertificatesStatusResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetCertificatesStatusResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.DeleteCertificatesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.DeleteCertificatesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPkcs10RequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPkcs10RequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetPkcs10RequestResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetPkcs10RequestResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.LoadCertificatesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.LoadCertificatesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientCertificateModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientCertificateModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetClientCertificateModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetClientCertificateModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetClientCertificateModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetClientCertificateModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetClientCertificateModeResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetClientCertificateModeResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelayOutputsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelayOutputsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.GetRelayOutputsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.GetRelayOutputsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetRelayOutputSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetRelayOutputSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetRelayOutputSettingsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetRelayOutputSettingsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetRelayOutputStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetRelayOutputStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.device.SetRelayOutputStateResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.device.SetRelayOutputStateResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceClient : System.ServiceModel.ClientBase<onvif.services.device.Device>, onvif.services.device.Device {
        
        private BeginOperationDelegate onBeginGetDeviceInformationDelegate;
        
        private EndOperationDelegate onEndGetDeviceInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSystemDateAndTimeDelegate;
        
        private EndOperationDelegate onEndSetSystemDateAndTimeDelegate;
        
        private System.Threading.SendOrPostCallback onSetSystemDateAndTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemDateAndTimeDelegate;
        
        private EndOperationDelegate onEndGetSystemDateAndTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemDateAndTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetSystemFactoryDefaultDelegate;
        
        private EndOperationDelegate onEndSetSystemFactoryDefaultDelegate;
        
        private System.Threading.SendOrPostCallback onSetSystemFactoryDefaultCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpgradeSystemFirmwareDelegate;
        
        private EndOperationDelegate onEndUpgradeSystemFirmwareDelegate;
        
        private System.Threading.SendOrPostCallback onUpgradeSystemFirmwareCompletedDelegate;
        
        private BeginOperationDelegate onBeginSystemRebootDelegate;
        
        private EndOperationDelegate onEndSystemRebootDelegate;
        
        private System.Threading.SendOrPostCallback onSystemRebootCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestoreSystemDelegate;
        
        private EndOperationDelegate onEndRestoreSystemDelegate;
        
        private System.Threading.SendOrPostCallback onRestoreSystemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemBackupDelegate;
        
        private EndOperationDelegate onEndGetSystemBackupDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemBackupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemLogDelegate;
        
        private EndOperationDelegate onEndGetSystemLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSystemSupportInformationDelegate;
        
        private EndOperationDelegate onEndGetSystemSupportInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetSystemSupportInformationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScopesDelegate;
        
        private EndOperationDelegate onEndGetScopesDelegate;
        
        private System.Threading.SendOrPostCallback onGetScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetScopesDelegate;
        
        private EndOperationDelegate onEndSetScopesDelegate;
        
        private System.Threading.SendOrPostCallback onSetScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddScopesDelegate;
        
        private EndOperationDelegate onEndAddScopesDelegate;
        
        private System.Threading.SendOrPostCallback onAddScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveScopesDelegate;
        
        private EndOperationDelegate onEndRemoveScopesDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveScopesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndGetDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndSetDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRemoteDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndGetRemoteDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRemoteDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRemoteDiscoveryModeDelegate;
        
        private EndOperationDelegate onEndSetRemoteDiscoveryModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetRemoteDiscoveryModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDPAddressesDelegate;
        
        private EndOperationDelegate onEndGetDPAddressesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDPAddressesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDPAddressesDelegate;
        
        private EndOperationDelegate onEndSetDPAddressesDelegate;
        
        private System.Threading.SendOrPostCallback onSetDPAddressesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUsersDelegate;
        
        private EndOperationDelegate onEndCreateUsersDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUsersDelegate;
        
        private EndOperationDelegate onEndDeleteUsersDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetUserDelegate;
        
        private EndOperationDelegate onEndSetUserDelegate;
        
        private System.Threading.SendOrPostCallback onSetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWsdlUrlDelegate;
        
        private EndOperationDelegate onEndGetWsdlUrlDelegate;
        
        private System.Threading.SendOrPostCallback onGetWsdlUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCapabilitiesDelegate;
        
        private EndOperationDelegate onEndGetCapabilitiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCapabilitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHostnameDelegate;
        
        private EndOperationDelegate onEndGetHostnameDelegate;
        
        private System.Threading.SendOrPostCallback onGetHostnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetHostnameDelegate;
        
        private EndOperationDelegate onEndSetHostnameDelegate;
        
        private System.Threading.SendOrPostCallback onSetHostnameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDNSDelegate;
        
        private EndOperationDelegate onEndGetDNSDelegate;
        
        private System.Threading.SendOrPostCallback onGetDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDNSDelegate;
        
        private EndOperationDelegate onEndSetDNSDelegate;
        
        private System.Threading.SendOrPostCallback onSetDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNTPDelegate;
        
        private EndOperationDelegate onEndGetNTPDelegate;
        
        private System.Threading.SendOrPostCallback onGetNTPCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNTPDelegate;
        
        private EndOperationDelegate onEndSetNTPDelegate;
        
        private System.Threading.SendOrPostCallback onSetNTPCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDynamicDNSDelegate;
        
        private EndOperationDelegate onEndGetDynamicDNSDelegate;
        
        private System.Threading.SendOrPostCallback onGetDynamicDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDynamicDNSDelegate;
        
        private EndOperationDelegate onEndSetDynamicDNSDelegate;
        
        private System.Threading.SendOrPostCallback onSetDynamicDNSCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkInterfacesDelegate;
        
        private EndOperationDelegate onEndGetNetworkInterfacesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkInterfacesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkInterfacesDelegate;
        
        private EndOperationDelegate onEndSetNetworkInterfacesDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkInterfacesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkProtocolsDelegate;
        
        private EndOperationDelegate onEndGetNetworkProtocolsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkProtocolsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkProtocolsDelegate;
        
        private EndOperationDelegate onEndSetNetworkProtocolsDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkProtocolsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkDefaultGatewayDelegate;
        
        private EndOperationDelegate onEndGetNetworkDefaultGatewayDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkDefaultGatewayCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetNetworkDefaultGatewayDelegate;
        
        private EndOperationDelegate onEndSetNetworkDefaultGatewayDelegate;
        
        private System.Threading.SendOrPostCallback onSetNetworkDefaultGatewayCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZeroConfigurationDelegate;
        
        private EndOperationDelegate onEndGetZeroConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetZeroConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetZeroConfigurationDelegate;
        
        private EndOperationDelegate onEndSetZeroConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onSetZeroConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndGetIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onGetIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndSetIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onSetIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndAddIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onAddIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveIPAddressFilterDelegate;
        
        private EndOperationDelegate onEndRemoveIPAddressFilterDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveIPAddressFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccessPolicyDelegate;
        
        private EndOperationDelegate onEndGetAccessPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccessPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetAccessPolicyDelegate;
        
        private EndOperationDelegate onEndSetAccessPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onSetAccessPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCertificateDelegate;
        
        private EndOperationDelegate onEndCreateCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificatesDelegate;
        
        private EndOperationDelegate onEndGetCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificatesStatusDelegate;
        
        private EndOperationDelegate onEndGetCertificatesStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificatesStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetCertificatesStatusDelegate;
        
        private EndOperationDelegate onEndSetCertificatesStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetCertificatesStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCertificatesDelegate;
        
        private EndOperationDelegate onEndDeleteCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPkcs10RequestDelegate;
        
        private EndOperationDelegate onEndGetPkcs10RequestDelegate;
        
        private System.Threading.SendOrPostCallback onGetPkcs10RequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCertificatesDelegate;
        
        private EndOperationDelegate onEndLoadCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientCertificateModeDelegate;
        
        private EndOperationDelegate onEndGetClientCertificateModeDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientCertificateModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetClientCertificateModeDelegate;
        
        private EndOperationDelegate onEndSetClientCertificateModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetClientCertificateModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelayOutputsDelegate;
        
        private EndOperationDelegate onEndGetRelayOutputsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelayOutputsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRelayOutputSettingsDelegate;
        
        private EndOperationDelegate onEndSetRelayOutputSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSetRelayOutputSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetRelayOutputStateDelegate;
        
        private EndOperationDelegate onEndSetRelayOutputStateDelegate;
        
        private System.Threading.SendOrPostCallback onSetRelayOutputStateCompletedDelegate;
        
        public DeviceClient() {
        }
        
        public DeviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDeviceInformationCompletedEventArgs> GetDeviceInformationCompleted;
        
        public event System.EventHandler<SetSystemDateAndTimeCompletedEventArgs> SetSystemDateAndTimeCompleted;
        
        public event System.EventHandler<GetSystemDateAndTimeCompletedEventArgs> GetSystemDateAndTimeCompleted;
        
        public event System.EventHandler<SetSystemFactoryDefaultCompletedEventArgs> SetSystemFactoryDefaultCompleted;
        
        public event System.EventHandler<UpgradeSystemFirmwareCompletedEventArgs> UpgradeSystemFirmwareCompleted;
        
        public event System.EventHandler<SystemRebootCompletedEventArgs> SystemRebootCompleted;
        
        public event System.EventHandler<RestoreSystemCompletedEventArgs> RestoreSystemCompleted;
        
        public event System.EventHandler<GetSystemBackupCompletedEventArgs> GetSystemBackupCompleted;
        
        public event System.EventHandler<GetSystemLogCompletedEventArgs> GetSystemLogCompleted;
        
        public event System.EventHandler<GetSystemSupportInformationCompletedEventArgs> GetSystemSupportInformationCompleted;
        
        public event System.EventHandler<GetScopesCompletedEventArgs> GetScopesCompleted;
        
        public event System.EventHandler<SetScopesCompletedEventArgs> SetScopesCompleted;
        
        public event System.EventHandler<AddScopesCompletedEventArgs> AddScopesCompleted;
        
        public event System.EventHandler<RemoveScopesCompletedEventArgs> RemoveScopesCompleted;
        
        public event System.EventHandler<GetDiscoveryModeCompletedEventArgs> GetDiscoveryModeCompleted;
        
        public event System.EventHandler<SetDiscoveryModeCompletedEventArgs> SetDiscoveryModeCompleted;
        
        public event System.EventHandler<GetRemoteDiscoveryModeCompletedEventArgs> GetRemoteDiscoveryModeCompleted;
        
        public event System.EventHandler<SetRemoteDiscoveryModeCompletedEventArgs> SetRemoteDiscoveryModeCompleted;
        
        public event System.EventHandler<GetDPAddressesCompletedEventArgs> GetDPAddressesCompleted;
        
        public event System.EventHandler<SetDPAddressesCompletedEventArgs> SetDPAddressesCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<CreateUsersCompletedEventArgs> CreateUsersCompleted;
        
        public event System.EventHandler<DeleteUsersCompletedEventArgs> DeleteUsersCompleted;
        
        public event System.EventHandler<SetUserCompletedEventArgs> SetUserCompleted;
        
        public event System.EventHandler<GetWsdlUrlCompletedEventArgs> GetWsdlUrlCompleted;
        
        public event System.EventHandler<GetCapabilitiesCompletedEventArgs> GetCapabilitiesCompleted;
        
        public event System.EventHandler<GetHostnameCompletedEventArgs> GetHostnameCompleted;
        
        public event System.EventHandler<SetHostnameCompletedEventArgs> SetHostnameCompleted;
        
        public event System.EventHandler<GetDNSCompletedEventArgs> GetDNSCompleted;
        
        public event System.EventHandler<SetDNSCompletedEventArgs> SetDNSCompleted;
        
        public event System.EventHandler<GetNTPCompletedEventArgs> GetNTPCompleted;
        
        public event System.EventHandler<SetNTPCompletedEventArgs> SetNTPCompleted;
        
        public event System.EventHandler<GetDynamicDNSCompletedEventArgs> GetDynamicDNSCompleted;
        
        public event System.EventHandler<SetDynamicDNSCompletedEventArgs> SetDynamicDNSCompleted;
        
        public event System.EventHandler<GetNetworkInterfacesCompletedEventArgs> GetNetworkInterfacesCompleted;
        
        public event System.EventHandler<SetNetworkInterfacesCompletedEventArgs> SetNetworkInterfacesCompleted;
        
        public event System.EventHandler<GetNetworkProtocolsCompletedEventArgs> GetNetworkProtocolsCompleted;
        
        public event System.EventHandler<SetNetworkProtocolsCompletedEventArgs> SetNetworkProtocolsCompleted;
        
        public event System.EventHandler<GetNetworkDefaultGatewayCompletedEventArgs> GetNetworkDefaultGatewayCompleted;
        
        public event System.EventHandler<SetNetworkDefaultGatewayCompletedEventArgs> SetNetworkDefaultGatewayCompleted;
        
        public event System.EventHandler<GetZeroConfigurationCompletedEventArgs> GetZeroConfigurationCompleted;
        
        public event System.EventHandler<SetZeroConfigurationCompletedEventArgs> SetZeroConfigurationCompleted;
        
        public event System.EventHandler<GetIPAddressFilterCompletedEventArgs> GetIPAddressFilterCompleted;
        
        public event System.EventHandler<SetIPAddressFilterCompletedEventArgs> SetIPAddressFilterCompleted;
        
        public event System.EventHandler<AddIPAddressFilterCompletedEventArgs> AddIPAddressFilterCompleted;
        
        public event System.EventHandler<RemoveIPAddressFilterCompletedEventArgs> RemoveIPAddressFilterCompleted;
        
        public event System.EventHandler<GetAccessPolicyCompletedEventArgs> GetAccessPolicyCompleted;
        
        public event System.EventHandler<SetAccessPolicyCompletedEventArgs> SetAccessPolicyCompleted;
        
        public event System.EventHandler<CreateCertificateCompletedEventArgs> CreateCertificateCompleted;
        
        public event System.EventHandler<GetCertificatesCompletedEventArgs> GetCertificatesCompleted;
        
        public event System.EventHandler<GetCertificatesStatusCompletedEventArgs> GetCertificatesStatusCompleted;
        
        public event System.EventHandler<SetCertificatesStatusCompletedEventArgs> SetCertificatesStatusCompleted;
        
        public event System.EventHandler<DeleteCertificatesCompletedEventArgs> DeleteCertificatesCompleted;
        
        public event System.EventHandler<GetPkcs10RequestCompletedEventArgs> GetPkcs10RequestCompleted;
        
        public event System.EventHandler<LoadCertificatesCompletedEventArgs> LoadCertificatesCompleted;
        
        public event System.EventHandler<GetClientCertificateModeCompletedEventArgs> GetClientCertificateModeCompleted;
        
        public event System.EventHandler<SetClientCertificateModeCompletedEventArgs> SetClientCertificateModeCompleted;
        
        public event System.EventHandler<GetRelayOutputsCompletedEventArgs> GetRelayOutputsCompleted;
        
        public event System.EventHandler<SetRelayOutputSettingsCompletedEventArgs> SetRelayOutputSettingsCompleted;
        
        public event System.EventHandler<SetRelayOutputStateCompletedEventArgs> SetRelayOutputStateCompleted;
        
        public onvif.services.device.GetDeviceInformationResponse GetDeviceInformation(onvif.services.device.GetDeviceInformationRequest request) {
            return base.Channel.GetDeviceInformation(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeviceInformation(onvif.services.device.GetDeviceInformationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceInformation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetDeviceInformationResponse EndGetDeviceInformation(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetDeviceInformationRequest request = ((onvif.services.device.GetDeviceInformationRequest)(inValues[0]));
            return this.BeginGetDeviceInformation(request, callback, asyncState);
        }
        
        private object[] OnEndGetDeviceInformation(System.IAsyncResult result) {
            onvif.services.device.GetDeviceInformationResponse retVal = this.EndGetDeviceInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceInformationCompleted(object state) {
            if ((this.GetDeviceInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceInformationCompleted(this, new GetDeviceInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceInformationAsync(onvif.services.device.GetDeviceInformationRequest request) {
            this.GetDeviceInformationAsync(request, null);
        }
        
        public void GetDeviceInformationAsync(onvif.services.device.GetDeviceInformationRequest request, object userState) {
            if ((this.onBeginGetDeviceInformationDelegate == null)) {
                this.onBeginGetDeviceInformationDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceInformation);
            }
            if ((this.onEndGetDeviceInformationDelegate == null)) {
                this.onEndGetDeviceInformationDelegate = new EndOperationDelegate(this.OnEndGetDeviceInformation);
            }
            if ((this.onGetDeviceInformationCompletedDelegate == null)) {
                this.onGetDeviceInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceInformationDelegate, new object[] {
                        request}, this.onEndGetDeviceInformationDelegate, this.onGetDeviceInformationCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetSystemDateAndTimeResponse SetSystemDateAndTime(onvif.services.device.SetSystemDateAndTimeRequest request) {
            return base.Channel.SetSystemDateAndTime(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSystemDateAndTime(onvif.services.device.SetSystemDateAndTimeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSystemDateAndTime(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetSystemDateAndTimeResponse EndSetSystemDateAndTime(System.IAsyncResult result) {
            return base.Channel.EndSetSystemDateAndTime(result);
        }
        
        private System.IAsyncResult OnBeginSetSystemDateAndTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetSystemDateAndTimeRequest request = ((onvif.services.device.SetSystemDateAndTimeRequest)(inValues[0]));
            return this.BeginSetSystemDateAndTime(request, callback, asyncState);
        }
        
        private object[] OnEndSetSystemDateAndTime(System.IAsyncResult result) {
            onvif.services.device.SetSystemDateAndTimeResponse retVal = this.EndSetSystemDateAndTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetSystemDateAndTimeCompleted(object state) {
            if ((this.SetSystemDateAndTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSystemDateAndTimeCompleted(this, new SetSystemDateAndTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSystemDateAndTimeAsync(onvif.services.device.SetSystemDateAndTimeRequest request) {
            this.SetSystemDateAndTimeAsync(request, null);
        }
        
        public void SetSystemDateAndTimeAsync(onvif.services.device.SetSystemDateAndTimeRequest request, object userState) {
            if ((this.onBeginSetSystemDateAndTimeDelegate == null)) {
                this.onBeginSetSystemDateAndTimeDelegate = new BeginOperationDelegate(this.OnBeginSetSystemDateAndTime);
            }
            if ((this.onEndSetSystemDateAndTimeDelegate == null)) {
                this.onEndSetSystemDateAndTimeDelegate = new EndOperationDelegate(this.OnEndSetSystemDateAndTime);
            }
            if ((this.onSetSystemDateAndTimeCompletedDelegate == null)) {
                this.onSetSystemDateAndTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSystemDateAndTimeCompleted);
            }
            base.InvokeAsync(this.onBeginSetSystemDateAndTimeDelegate, new object[] {
                        request}, this.onEndSetSystemDateAndTimeDelegate, this.onSetSystemDateAndTimeCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetSystemDateAndTimeResponse GetSystemDateAndTime(onvif.services.device.GetSystemDateAndTimeRequest request) {
            return base.Channel.GetSystemDateAndTime(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemDateAndTime(onvif.services.device.GetSystemDateAndTimeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemDateAndTime(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetSystemDateAndTimeResponse EndGetSystemDateAndTime(System.IAsyncResult result) {
            return base.Channel.EndGetSystemDateAndTime(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemDateAndTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetSystemDateAndTimeRequest request = ((onvif.services.device.GetSystemDateAndTimeRequest)(inValues[0]));
            return this.BeginGetSystemDateAndTime(request, callback, asyncState);
        }
        
        private object[] OnEndGetSystemDateAndTime(System.IAsyncResult result) {
            onvif.services.device.GetSystemDateAndTimeResponse retVal = this.EndGetSystemDateAndTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemDateAndTimeCompleted(object state) {
            if ((this.GetSystemDateAndTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemDateAndTimeCompleted(this, new GetSystemDateAndTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemDateAndTimeAsync(onvif.services.device.GetSystemDateAndTimeRequest request) {
            this.GetSystemDateAndTimeAsync(request, null);
        }
        
        public void GetSystemDateAndTimeAsync(onvif.services.device.GetSystemDateAndTimeRequest request, object userState) {
            if ((this.onBeginGetSystemDateAndTimeDelegate == null)) {
                this.onBeginGetSystemDateAndTimeDelegate = new BeginOperationDelegate(this.OnBeginGetSystemDateAndTime);
            }
            if ((this.onEndGetSystemDateAndTimeDelegate == null)) {
                this.onEndGetSystemDateAndTimeDelegate = new EndOperationDelegate(this.OnEndGetSystemDateAndTime);
            }
            if ((this.onGetSystemDateAndTimeCompletedDelegate == null)) {
                this.onGetSystemDateAndTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemDateAndTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemDateAndTimeDelegate, new object[] {
                        request}, this.onEndGetSystemDateAndTimeDelegate, this.onGetSystemDateAndTimeCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetSystemFactoryDefaultResponse SetSystemFactoryDefault(onvif.services.device.SetSystemFactoryDefaultRequest request) {
            return base.Channel.SetSystemFactoryDefault(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetSystemFactoryDefault(onvif.services.device.SetSystemFactoryDefaultRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetSystemFactoryDefault(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetSystemFactoryDefaultResponse EndSetSystemFactoryDefault(System.IAsyncResult result) {
            return base.Channel.EndSetSystemFactoryDefault(result);
        }
        
        private System.IAsyncResult OnBeginSetSystemFactoryDefault(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetSystemFactoryDefaultRequest request = ((onvif.services.device.SetSystemFactoryDefaultRequest)(inValues[0]));
            return this.BeginSetSystemFactoryDefault(request, callback, asyncState);
        }
        
        private object[] OnEndSetSystemFactoryDefault(System.IAsyncResult result) {
            onvif.services.device.SetSystemFactoryDefaultResponse retVal = this.EndSetSystemFactoryDefault(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetSystemFactoryDefaultCompleted(object state) {
            if ((this.SetSystemFactoryDefaultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetSystemFactoryDefaultCompleted(this, new SetSystemFactoryDefaultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetSystemFactoryDefaultAsync(onvif.services.device.SetSystemFactoryDefaultRequest request) {
            this.SetSystemFactoryDefaultAsync(request, null);
        }
        
        public void SetSystemFactoryDefaultAsync(onvif.services.device.SetSystemFactoryDefaultRequest request, object userState) {
            if ((this.onBeginSetSystemFactoryDefaultDelegate == null)) {
                this.onBeginSetSystemFactoryDefaultDelegate = new BeginOperationDelegate(this.OnBeginSetSystemFactoryDefault);
            }
            if ((this.onEndSetSystemFactoryDefaultDelegate == null)) {
                this.onEndSetSystemFactoryDefaultDelegate = new EndOperationDelegate(this.OnEndSetSystemFactoryDefault);
            }
            if ((this.onSetSystemFactoryDefaultCompletedDelegate == null)) {
                this.onSetSystemFactoryDefaultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetSystemFactoryDefaultCompleted);
            }
            base.InvokeAsync(this.onBeginSetSystemFactoryDefaultDelegate, new object[] {
                        request}, this.onEndSetSystemFactoryDefaultDelegate, this.onSetSystemFactoryDefaultCompletedDelegate, userState);
        }
        
        public onvif.services.device.UpgradeSystemFirmwareResponse UpgradeSystemFirmware(onvif.services.device.UpgradeSystemFirmwareRequest request) {
            return base.Channel.UpgradeSystemFirmware(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpgradeSystemFirmware(onvif.services.device.UpgradeSystemFirmwareRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpgradeSystemFirmware(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.UpgradeSystemFirmwareResponse EndUpgradeSystemFirmware(System.IAsyncResult result) {
            return base.Channel.EndUpgradeSystemFirmware(result);
        }
        
        private System.IAsyncResult OnBeginUpgradeSystemFirmware(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.UpgradeSystemFirmwareRequest request = ((onvif.services.device.UpgradeSystemFirmwareRequest)(inValues[0]));
            return this.BeginUpgradeSystemFirmware(request, callback, asyncState);
        }
        
        private object[] OnEndUpgradeSystemFirmware(System.IAsyncResult result) {
            onvif.services.device.UpgradeSystemFirmwareResponse retVal = this.EndUpgradeSystemFirmware(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpgradeSystemFirmwareCompleted(object state) {
            if ((this.UpgradeSystemFirmwareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpgradeSystemFirmwareCompleted(this, new UpgradeSystemFirmwareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpgradeSystemFirmwareAsync(onvif.services.device.UpgradeSystemFirmwareRequest request) {
            this.UpgradeSystemFirmwareAsync(request, null);
        }
        
        public void UpgradeSystemFirmwareAsync(onvif.services.device.UpgradeSystemFirmwareRequest request, object userState) {
            if ((this.onBeginUpgradeSystemFirmwareDelegate == null)) {
                this.onBeginUpgradeSystemFirmwareDelegate = new BeginOperationDelegate(this.OnBeginUpgradeSystemFirmware);
            }
            if ((this.onEndUpgradeSystemFirmwareDelegate == null)) {
                this.onEndUpgradeSystemFirmwareDelegate = new EndOperationDelegate(this.OnEndUpgradeSystemFirmware);
            }
            if ((this.onUpgradeSystemFirmwareCompletedDelegate == null)) {
                this.onUpgradeSystemFirmwareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpgradeSystemFirmwareCompleted);
            }
            base.InvokeAsync(this.onBeginUpgradeSystemFirmwareDelegate, new object[] {
                        request}, this.onEndUpgradeSystemFirmwareDelegate, this.onUpgradeSystemFirmwareCompletedDelegate, userState);
        }
        
        public onvif.services.device.SystemRebootResponse SystemReboot(onvif.services.device.SystemRebootRequest request) {
            return base.Channel.SystemReboot(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSystemReboot(onvif.services.device.SystemRebootRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSystemReboot(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SystemRebootResponse EndSystemReboot(System.IAsyncResult result) {
            return base.Channel.EndSystemReboot(result);
        }
        
        private System.IAsyncResult OnBeginSystemReboot(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SystemRebootRequest request = ((onvif.services.device.SystemRebootRequest)(inValues[0]));
            return this.BeginSystemReboot(request, callback, asyncState);
        }
        
        private object[] OnEndSystemReboot(System.IAsyncResult result) {
            onvif.services.device.SystemRebootResponse retVal = this.EndSystemReboot(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSystemRebootCompleted(object state) {
            if ((this.SystemRebootCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SystemRebootCompleted(this, new SystemRebootCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SystemRebootAsync(onvif.services.device.SystemRebootRequest request) {
            this.SystemRebootAsync(request, null);
        }
        
        public void SystemRebootAsync(onvif.services.device.SystemRebootRequest request, object userState) {
            if ((this.onBeginSystemRebootDelegate == null)) {
                this.onBeginSystemRebootDelegate = new BeginOperationDelegate(this.OnBeginSystemReboot);
            }
            if ((this.onEndSystemRebootDelegate == null)) {
                this.onEndSystemRebootDelegate = new EndOperationDelegate(this.OnEndSystemReboot);
            }
            if ((this.onSystemRebootCompletedDelegate == null)) {
                this.onSystemRebootCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSystemRebootCompleted);
            }
            base.InvokeAsync(this.onBeginSystemRebootDelegate, new object[] {
                        request}, this.onEndSystemRebootDelegate, this.onSystemRebootCompletedDelegate, userState);
        }
        
        public onvif.services.device.RestoreSystemResponse RestoreSystem(onvif.services.device.RestoreSystemRequest request) {
            return base.Channel.RestoreSystem(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRestoreSystem(onvif.services.device.RestoreSystemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestoreSystem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.RestoreSystemResponse EndRestoreSystem(System.IAsyncResult result) {
            return base.Channel.EndRestoreSystem(result);
        }
        
        private System.IAsyncResult OnBeginRestoreSystem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.RestoreSystemRequest request = ((onvif.services.device.RestoreSystemRequest)(inValues[0]));
            return this.BeginRestoreSystem(request, callback, asyncState);
        }
        
        private object[] OnEndRestoreSystem(System.IAsyncResult result) {
            onvif.services.device.RestoreSystemResponse retVal = this.EndRestoreSystem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRestoreSystemCompleted(object state) {
            if ((this.RestoreSystemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreSystemCompleted(this, new RestoreSystemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestoreSystemAsync(onvif.services.device.RestoreSystemRequest request) {
            this.RestoreSystemAsync(request, null);
        }
        
        public void RestoreSystemAsync(onvif.services.device.RestoreSystemRequest request, object userState) {
            if ((this.onBeginRestoreSystemDelegate == null)) {
                this.onBeginRestoreSystemDelegate = new BeginOperationDelegate(this.OnBeginRestoreSystem);
            }
            if ((this.onEndRestoreSystemDelegate == null)) {
                this.onEndRestoreSystemDelegate = new EndOperationDelegate(this.OnEndRestoreSystem);
            }
            if ((this.onRestoreSystemCompletedDelegate == null)) {
                this.onRestoreSystemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreSystemCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreSystemDelegate, new object[] {
                        request}, this.onEndRestoreSystemDelegate, this.onRestoreSystemCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetSystemBackupResponse GetSystemBackup(onvif.services.device.GetSystemBackupRequest request) {
            return base.Channel.GetSystemBackup(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemBackup(onvif.services.device.GetSystemBackupRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemBackup(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetSystemBackupResponse EndGetSystemBackup(System.IAsyncResult result) {
            return base.Channel.EndGetSystemBackup(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemBackup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetSystemBackupRequest request = ((onvif.services.device.GetSystemBackupRequest)(inValues[0]));
            return this.BeginGetSystemBackup(request, callback, asyncState);
        }
        
        private object[] OnEndGetSystemBackup(System.IAsyncResult result) {
            onvif.services.device.GetSystemBackupResponse retVal = this.EndGetSystemBackup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemBackupCompleted(object state) {
            if ((this.GetSystemBackupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemBackupCompleted(this, new GetSystemBackupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemBackupAsync(onvif.services.device.GetSystemBackupRequest request) {
            this.GetSystemBackupAsync(request, null);
        }
        
        public void GetSystemBackupAsync(onvif.services.device.GetSystemBackupRequest request, object userState) {
            if ((this.onBeginGetSystemBackupDelegate == null)) {
                this.onBeginGetSystemBackupDelegate = new BeginOperationDelegate(this.OnBeginGetSystemBackup);
            }
            if ((this.onEndGetSystemBackupDelegate == null)) {
                this.onEndGetSystemBackupDelegate = new EndOperationDelegate(this.OnEndGetSystemBackup);
            }
            if ((this.onGetSystemBackupCompletedDelegate == null)) {
                this.onGetSystemBackupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemBackupCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemBackupDelegate, new object[] {
                        request}, this.onEndGetSystemBackupDelegate, this.onGetSystemBackupCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetSystemLogResponse GetSystemLog(onvif.services.device.GetSystemLogRequest request) {
            return base.Channel.GetSystemLog(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemLog(onvif.services.device.GetSystemLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetSystemLogResponse EndGetSystemLog(System.IAsyncResult result) {
            return base.Channel.EndGetSystemLog(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetSystemLogRequest request = ((onvif.services.device.GetSystemLogRequest)(inValues[0]));
            return this.BeginGetSystemLog(request, callback, asyncState);
        }
        
        private object[] OnEndGetSystemLog(System.IAsyncResult result) {
            onvif.services.device.GetSystemLogResponse retVal = this.EndGetSystemLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemLogCompleted(object state) {
            if ((this.GetSystemLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemLogCompleted(this, new GetSystemLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemLogAsync(onvif.services.device.GetSystemLogRequest request) {
            this.GetSystemLogAsync(request, null);
        }
        
        public void GetSystemLogAsync(onvif.services.device.GetSystemLogRequest request, object userState) {
            if ((this.onBeginGetSystemLogDelegate == null)) {
                this.onBeginGetSystemLogDelegate = new BeginOperationDelegate(this.OnBeginGetSystemLog);
            }
            if ((this.onEndGetSystemLogDelegate == null)) {
                this.onEndGetSystemLogDelegate = new EndOperationDelegate(this.OnEndGetSystemLog);
            }
            if ((this.onGetSystemLogCompletedDelegate == null)) {
                this.onGetSystemLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemLogDelegate, new object[] {
                        request}, this.onEndGetSystemLogDelegate, this.onGetSystemLogCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetSystemSupportInformationResponse GetSystemSupportInformation(onvif.services.device.GetSystemSupportInformationRequest request) {
            return base.Channel.GetSystemSupportInformation(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSystemSupportInformation(onvif.services.device.GetSystemSupportInformationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSystemSupportInformation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetSystemSupportInformationResponse EndGetSystemSupportInformation(System.IAsyncResult result) {
            return base.Channel.EndGetSystemSupportInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetSystemSupportInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetSystemSupportInformationRequest request = ((onvif.services.device.GetSystemSupportInformationRequest)(inValues[0]));
            return this.BeginGetSystemSupportInformation(request, callback, asyncState);
        }
        
        private object[] OnEndGetSystemSupportInformation(System.IAsyncResult result) {
            onvif.services.device.GetSystemSupportInformationResponse retVal = this.EndGetSystemSupportInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSystemSupportInformationCompleted(object state) {
            if ((this.GetSystemSupportInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSystemSupportInformationCompleted(this, new GetSystemSupportInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSystemSupportInformationAsync(onvif.services.device.GetSystemSupportInformationRequest request) {
            this.GetSystemSupportInformationAsync(request, null);
        }
        
        public void GetSystemSupportInformationAsync(onvif.services.device.GetSystemSupportInformationRequest request, object userState) {
            if ((this.onBeginGetSystemSupportInformationDelegate == null)) {
                this.onBeginGetSystemSupportInformationDelegate = new BeginOperationDelegate(this.OnBeginGetSystemSupportInformation);
            }
            if ((this.onEndGetSystemSupportInformationDelegate == null)) {
                this.onEndGetSystemSupportInformationDelegate = new EndOperationDelegate(this.OnEndGetSystemSupportInformation);
            }
            if ((this.onGetSystemSupportInformationCompletedDelegate == null)) {
                this.onGetSystemSupportInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSystemSupportInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetSystemSupportInformationDelegate, new object[] {
                        request}, this.onEndGetSystemSupportInformationDelegate, this.onGetSystemSupportInformationCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetScopesResponse GetScopes(onvif.services.device.GetScopesRequest request) {
            return base.Channel.GetScopes(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetScopes(onvif.services.device.GetScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetScopesResponse EndGetScopes(System.IAsyncResult result) {
            return base.Channel.EndGetScopes(result);
        }
        
        private System.IAsyncResult OnBeginGetScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetScopesRequest request = ((onvif.services.device.GetScopesRequest)(inValues[0]));
            return this.BeginGetScopes(request, callback, asyncState);
        }
        
        private object[] OnEndGetScopes(System.IAsyncResult result) {
            onvif.services.device.GetScopesResponse retVal = this.EndGetScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScopesCompleted(object state) {
            if ((this.GetScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScopesCompleted(this, new GetScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScopesAsync(onvif.services.device.GetScopesRequest request) {
            this.GetScopesAsync(request, null);
        }
        
        public void GetScopesAsync(onvif.services.device.GetScopesRequest request, object userState) {
            if ((this.onBeginGetScopesDelegate == null)) {
                this.onBeginGetScopesDelegate = new BeginOperationDelegate(this.OnBeginGetScopes);
            }
            if ((this.onEndGetScopesDelegate == null)) {
                this.onEndGetScopesDelegate = new EndOperationDelegate(this.OnEndGetScopes);
            }
            if ((this.onGetScopesCompletedDelegate == null)) {
                this.onGetScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScopesCompleted);
            }
            base.InvokeAsync(this.onBeginGetScopesDelegate, new object[] {
                        request}, this.onEndGetScopesDelegate, this.onGetScopesCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetScopesResponse SetScopes(onvif.services.device.SetScopesRequest request) {
            return base.Channel.SetScopes(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetScopes(onvif.services.device.SetScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetScopesResponse EndSetScopes(System.IAsyncResult result) {
            return base.Channel.EndSetScopes(result);
        }
        
        private System.IAsyncResult OnBeginSetScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetScopesRequest request = ((onvif.services.device.SetScopesRequest)(inValues[0]));
            return this.BeginSetScopes(request, callback, asyncState);
        }
        
        private object[] OnEndSetScopes(System.IAsyncResult result) {
            onvif.services.device.SetScopesResponse retVal = this.EndSetScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetScopesCompleted(object state) {
            if ((this.SetScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetScopesCompleted(this, new SetScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetScopesAsync(onvif.services.device.SetScopesRequest request) {
            this.SetScopesAsync(request, null);
        }
        
        public void SetScopesAsync(onvif.services.device.SetScopesRequest request, object userState) {
            if ((this.onBeginSetScopesDelegate == null)) {
                this.onBeginSetScopesDelegate = new BeginOperationDelegate(this.OnBeginSetScopes);
            }
            if ((this.onEndSetScopesDelegate == null)) {
                this.onEndSetScopesDelegate = new EndOperationDelegate(this.OnEndSetScopes);
            }
            if ((this.onSetScopesCompletedDelegate == null)) {
                this.onSetScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetScopesCompleted);
            }
            base.InvokeAsync(this.onBeginSetScopesDelegate, new object[] {
                        request}, this.onEndSetScopesDelegate, this.onSetScopesCompletedDelegate, userState);
        }
        
        public onvif.services.device.AddScopesResponse AddScopes(onvif.services.device.AddScopesRequest request) {
            return base.Channel.AddScopes(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddScopes(onvif.services.device.AddScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.AddScopesResponse EndAddScopes(System.IAsyncResult result) {
            return base.Channel.EndAddScopes(result);
        }
        
        private System.IAsyncResult OnBeginAddScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.AddScopesRequest request = ((onvif.services.device.AddScopesRequest)(inValues[0]));
            return this.BeginAddScopes(request, callback, asyncState);
        }
        
        private object[] OnEndAddScopes(System.IAsyncResult result) {
            onvif.services.device.AddScopesResponse retVal = this.EndAddScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddScopesCompleted(object state) {
            if ((this.AddScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddScopesCompleted(this, new AddScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddScopesAsync(onvif.services.device.AddScopesRequest request) {
            this.AddScopesAsync(request, null);
        }
        
        public void AddScopesAsync(onvif.services.device.AddScopesRequest request, object userState) {
            if ((this.onBeginAddScopesDelegate == null)) {
                this.onBeginAddScopesDelegate = new BeginOperationDelegate(this.OnBeginAddScopes);
            }
            if ((this.onEndAddScopesDelegate == null)) {
                this.onEndAddScopesDelegate = new EndOperationDelegate(this.OnEndAddScopes);
            }
            if ((this.onAddScopesCompletedDelegate == null)) {
                this.onAddScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddScopesCompleted);
            }
            base.InvokeAsync(this.onBeginAddScopesDelegate, new object[] {
                        request}, this.onEndAddScopesDelegate, this.onAddScopesCompletedDelegate, userState);
        }
        
        public onvif.services.device.RemoveScopesResponse RemoveScopes(onvif.services.device.RemoveScopesRequest request) {
            return base.Channel.RemoveScopes(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveScopes(onvif.services.device.RemoveScopesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveScopes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.RemoveScopesResponse EndRemoveScopes(System.IAsyncResult result) {
            return base.Channel.EndRemoveScopes(result);
        }
        
        private System.IAsyncResult OnBeginRemoveScopes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.RemoveScopesRequest request = ((onvif.services.device.RemoveScopesRequest)(inValues[0]));
            return this.BeginRemoveScopes(request, callback, asyncState);
        }
        
        private object[] OnEndRemoveScopes(System.IAsyncResult result) {
            onvif.services.device.RemoveScopesResponse retVal = this.EndRemoveScopes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveScopesCompleted(object state) {
            if ((this.RemoveScopesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveScopesCompleted(this, new RemoveScopesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveScopesAsync(onvif.services.device.RemoveScopesRequest request) {
            this.RemoveScopesAsync(request, null);
        }
        
        public void RemoveScopesAsync(onvif.services.device.RemoveScopesRequest request, object userState) {
            if ((this.onBeginRemoveScopesDelegate == null)) {
                this.onBeginRemoveScopesDelegate = new BeginOperationDelegate(this.OnBeginRemoveScopes);
            }
            if ((this.onEndRemoveScopesDelegate == null)) {
                this.onEndRemoveScopesDelegate = new EndOperationDelegate(this.OnEndRemoveScopes);
            }
            if ((this.onRemoveScopesCompletedDelegate == null)) {
                this.onRemoveScopesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveScopesCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveScopesDelegate, new object[] {
                        request}, this.onEndRemoveScopesDelegate, this.onRemoveScopesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetDiscoveryModeResponse GetDiscoveryMode(onvif.services.device.GetDiscoveryModeRequest request) {
            return base.Channel.GetDiscoveryMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDiscoveryMode(onvif.services.device.GetDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDiscoveryMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetDiscoveryModeResponse EndGetDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndGetDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginGetDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetDiscoveryModeRequest request = ((onvif.services.device.GetDiscoveryModeRequest)(inValues[0]));
            return this.BeginGetDiscoveryMode(request, callback, asyncState);
        }
        
        private object[] OnEndGetDiscoveryMode(System.IAsyncResult result) {
            onvif.services.device.GetDiscoveryModeResponse retVal = this.EndGetDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDiscoveryModeCompleted(object state) {
            if ((this.GetDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDiscoveryModeCompleted(this, new GetDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDiscoveryModeAsync(onvif.services.device.GetDiscoveryModeRequest request) {
            this.GetDiscoveryModeAsync(request, null);
        }
        
        public void GetDiscoveryModeAsync(onvif.services.device.GetDiscoveryModeRequest request, object userState) {
            if ((this.onBeginGetDiscoveryModeDelegate == null)) {
                this.onBeginGetDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginGetDiscoveryMode);
            }
            if ((this.onEndGetDiscoveryModeDelegate == null)) {
                this.onEndGetDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndGetDiscoveryMode);
            }
            if ((this.onGetDiscoveryModeCompletedDelegate == null)) {
                this.onGetDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDiscoveryModeDelegate, new object[] {
                        request}, this.onEndGetDiscoveryModeDelegate, this.onGetDiscoveryModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetDiscoveryModeResponse SetDiscoveryMode(onvif.services.device.SetDiscoveryModeRequest request) {
            return base.Channel.SetDiscoveryMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDiscoveryMode(onvif.services.device.SetDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDiscoveryMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetDiscoveryModeResponse EndSetDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndSetDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginSetDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetDiscoveryModeRequest request = ((onvif.services.device.SetDiscoveryModeRequest)(inValues[0]));
            return this.BeginSetDiscoveryMode(request, callback, asyncState);
        }
        
        private object[] OnEndSetDiscoveryMode(System.IAsyncResult result) {
            onvif.services.device.SetDiscoveryModeResponse retVal = this.EndSetDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDiscoveryModeCompleted(object state) {
            if ((this.SetDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDiscoveryModeCompleted(this, new SetDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDiscoveryModeAsync(onvif.services.device.SetDiscoveryModeRequest request) {
            this.SetDiscoveryModeAsync(request, null);
        }
        
        public void SetDiscoveryModeAsync(onvif.services.device.SetDiscoveryModeRequest request, object userState) {
            if ((this.onBeginSetDiscoveryModeDelegate == null)) {
                this.onBeginSetDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginSetDiscoveryMode);
            }
            if ((this.onEndSetDiscoveryModeDelegate == null)) {
                this.onEndSetDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndSetDiscoveryMode);
            }
            if ((this.onSetDiscoveryModeCompletedDelegate == null)) {
                this.onSetDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetDiscoveryModeDelegate, new object[] {
                        request}, this.onEndSetDiscoveryModeDelegate, this.onSetDiscoveryModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetRemoteDiscoveryModeResponse GetRemoteDiscoveryMode(onvif.services.device.GetRemoteDiscoveryModeRequest request) {
            return base.Channel.GetRemoteDiscoveryMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRemoteDiscoveryMode(onvif.services.device.GetRemoteDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRemoteDiscoveryMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetRemoteDiscoveryModeResponse EndGetRemoteDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndGetRemoteDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginGetRemoteDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetRemoteDiscoveryModeRequest request = ((onvif.services.device.GetRemoteDiscoveryModeRequest)(inValues[0]));
            return this.BeginGetRemoteDiscoveryMode(request, callback, asyncState);
        }
        
        private object[] OnEndGetRemoteDiscoveryMode(System.IAsyncResult result) {
            onvif.services.device.GetRemoteDiscoveryModeResponse retVal = this.EndGetRemoteDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRemoteDiscoveryModeCompleted(object state) {
            if ((this.GetRemoteDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRemoteDiscoveryModeCompleted(this, new GetRemoteDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRemoteDiscoveryModeAsync(onvif.services.device.GetRemoteDiscoveryModeRequest request) {
            this.GetRemoteDiscoveryModeAsync(request, null);
        }
        
        public void GetRemoteDiscoveryModeAsync(onvif.services.device.GetRemoteDiscoveryModeRequest request, object userState) {
            if ((this.onBeginGetRemoteDiscoveryModeDelegate == null)) {
                this.onBeginGetRemoteDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginGetRemoteDiscoveryMode);
            }
            if ((this.onEndGetRemoteDiscoveryModeDelegate == null)) {
                this.onEndGetRemoteDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndGetRemoteDiscoveryMode);
            }
            if ((this.onGetRemoteDiscoveryModeCompletedDelegate == null)) {
                this.onGetRemoteDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRemoteDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRemoteDiscoveryModeDelegate, new object[] {
                        request}, this.onEndGetRemoteDiscoveryModeDelegate, this.onGetRemoteDiscoveryModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetRemoteDiscoveryModeResponse SetRemoteDiscoveryMode(onvif.services.device.SetRemoteDiscoveryModeRequest request) {
            return base.Channel.SetRemoteDiscoveryMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRemoteDiscoveryMode(onvif.services.device.SetRemoteDiscoveryModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRemoteDiscoveryMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetRemoteDiscoveryModeResponse EndSetRemoteDiscoveryMode(System.IAsyncResult result) {
            return base.Channel.EndSetRemoteDiscoveryMode(result);
        }
        
        private System.IAsyncResult OnBeginSetRemoteDiscoveryMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetRemoteDiscoveryModeRequest request = ((onvif.services.device.SetRemoteDiscoveryModeRequest)(inValues[0]));
            return this.BeginSetRemoteDiscoveryMode(request, callback, asyncState);
        }
        
        private object[] OnEndSetRemoteDiscoveryMode(System.IAsyncResult result) {
            onvif.services.device.SetRemoteDiscoveryModeResponse retVal = this.EndSetRemoteDiscoveryMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetRemoteDiscoveryModeCompleted(object state) {
            if ((this.SetRemoteDiscoveryModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRemoteDiscoveryModeCompleted(this, new SetRemoteDiscoveryModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRemoteDiscoveryModeAsync(onvif.services.device.SetRemoteDiscoveryModeRequest request) {
            this.SetRemoteDiscoveryModeAsync(request, null);
        }
        
        public void SetRemoteDiscoveryModeAsync(onvif.services.device.SetRemoteDiscoveryModeRequest request, object userState) {
            if ((this.onBeginSetRemoteDiscoveryModeDelegate == null)) {
                this.onBeginSetRemoteDiscoveryModeDelegate = new BeginOperationDelegate(this.OnBeginSetRemoteDiscoveryMode);
            }
            if ((this.onEndSetRemoteDiscoveryModeDelegate == null)) {
                this.onEndSetRemoteDiscoveryModeDelegate = new EndOperationDelegate(this.OnEndSetRemoteDiscoveryMode);
            }
            if ((this.onSetRemoteDiscoveryModeCompletedDelegate == null)) {
                this.onSetRemoteDiscoveryModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRemoteDiscoveryModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetRemoteDiscoveryModeDelegate, new object[] {
                        request}, this.onEndSetRemoteDiscoveryModeDelegate, this.onSetRemoteDiscoveryModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetDPAddressesResponse GetDPAddresses(onvif.services.device.GetDPAddressesRequest request) {
            return base.Channel.GetDPAddresses(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDPAddresses(onvif.services.device.GetDPAddressesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDPAddresses(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetDPAddressesResponse EndGetDPAddresses(System.IAsyncResult result) {
            return base.Channel.EndGetDPAddresses(result);
        }
        
        private System.IAsyncResult OnBeginGetDPAddresses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetDPAddressesRequest request = ((onvif.services.device.GetDPAddressesRequest)(inValues[0]));
            return this.BeginGetDPAddresses(request, callback, asyncState);
        }
        
        private object[] OnEndGetDPAddresses(System.IAsyncResult result) {
            onvif.services.device.GetDPAddressesResponse retVal = this.EndGetDPAddresses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDPAddressesCompleted(object state) {
            if ((this.GetDPAddressesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDPAddressesCompleted(this, new GetDPAddressesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDPAddressesAsync(onvif.services.device.GetDPAddressesRequest request) {
            this.GetDPAddressesAsync(request, null);
        }
        
        public void GetDPAddressesAsync(onvif.services.device.GetDPAddressesRequest request, object userState) {
            if ((this.onBeginGetDPAddressesDelegate == null)) {
                this.onBeginGetDPAddressesDelegate = new BeginOperationDelegate(this.OnBeginGetDPAddresses);
            }
            if ((this.onEndGetDPAddressesDelegate == null)) {
                this.onEndGetDPAddressesDelegate = new EndOperationDelegate(this.OnEndGetDPAddresses);
            }
            if ((this.onGetDPAddressesCompletedDelegate == null)) {
                this.onGetDPAddressesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDPAddressesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDPAddressesDelegate, new object[] {
                        request}, this.onEndGetDPAddressesDelegate, this.onGetDPAddressesCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetDPAddressesResponse SetDPAddresses(onvif.services.device.SetDPAddressesRequest request) {
            return base.Channel.SetDPAddresses(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDPAddresses(onvif.services.device.SetDPAddressesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDPAddresses(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetDPAddressesResponse EndSetDPAddresses(System.IAsyncResult result) {
            return base.Channel.EndSetDPAddresses(result);
        }
        
        private System.IAsyncResult OnBeginSetDPAddresses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetDPAddressesRequest request = ((onvif.services.device.SetDPAddressesRequest)(inValues[0]));
            return this.BeginSetDPAddresses(request, callback, asyncState);
        }
        
        private object[] OnEndSetDPAddresses(System.IAsyncResult result) {
            onvif.services.device.SetDPAddressesResponse retVal = this.EndSetDPAddresses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDPAddressesCompleted(object state) {
            if ((this.SetDPAddressesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDPAddressesCompleted(this, new SetDPAddressesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDPAddressesAsync(onvif.services.device.SetDPAddressesRequest request) {
            this.SetDPAddressesAsync(request, null);
        }
        
        public void SetDPAddressesAsync(onvif.services.device.SetDPAddressesRequest request, object userState) {
            if ((this.onBeginSetDPAddressesDelegate == null)) {
                this.onBeginSetDPAddressesDelegate = new BeginOperationDelegate(this.OnBeginSetDPAddresses);
            }
            if ((this.onEndSetDPAddressesDelegate == null)) {
                this.onEndSetDPAddressesDelegate = new EndOperationDelegate(this.OnEndSetDPAddresses);
            }
            if ((this.onSetDPAddressesCompletedDelegate == null)) {
                this.onSetDPAddressesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDPAddressesCompleted);
            }
            base.InvokeAsync(this.onBeginSetDPAddressesDelegate, new object[] {
                        request}, this.onEndSetDPAddressesDelegate, this.onSetDPAddressesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetUsersResponse GetUsers(onvif.services.device.GetUsersRequest request) {
            return base.Channel.GetUsers(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUsers(onvif.services.device.GetUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetUsersResponse EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetUsersRequest request = ((onvif.services.device.GetUsersRequest)(inValues[0]));
            return this.BeginGetUsers(request, callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            onvif.services.device.GetUsersResponse retVal = this.EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync(onvif.services.device.GetUsersRequest request) {
            this.GetUsersAsync(request, null);
        }
        
        public void GetUsersAsync(onvif.services.device.GetUsersRequest request, object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, new object[] {
                        request}, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        public onvif.services.device.CreateUsersResponse CreateUsers(onvif.services.device.CreateUsersRequest request) {
            return base.Channel.CreateUsers(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateUsers(onvif.services.device.CreateUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.CreateUsersResponse EndCreateUsers(System.IAsyncResult result) {
            return base.Channel.EndCreateUsers(result);
        }
        
        private System.IAsyncResult OnBeginCreateUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.CreateUsersRequest request = ((onvif.services.device.CreateUsersRequest)(inValues[0]));
            return this.BeginCreateUsers(request, callback, asyncState);
        }
        
        private object[] OnEndCreateUsers(System.IAsyncResult result) {
            onvif.services.device.CreateUsersResponse retVal = this.EndCreateUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUsersCompleted(object state) {
            if ((this.CreateUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUsersCompleted(this, new CreateUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUsersAsync(onvif.services.device.CreateUsersRequest request) {
            this.CreateUsersAsync(request, null);
        }
        
        public void CreateUsersAsync(onvif.services.device.CreateUsersRequest request, object userState) {
            if ((this.onBeginCreateUsersDelegate == null)) {
                this.onBeginCreateUsersDelegate = new BeginOperationDelegate(this.OnBeginCreateUsers);
            }
            if ((this.onEndCreateUsersDelegate == null)) {
                this.onEndCreateUsersDelegate = new EndOperationDelegate(this.OnEndCreateUsers);
            }
            if ((this.onCreateUsersCompletedDelegate == null)) {
                this.onCreateUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUsersCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUsersDelegate, new object[] {
                        request}, this.onEndCreateUsersDelegate, this.onCreateUsersCompletedDelegate, userState);
        }
        
        public onvif.services.device.DeleteUsersResponse DeleteUsers(onvif.services.device.DeleteUsersRequest request) {
            return base.Channel.DeleteUsers(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUsers(onvif.services.device.DeleteUsersRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUsers(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.DeleteUsersResponse EndDeleteUsers(System.IAsyncResult result) {
            return base.Channel.EndDeleteUsers(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.DeleteUsersRequest request = ((onvif.services.device.DeleteUsersRequest)(inValues[0]));
            return this.BeginDeleteUsers(request, callback, asyncState);
        }
        
        private object[] OnEndDeleteUsers(System.IAsyncResult result) {
            onvif.services.device.DeleteUsersResponse retVal = this.EndDeleteUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUsersCompleted(object state) {
            if ((this.DeleteUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUsersCompleted(this, new DeleteUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUsersAsync(onvif.services.device.DeleteUsersRequest request) {
            this.DeleteUsersAsync(request, null);
        }
        
        public void DeleteUsersAsync(onvif.services.device.DeleteUsersRequest request, object userState) {
            if ((this.onBeginDeleteUsersDelegate == null)) {
                this.onBeginDeleteUsersDelegate = new BeginOperationDelegate(this.OnBeginDeleteUsers);
            }
            if ((this.onEndDeleteUsersDelegate == null)) {
                this.onEndDeleteUsersDelegate = new EndOperationDelegate(this.OnEndDeleteUsers);
            }
            if ((this.onDeleteUsersCompletedDelegate == null)) {
                this.onDeleteUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUsersCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUsersDelegate, new object[] {
                        request}, this.onEndDeleteUsersDelegate, this.onDeleteUsersCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetUserResponse SetUser(onvif.services.device.SetUserRequest request) {
            return base.Channel.SetUser(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetUser(onvif.services.device.SetUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetUserResponse EndSetUser(System.IAsyncResult result) {
            return base.Channel.EndSetUser(result);
        }
        
        private System.IAsyncResult OnBeginSetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetUserRequest request = ((onvif.services.device.SetUserRequest)(inValues[0]));
            return this.BeginSetUser(request, callback, asyncState);
        }
        
        private object[] OnEndSetUser(System.IAsyncResult result) {
            onvif.services.device.SetUserResponse retVal = this.EndSetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetUserCompleted(object state) {
            if ((this.SetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetUserCompleted(this, new SetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetUserAsync(onvif.services.device.SetUserRequest request) {
            this.SetUserAsync(request, null);
        }
        
        public void SetUserAsync(onvif.services.device.SetUserRequest request, object userState) {
            if ((this.onBeginSetUserDelegate == null)) {
                this.onBeginSetUserDelegate = new BeginOperationDelegate(this.OnBeginSetUser);
            }
            if ((this.onEndSetUserDelegate == null)) {
                this.onEndSetUserDelegate = new EndOperationDelegate(this.OnEndSetUser);
            }
            if ((this.onSetUserCompletedDelegate == null)) {
                this.onSetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetUserCompleted);
            }
            base.InvokeAsync(this.onBeginSetUserDelegate, new object[] {
                        request}, this.onEndSetUserDelegate, this.onSetUserCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetWsdlUrlResponse GetWsdlUrl(onvif.services.device.GetWsdlUrlRequest request) {
            return base.Channel.GetWsdlUrl(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetWsdlUrl(onvif.services.device.GetWsdlUrlRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWsdlUrl(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetWsdlUrlResponse EndGetWsdlUrl(System.IAsyncResult result) {
            return base.Channel.EndGetWsdlUrl(result);
        }
        
        private System.IAsyncResult OnBeginGetWsdlUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetWsdlUrlRequest request = ((onvif.services.device.GetWsdlUrlRequest)(inValues[0]));
            return this.BeginGetWsdlUrl(request, callback, asyncState);
        }
        
        private object[] OnEndGetWsdlUrl(System.IAsyncResult result) {
            onvif.services.device.GetWsdlUrlResponse retVal = this.EndGetWsdlUrl(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWsdlUrlCompleted(object state) {
            if ((this.GetWsdlUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWsdlUrlCompleted(this, new GetWsdlUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWsdlUrlAsync(onvif.services.device.GetWsdlUrlRequest request) {
            this.GetWsdlUrlAsync(request, null);
        }
        
        public void GetWsdlUrlAsync(onvif.services.device.GetWsdlUrlRequest request, object userState) {
            if ((this.onBeginGetWsdlUrlDelegate == null)) {
                this.onBeginGetWsdlUrlDelegate = new BeginOperationDelegate(this.OnBeginGetWsdlUrl);
            }
            if ((this.onEndGetWsdlUrlDelegate == null)) {
                this.onEndGetWsdlUrlDelegate = new EndOperationDelegate(this.OnEndGetWsdlUrl);
            }
            if ((this.onGetWsdlUrlCompletedDelegate == null)) {
                this.onGetWsdlUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWsdlUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetWsdlUrlDelegate, new object[] {
                        request}, this.onEndGetWsdlUrlDelegate, this.onGetWsdlUrlCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetCapabilitiesResponse GetCapabilities(onvif.services.device.GetCapabilitiesRequest request) {
            return base.Channel.GetCapabilities(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCapabilities(onvif.services.device.GetCapabilitiesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCapabilities(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetCapabilitiesResponse EndGetCapabilities(System.IAsyncResult result) {
            return base.Channel.EndGetCapabilities(result);
        }
        
        private System.IAsyncResult OnBeginGetCapabilities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetCapabilitiesRequest request = ((onvif.services.device.GetCapabilitiesRequest)(inValues[0]));
            return this.BeginGetCapabilities(request, callback, asyncState);
        }
        
        private object[] OnEndGetCapabilities(System.IAsyncResult result) {
            onvif.services.device.GetCapabilitiesResponse retVal = this.EndGetCapabilities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCapabilitiesCompleted(object state) {
            if ((this.GetCapabilitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapabilitiesCompleted(this, new GetCapabilitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCapabilitiesAsync(onvif.services.device.GetCapabilitiesRequest request) {
            this.GetCapabilitiesAsync(request, null);
        }
        
        public void GetCapabilitiesAsync(onvif.services.device.GetCapabilitiesRequest request, object userState) {
            if ((this.onBeginGetCapabilitiesDelegate == null)) {
                this.onBeginGetCapabilitiesDelegate = new BeginOperationDelegate(this.OnBeginGetCapabilities);
            }
            if ((this.onEndGetCapabilitiesDelegate == null)) {
                this.onEndGetCapabilitiesDelegate = new EndOperationDelegate(this.OnEndGetCapabilities);
            }
            if ((this.onGetCapabilitiesCompletedDelegate == null)) {
                this.onGetCapabilitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapabilitiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapabilitiesDelegate, new object[] {
                        request}, this.onEndGetCapabilitiesDelegate, this.onGetCapabilitiesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetHostnameResponse GetHostname(onvif.services.device.GetHostnameRequest request) {
            return base.Channel.GetHostname(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHostname(onvif.services.device.GetHostnameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHostname(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetHostnameResponse EndGetHostname(System.IAsyncResult result) {
            return base.Channel.EndGetHostname(result);
        }
        
        private System.IAsyncResult OnBeginGetHostname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetHostnameRequest request = ((onvif.services.device.GetHostnameRequest)(inValues[0]));
            return this.BeginGetHostname(request, callback, asyncState);
        }
        
        private object[] OnEndGetHostname(System.IAsyncResult result) {
            onvif.services.device.GetHostnameResponse retVal = this.EndGetHostname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHostnameCompleted(object state) {
            if ((this.GetHostnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHostnameCompleted(this, new GetHostnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHostnameAsync(onvif.services.device.GetHostnameRequest request) {
            this.GetHostnameAsync(request, null);
        }
        
        public void GetHostnameAsync(onvif.services.device.GetHostnameRequest request, object userState) {
            if ((this.onBeginGetHostnameDelegate == null)) {
                this.onBeginGetHostnameDelegate = new BeginOperationDelegate(this.OnBeginGetHostname);
            }
            if ((this.onEndGetHostnameDelegate == null)) {
                this.onEndGetHostnameDelegate = new EndOperationDelegate(this.OnEndGetHostname);
            }
            if ((this.onGetHostnameCompletedDelegate == null)) {
                this.onGetHostnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHostnameCompleted);
            }
            base.InvokeAsync(this.onBeginGetHostnameDelegate, new object[] {
                        request}, this.onEndGetHostnameDelegate, this.onGetHostnameCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetHostnameResponse SetHostname(onvif.services.device.SetHostnameRequest request) {
            return base.Channel.SetHostname(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetHostname(onvif.services.device.SetHostnameRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetHostname(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetHostnameResponse EndSetHostname(System.IAsyncResult result) {
            return base.Channel.EndSetHostname(result);
        }
        
        private System.IAsyncResult OnBeginSetHostname(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetHostnameRequest request = ((onvif.services.device.SetHostnameRequest)(inValues[0]));
            return this.BeginSetHostname(request, callback, asyncState);
        }
        
        private object[] OnEndSetHostname(System.IAsyncResult result) {
            onvif.services.device.SetHostnameResponse retVal = this.EndSetHostname(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetHostnameCompleted(object state) {
            if ((this.SetHostnameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetHostnameCompleted(this, new SetHostnameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetHostnameAsync(onvif.services.device.SetHostnameRequest request) {
            this.SetHostnameAsync(request, null);
        }
        
        public void SetHostnameAsync(onvif.services.device.SetHostnameRequest request, object userState) {
            if ((this.onBeginSetHostnameDelegate == null)) {
                this.onBeginSetHostnameDelegate = new BeginOperationDelegate(this.OnBeginSetHostname);
            }
            if ((this.onEndSetHostnameDelegate == null)) {
                this.onEndSetHostnameDelegate = new EndOperationDelegate(this.OnEndSetHostname);
            }
            if ((this.onSetHostnameCompletedDelegate == null)) {
                this.onSetHostnameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetHostnameCompleted);
            }
            base.InvokeAsync(this.onBeginSetHostnameDelegate, new object[] {
                        request}, this.onEndSetHostnameDelegate, this.onSetHostnameCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetDNSResponse GetDNS(onvif.services.device.GetDNSRequest request) {
            return base.Channel.GetDNS(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDNS(onvif.services.device.GetDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetDNSResponse EndGetDNS(System.IAsyncResult result) {
            return base.Channel.EndGetDNS(result);
        }
        
        private System.IAsyncResult OnBeginGetDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetDNSRequest request = ((onvif.services.device.GetDNSRequest)(inValues[0]));
            return this.BeginGetDNS(request, callback, asyncState);
        }
        
        private object[] OnEndGetDNS(System.IAsyncResult result) {
            onvif.services.device.GetDNSResponse retVal = this.EndGetDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDNSCompleted(object state) {
            if ((this.GetDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDNSCompleted(this, new GetDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDNSAsync(onvif.services.device.GetDNSRequest request) {
            this.GetDNSAsync(request, null);
        }
        
        public void GetDNSAsync(onvif.services.device.GetDNSRequest request, object userState) {
            if ((this.onBeginGetDNSDelegate == null)) {
                this.onBeginGetDNSDelegate = new BeginOperationDelegate(this.OnBeginGetDNS);
            }
            if ((this.onEndGetDNSDelegate == null)) {
                this.onEndGetDNSDelegate = new EndOperationDelegate(this.OnEndGetDNS);
            }
            if ((this.onGetDNSCompletedDelegate == null)) {
                this.onGetDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDNSCompleted);
            }
            base.InvokeAsync(this.onBeginGetDNSDelegate, new object[] {
                        request}, this.onEndGetDNSDelegate, this.onGetDNSCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetDNSResponse SetDNS(onvif.services.device.SetDNSRequest request) {
            return base.Channel.SetDNS(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDNS(onvif.services.device.SetDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetDNSResponse EndSetDNS(System.IAsyncResult result) {
            return base.Channel.EndSetDNS(result);
        }
        
        private System.IAsyncResult OnBeginSetDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetDNSRequest request = ((onvif.services.device.SetDNSRequest)(inValues[0]));
            return this.BeginSetDNS(request, callback, asyncState);
        }
        
        private object[] OnEndSetDNS(System.IAsyncResult result) {
            onvif.services.device.SetDNSResponse retVal = this.EndSetDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDNSCompleted(object state) {
            if ((this.SetDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDNSCompleted(this, new SetDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDNSAsync(onvif.services.device.SetDNSRequest request) {
            this.SetDNSAsync(request, null);
        }
        
        public void SetDNSAsync(onvif.services.device.SetDNSRequest request, object userState) {
            if ((this.onBeginSetDNSDelegate == null)) {
                this.onBeginSetDNSDelegate = new BeginOperationDelegate(this.OnBeginSetDNS);
            }
            if ((this.onEndSetDNSDelegate == null)) {
                this.onEndSetDNSDelegate = new EndOperationDelegate(this.OnEndSetDNS);
            }
            if ((this.onSetDNSCompletedDelegate == null)) {
                this.onSetDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDNSCompleted);
            }
            base.InvokeAsync(this.onBeginSetDNSDelegate, new object[] {
                        request}, this.onEndSetDNSDelegate, this.onSetDNSCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetNTPResponse GetNTP(onvif.services.device.GetNTPRequest request) {
            return base.Channel.GetNTP(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNTP(onvif.services.device.GetNTPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNTP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetNTPResponse EndGetNTP(System.IAsyncResult result) {
            return base.Channel.EndGetNTP(result);
        }
        
        private System.IAsyncResult OnBeginGetNTP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetNTPRequest request = ((onvif.services.device.GetNTPRequest)(inValues[0]));
            return this.BeginGetNTP(request, callback, asyncState);
        }
        
        private object[] OnEndGetNTP(System.IAsyncResult result) {
            onvif.services.device.GetNTPResponse retVal = this.EndGetNTP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNTPCompleted(object state) {
            if ((this.GetNTPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNTPCompleted(this, new GetNTPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNTPAsync(onvif.services.device.GetNTPRequest request) {
            this.GetNTPAsync(request, null);
        }
        
        public void GetNTPAsync(onvif.services.device.GetNTPRequest request, object userState) {
            if ((this.onBeginGetNTPDelegate == null)) {
                this.onBeginGetNTPDelegate = new BeginOperationDelegate(this.OnBeginGetNTP);
            }
            if ((this.onEndGetNTPDelegate == null)) {
                this.onEndGetNTPDelegate = new EndOperationDelegate(this.OnEndGetNTP);
            }
            if ((this.onGetNTPCompletedDelegate == null)) {
                this.onGetNTPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNTPCompleted);
            }
            base.InvokeAsync(this.onBeginGetNTPDelegate, new object[] {
                        request}, this.onEndGetNTPDelegate, this.onGetNTPCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetNTPResponse SetNTP(onvif.services.device.SetNTPRequest request) {
            return base.Channel.SetNTP(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNTP(onvif.services.device.SetNTPRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNTP(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetNTPResponse EndSetNTP(System.IAsyncResult result) {
            return base.Channel.EndSetNTP(result);
        }
        
        private System.IAsyncResult OnBeginSetNTP(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetNTPRequest request = ((onvif.services.device.SetNTPRequest)(inValues[0]));
            return this.BeginSetNTP(request, callback, asyncState);
        }
        
        private object[] OnEndSetNTP(System.IAsyncResult result) {
            onvif.services.device.SetNTPResponse retVal = this.EndSetNTP(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetNTPCompleted(object state) {
            if ((this.SetNTPCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNTPCompleted(this, new SetNTPCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNTPAsync(onvif.services.device.SetNTPRequest request) {
            this.SetNTPAsync(request, null);
        }
        
        public void SetNTPAsync(onvif.services.device.SetNTPRequest request, object userState) {
            if ((this.onBeginSetNTPDelegate == null)) {
                this.onBeginSetNTPDelegate = new BeginOperationDelegate(this.OnBeginSetNTP);
            }
            if ((this.onEndSetNTPDelegate == null)) {
                this.onEndSetNTPDelegate = new EndOperationDelegate(this.OnEndSetNTP);
            }
            if ((this.onSetNTPCompletedDelegate == null)) {
                this.onSetNTPCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNTPCompleted);
            }
            base.InvokeAsync(this.onBeginSetNTPDelegate, new object[] {
                        request}, this.onEndSetNTPDelegate, this.onSetNTPCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetDynamicDNSResponse GetDynamicDNS(onvif.services.device.GetDynamicDNSRequest request) {
            return base.Channel.GetDynamicDNS(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDynamicDNS(onvif.services.device.GetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDynamicDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetDynamicDNSResponse EndGetDynamicDNS(System.IAsyncResult result) {
            return base.Channel.EndGetDynamicDNS(result);
        }
        
        private System.IAsyncResult OnBeginGetDynamicDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetDynamicDNSRequest request = ((onvif.services.device.GetDynamicDNSRequest)(inValues[0]));
            return this.BeginGetDynamicDNS(request, callback, asyncState);
        }
        
        private object[] OnEndGetDynamicDNS(System.IAsyncResult result) {
            onvif.services.device.GetDynamicDNSResponse retVal = this.EndGetDynamicDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDynamicDNSCompleted(object state) {
            if ((this.GetDynamicDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDynamicDNSCompleted(this, new GetDynamicDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDynamicDNSAsync(onvif.services.device.GetDynamicDNSRequest request) {
            this.GetDynamicDNSAsync(request, null);
        }
        
        public void GetDynamicDNSAsync(onvif.services.device.GetDynamicDNSRequest request, object userState) {
            if ((this.onBeginGetDynamicDNSDelegate == null)) {
                this.onBeginGetDynamicDNSDelegate = new BeginOperationDelegate(this.OnBeginGetDynamicDNS);
            }
            if ((this.onEndGetDynamicDNSDelegate == null)) {
                this.onEndGetDynamicDNSDelegate = new EndOperationDelegate(this.OnEndGetDynamicDNS);
            }
            if ((this.onGetDynamicDNSCompletedDelegate == null)) {
                this.onGetDynamicDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDynamicDNSCompleted);
            }
            base.InvokeAsync(this.onBeginGetDynamicDNSDelegate, new object[] {
                        request}, this.onEndGetDynamicDNSDelegate, this.onGetDynamicDNSCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetDynamicDNSResponse SetDynamicDNS(onvif.services.device.SetDynamicDNSRequest request) {
            return base.Channel.SetDynamicDNS(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDynamicDNS(onvif.services.device.SetDynamicDNSRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDynamicDNS(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetDynamicDNSResponse EndSetDynamicDNS(System.IAsyncResult result) {
            return base.Channel.EndSetDynamicDNS(result);
        }
        
        private System.IAsyncResult OnBeginSetDynamicDNS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetDynamicDNSRequest request = ((onvif.services.device.SetDynamicDNSRequest)(inValues[0]));
            return this.BeginSetDynamicDNS(request, callback, asyncState);
        }
        
        private object[] OnEndSetDynamicDNS(System.IAsyncResult result) {
            onvif.services.device.SetDynamicDNSResponse retVal = this.EndSetDynamicDNS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDynamicDNSCompleted(object state) {
            if ((this.SetDynamicDNSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDynamicDNSCompleted(this, new SetDynamicDNSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDynamicDNSAsync(onvif.services.device.SetDynamicDNSRequest request) {
            this.SetDynamicDNSAsync(request, null);
        }
        
        public void SetDynamicDNSAsync(onvif.services.device.SetDynamicDNSRequest request, object userState) {
            if ((this.onBeginSetDynamicDNSDelegate == null)) {
                this.onBeginSetDynamicDNSDelegate = new BeginOperationDelegate(this.OnBeginSetDynamicDNS);
            }
            if ((this.onEndSetDynamicDNSDelegate == null)) {
                this.onEndSetDynamicDNSDelegate = new EndOperationDelegate(this.OnEndSetDynamicDNS);
            }
            if ((this.onSetDynamicDNSCompletedDelegate == null)) {
                this.onSetDynamicDNSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDynamicDNSCompleted);
            }
            base.InvokeAsync(this.onBeginSetDynamicDNSDelegate, new object[] {
                        request}, this.onEndSetDynamicDNSDelegate, this.onSetDynamicDNSCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetNetworkInterfacesResponse GetNetworkInterfaces(onvif.services.device.GetNetworkInterfacesRequest request) {
            return base.Channel.GetNetworkInterfaces(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkInterfaces(onvif.services.device.GetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkInterfaces(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetNetworkInterfacesResponse EndGetNetworkInterfaces(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkInterfaces(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkInterfaces(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetNetworkInterfacesRequest request = ((onvif.services.device.GetNetworkInterfacesRequest)(inValues[0]));
            return this.BeginGetNetworkInterfaces(request, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkInterfaces(System.IAsyncResult result) {
            onvif.services.device.GetNetworkInterfacesResponse retVal = this.EndGetNetworkInterfaces(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkInterfacesCompleted(object state) {
            if ((this.GetNetworkInterfacesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkInterfacesCompleted(this, new GetNetworkInterfacesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkInterfacesAsync(onvif.services.device.GetNetworkInterfacesRequest request) {
            this.GetNetworkInterfacesAsync(request, null);
        }
        
        public void GetNetworkInterfacesAsync(onvif.services.device.GetNetworkInterfacesRequest request, object userState) {
            if ((this.onBeginGetNetworkInterfacesDelegate == null)) {
                this.onBeginGetNetworkInterfacesDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkInterfaces);
            }
            if ((this.onEndGetNetworkInterfacesDelegate == null)) {
                this.onEndGetNetworkInterfacesDelegate = new EndOperationDelegate(this.OnEndGetNetworkInterfaces);
            }
            if ((this.onGetNetworkInterfacesCompletedDelegate == null)) {
                this.onGetNetworkInterfacesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkInterfacesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkInterfacesDelegate, new object[] {
                        request}, this.onEndGetNetworkInterfacesDelegate, this.onGetNetworkInterfacesCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetNetworkInterfacesResponse SetNetworkInterfaces(onvif.services.device.SetNetworkInterfacesRequest request) {
            return base.Channel.SetNetworkInterfaces(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkInterfaces(onvif.services.device.SetNetworkInterfacesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkInterfaces(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetNetworkInterfacesResponse EndSetNetworkInterfaces(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkInterfaces(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkInterfaces(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetNetworkInterfacesRequest request = ((onvif.services.device.SetNetworkInterfacesRequest)(inValues[0]));
            return this.BeginSetNetworkInterfaces(request, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkInterfaces(System.IAsyncResult result) {
            onvif.services.device.SetNetworkInterfacesResponse retVal = this.EndSetNetworkInterfaces(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetNetworkInterfacesCompleted(object state) {
            if ((this.SetNetworkInterfacesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkInterfacesCompleted(this, new SetNetworkInterfacesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkInterfacesAsync(onvif.services.device.SetNetworkInterfacesRequest request) {
            this.SetNetworkInterfacesAsync(request, null);
        }
        
        public void SetNetworkInterfacesAsync(onvif.services.device.SetNetworkInterfacesRequest request, object userState) {
            if ((this.onBeginSetNetworkInterfacesDelegate == null)) {
                this.onBeginSetNetworkInterfacesDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkInterfaces);
            }
            if ((this.onEndSetNetworkInterfacesDelegate == null)) {
                this.onEndSetNetworkInterfacesDelegate = new EndOperationDelegate(this.OnEndSetNetworkInterfaces);
            }
            if ((this.onSetNetworkInterfacesCompletedDelegate == null)) {
                this.onSetNetworkInterfacesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkInterfacesCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkInterfacesDelegate, new object[] {
                        request}, this.onEndSetNetworkInterfacesDelegate, this.onSetNetworkInterfacesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetNetworkProtocolsResponse GetNetworkProtocols(onvif.services.device.GetNetworkProtocolsRequest request) {
            return base.Channel.GetNetworkProtocols(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkProtocols(onvif.services.device.GetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkProtocols(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetNetworkProtocolsResponse EndGetNetworkProtocols(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkProtocols(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkProtocols(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetNetworkProtocolsRequest request = ((onvif.services.device.GetNetworkProtocolsRequest)(inValues[0]));
            return this.BeginGetNetworkProtocols(request, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkProtocols(System.IAsyncResult result) {
            onvif.services.device.GetNetworkProtocolsResponse retVal = this.EndGetNetworkProtocols(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkProtocolsCompleted(object state) {
            if ((this.GetNetworkProtocolsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkProtocolsCompleted(this, new GetNetworkProtocolsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkProtocolsAsync(onvif.services.device.GetNetworkProtocolsRequest request) {
            this.GetNetworkProtocolsAsync(request, null);
        }
        
        public void GetNetworkProtocolsAsync(onvif.services.device.GetNetworkProtocolsRequest request, object userState) {
            if ((this.onBeginGetNetworkProtocolsDelegate == null)) {
                this.onBeginGetNetworkProtocolsDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkProtocols);
            }
            if ((this.onEndGetNetworkProtocolsDelegate == null)) {
                this.onEndGetNetworkProtocolsDelegate = new EndOperationDelegate(this.OnEndGetNetworkProtocols);
            }
            if ((this.onGetNetworkProtocolsCompletedDelegate == null)) {
                this.onGetNetworkProtocolsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkProtocolsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkProtocolsDelegate, new object[] {
                        request}, this.onEndGetNetworkProtocolsDelegate, this.onGetNetworkProtocolsCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetNetworkProtocolsResponse SetNetworkProtocols(onvif.services.device.SetNetworkProtocolsRequest request) {
            return base.Channel.SetNetworkProtocols(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkProtocols(onvif.services.device.SetNetworkProtocolsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkProtocols(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetNetworkProtocolsResponse EndSetNetworkProtocols(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkProtocols(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkProtocols(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetNetworkProtocolsRequest request = ((onvif.services.device.SetNetworkProtocolsRequest)(inValues[0]));
            return this.BeginSetNetworkProtocols(request, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkProtocols(System.IAsyncResult result) {
            onvif.services.device.SetNetworkProtocolsResponse retVal = this.EndSetNetworkProtocols(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetNetworkProtocolsCompleted(object state) {
            if ((this.SetNetworkProtocolsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkProtocolsCompleted(this, new SetNetworkProtocolsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkProtocolsAsync(onvif.services.device.SetNetworkProtocolsRequest request) {
            this.SetNetworkProtocolsAsync(request, null);
        }
        
        public void SetNetworkProtocolsAsync(onvif.services.device.SetNetworkProtocolsRequest request, object userState) {
            if ((this.onBeginSetNetworkProtocolsDelegate == null)) {
                this.onBeginSetNetworkProtocolsDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkProtocols);
            }
            if ((this.onEndSetNetworkProtocolsDelegate == null)) {
                this.onEndSetNetworkProtocolsDelegate = new EndOperationDelegate(this.OnEndSetNetworkProtocols);
            }
            if ((this.onSetNetworkProtocolsCompletedDelegate == null)) {
                this.onSetNetworkProtocolsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkProtocolsCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkProtocolsDelegate, new object[] {
                        request}, this.onEndSetNetworkProtocolsDelegate, this.onSetNetworkProtocolsCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetNetworkDefaultGatewayResponse GetNetworkDefaultGateway(onvif.services.device.GetNetworkDefaultGatewayRequest request) {
            return base.Channel.GetNetworkDefaultGateway(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetNetworkDefaultGateway(onvif.services.device.GetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkDefaultGateway(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetNetworkDefaultGatewayResponse EndGetNetworkDefaultGateway(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkDefaultGateway(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkDefaultGateway(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetNetworkDefaultGatewayRequest request = ((onvif.services.device.GetNetworkDefaultGatewayRequest)(inValues[0]));
            return this.BeginGetNetworkDefaultGateway(request, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkDefaultGateway(System.IAsyncResult result) {
            onvif.services.device.GetNetworkDefaultGatewayResponse retVal = this.EndGetNetworkDefaultGateway(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkDefaultGatewayCompleted(object state) {
            if ((this.GetNetworkDefaultGatewayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkDefaultGatewayCompleted(this, new GetNetworkDefaultGatewayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkDefaultGatewayAsync(onvif.services.device.GetNetworkDefaultGatewayRequest request) {
            this.GetNetworkDefaultGatewayAsync(request, null);
        }
        
        public void GetNetworkDefaultGatewayAsync(onvif.services.device.GetNetworkDefaultGatewayRequest request, object userState) {
            if ((this.onBeginGetNetworkDefaultGatewayDelegate == null)) {
                this.onBeginGetNetworkDefaultGatewayDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkDefaultGateway);
            }
            if ((this.onEndGetNetworkDefaultGatewayDelegate == null)) {
                this.onEndGetNetworkDefaultGatewayDelegate = new EndOperationDelegate(this.OnEndGetNetworkDefaultGateway);
            }
            if ((this.onGetNetworkDefaultGatewayCompletedDelegate == null)) {
                this.onGetNetworkDefaultGatewayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkDefaultGatewayCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkDefaultGatewayDelegate, new object[] {
                        request}, this.onEndGetNetworkDefaultGatewayDelegate, this.onGetNetworkDefaultGatewayCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetNetworkDefaultGatewayResponse SetNetworkDefaultGateway(onvif.services.device.SetNetworkDefaultGatewayRequest request) {
            return base.Channel.SetNetworkDefaultGateway(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetNetworkDefaultGateway(onvif.services.device.SetNetworkDefaultGatewayRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetNetworkDefaultGateway(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetNetworkDefaultGatewayResponse EndSetNetworkDefaultGateway(System.IAsyncResult result) {
            return base.Channel.EndSetNetworkDefaultGateway(result);
        }
        
        private System.IAsyncResult OnBeginSetNetworkDefaultGateway(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetNetworkDefaultGatewayRequest request = ((onvif.services.device.SetNetworkDefaultGatewayRequest)(inValues[0]));
            return this.BeginSetNetworkDefaultGateway(request, callback, asyncState);
        }
        
        private object[] OnEndSetNetworkDefaultGateway(System.IAsyncResult result) {
            onvif.services.device.SetNetworkDefaultGatewayResponse retVal = this.EndSetNetworkDefaultGateway(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetNetworkDefaultGatewayCompleted(object state) {
            if ((this.SetNetworkDefaultGatewayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetNetworkDefaultGatewayCompleted(this, new SetNetworkDefaultGatewayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetNetworkDefaultGatewayAsync(onvif.services.device.SetNetworkDefaultGatewayRequest request) {
            this.SetNetworkDefaultGatewayAsync(request, null);
        }
        
        public void SetNetworkDefaultGatewayAsync(onvif.services.device.SetNetworkDefaultGatewayRequest request, object userState) {
            if ((this.onBeginSetNetworkDefaultGatewayDelegate == null)) {
                this.onBeginSetNetworkDefaultGatewayDelegate = new BeginOperationDelegate(this.OnBeginSetNetworkDefaultGateway);
            }
            if ((this.onEndSetNetworkDefaultGatewayDelegate == null)) {
                this.onEndSetNetworkDefaultGatewayDelegate = new EndOperationDelegate(this.OnEndSetNetworkDefaultGateway);
            }
            if ((this.onSetNetworkDefaultGatewayCompletedDelegate == null)) {
                this.onSetNetworkDefaultGatewayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetNetworkDefaultGatewayCompleted);
            }
            base.InvokeAsync(this.onBeginSetNetworkDefaultGatewayDelegate, new object[] {
                        request}, this.onEndSetNetworkDefaultGatewayDelegate, this.onSetNetworkDefaultGatewayCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetZeroConfigurationResponse GetZeroConfiguration(onvif.services.device.GetZeroConfigurationRequest request) {
            return base.Channel.GetZeroConfiguration(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetZeroConfiguration(onvif.services.device.GetZeroConfigurationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZeroConfiguration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetZeroConfigurationResponse EndGetZeroConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetZeroConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetZeroConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetZeroConfigurationRequest request = ((onvif.services.device.GetZeroConfigurationRequest)(inValues[0]));
            return this.BeginGetZeroConfiguration(request, callback, asyncState);
        }
        
        private object[] OnEndGetZeroConfiguration(System.IAsyncResult result) {
            onvif.services.device.GetZeroConfigurationResponse retVal = this.EndGetZeroConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZeroConfigurationCompleted(object state) {
            if ((this.GetZeroConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZeroConfigurationCompleted(this, new GetZeroConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZeroConfigurationAsync(onvif.services.device.GetZeroConfigurationRequest request) {
            this.GetZeroConfigurationAsync(request, null);
        }
        
        public void GetZeroConfigurationAsync(onvif.services.device.GetZeroConfigurationRequest request, object userState) {
            if ((this.onBeginGetZeroConfigurationDelegate == null)) {
                this.onBeginGetZeroConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetZeroConfiguration);
            }
            if ((this.onEndGetZeroConfigurationDelegate == null)) {
                this.onEndGetZeroConfigurationDelegate = new EndOperationDelegate(this.OnEndGetZeroConfiguration);
            }
            if ((this.onGetZeroConfigurationCompletedDelegate == null)) {
                this.onGetZeroConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZeroConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetZeroConfigurationDelegate, new object[] {
                        request}, this.onEndGetZeroConfigurationDelegate, this.onGetZeroConfigurationCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetZeroConfigurationResponse SetZeroConfiguration(onvif.services.device.SetZeroConfigurationRequest request) {
            return base.Channel.SetZeroConfiguration(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetZeroConfiguration(onvif.services.device.SetZeroConfigurationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetZeroConfiguration(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetZeroConfigurationResponse EndSetZeroConfiguration(System.IAsyncResult result) {
            return base.Channel.EndSetZeroConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginSetZeroConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetZeroConfigurationRequest request = ((onvif.services.device.SetZeroConfigurationRequest)(inValues[0]));
            return this.BeginSetZeroConfiguration(request, callback, asyncState);
        }
        
        private object[] OnEndSetZeroConfiguration(System.IAsyncResult result) {
            onvif.services.device.SetZeroConfigurationResponse retVal = this.EndSetZeroConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetZeroConfigurationCompleted(object state) {
            if ((this.SetZeroConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetZeroConfigurationCompleted(this, new SetZeroConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetZeroConfigurationAsync(onvif.services.device.SetZeroConfigurationRequest request) {
            this.SetZeroConfigurationAsync(request, null);
        }
        
        public void SetZeroConfigurationAsync(onvif.services.device.SetZeroConfigurationRequest request, object userState) {
            if ((this.onBeginSetZeroConfigurationDelegate == null)) {
                this.onBeginSetZeroConfigurationDelegate = new BeginOperationDelegate(this.OnBeginSetZeroConfiguration);
            }
            if ((this.onEndSetZeroConfigurationDelegate == null)) {
                this.onEndSetZeroConfigurationDelegate = new EndOperationDelegate(this.OnEndSetZeroConfiguration);
            }
            if ((this.onSetZeroConfigurationCompletedDelegate == null)) {
                this.onSetZeroConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetZeroConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginSetZeroConfigurationDelegate, new object[] {
                        request}, this.onEndSetZeroConfigurationDelegate, this.onSetZeroConfigurationCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetIPAddressFilterResponse GetIPAddressFilter(onvif.services.device.GetIPAddressFilterRequest request) {
            return base.Channel.GetIPAddressFilter(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIPAddressFilter(onvif.services.device.GetIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIPAddressFilter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetIPAddressFilterResponse EndGetIPAddressFilter(System.IAsyncResult result) {
            return base.Channel.EndGetIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginGetIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetIPAddressFilterRequest request = ((onvif.services.device.GetIPAddressFilterRequest)(inValues[0]));
            return this.BeginGetIPAddressFilter(request, callback, asyncState);
        }
        
        private object[] OnEndGetIPAddressFilter(System.IAsyncResult result) {
            onvif.services.device.GetIPAddressFilterResponse retVal = this.EndGetIPAddressFilter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIPAddressFilterCompleted(object state) {
            if ((this.GetIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIPAddressFilterCompleted(this, new GetIPAddressFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIPAddressFilterAsync(onvif.services.device.GetIPAddressFilterRequest request) {
            this.GetIPAddressFilterAsync(request, null);
        }
        
        public void GetIPAddressFilterAsync(onvif.services.device.GetIPAddressFilterRequest request, object userState) {
            if ((this.onBeginGetIPAddressFilterDelegate == null)) {
                this.onBeginGetIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginGetIPAddressFilter);
            }
            if ((this.onEndGetIPAddressFilterDelegate == null)) {
                this.onEndGetIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndGetIPAddressFilter);
            }
            if ((this.onGetIPAddressFilterCompletedDelegate == null)) {
                this.onGetIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginGetIPAddressFilterDelegate, new object[] {
                        request}, this.onEndGetIPAddressFilterDelegate, this.onGetIPAddressFilterCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetIPAddressFilterResponse SetIPAddressFilter(onvif.services.device.SetIPAddressFilterRequest request) {
            return base.Channel.SetIPAddressFilter(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetIPAddressFilter(onvif.services.device.SetIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetIPAddressFilter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetIPAddressFilterResponse EndSetIPAddressFilter(System.IAsyncResult result) {
            return base.Channel.EndSetIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginSetIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetIPAddressFilterRequest request = ((onvif.services.device.SetIPAddressFilterRequest)(inValues[0]));
            return this.BeginSetIPAddressFilter(request, callback, asyncState);
        }
        
        private object[] OnEndSetIPAddressFilter(System.IAsyncResult result) {
            onvif.services.device.SetIPAddressFilterResponse retVal = this.EndSetIPAddressFilter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetIPAddressFilterCompleted(object state) {
            if ((this.SetIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetIPAddressFilterCompleted(this, new SetIPAddressFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetIPAddressFilterAsync(onvif.services.device.SetIPAddressFilterRequest request) {
            this.SetIPAddressFilterAsync(request, null);
        }
        
        public void SetIPAddressFilterAsync(onvif.services.device.SetIPAddressFilterRequest request, object userState) {
            if ((this.onBeginSetIPAddressFilterDelegate == null)) {
                this.onBeginSetIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginSetIPAddressFilter);
            }
            if ((this.onEndSetIPAddressFilterDelegate == null)) {
                this.onEndSetIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndSetIPAddressFilter);
            }
            if ((this.onSetIPAddressFilterCompletedDelegate == null)) {
                this.onSetIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginSetIPAddressFilterDelegate, new object[] {
                        request}, this.onEndSetIPAddressFilterDelegate, this.onSetIPAddressFilterCompletedDelegate, userState);
        }
        
        public onvif.services.device.AddIPAddressFilterResponse AddIPAddressFilter(onvif.services.device.AddIPAddressFilterRequest request) {
            return base.Channel.AddIPAddressFilter(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddIPAddressFilter(onvif.services.device.AddIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddIPAddressFilter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.AddIPAddressFilterResponse EndAddIPAddressFilter(System.IAsyncResult result) {
            return base.Channel.EndAddIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginAddIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.AddIPAddressFilterRequest request = ((onvif.services.device.AddIPAddressFilterRequest)(inValues[0]));
            return this.BeginAddIPAddressFilter(request, callback, asyncState);
        }
        
        private object[] OnEndAddIPAddressFilter(System.IAsyncResult result) {
            onvif.services.device.AddIPAddressFilterResponse retVal = this.EndAddIPAddressFilter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddIPAddressFilterCompleted(object state) {
            if ((this.AddIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddIPAddressFilterCompleted(this, new AddIPAddressFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddIPAddressFilterAsync(onvif.services.device.AddIPAddressFilterRequest request) {
            this.AddIPAddressFilterAsync(request, null);
        }
        
        public void AddIPAddressFilterAsync(onvif.services.device.AddIPAddressFilterRequest request, object userState) {
            if ((this.onBeginAddIPAddressFilterDelegate == null)) {
                this.onBeginAddIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginAddIPAddressFilter);
            }
            if ((this.onEndAddIPAddressFilterDelegate == null)) {
                this.onEndAddIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndAddIPAddressFilter);
            }
            if ((this.onAddIPAddressFilterCompletedDelegate == null)) {
                this.onAddIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginAddIPAddressFilterDelegate, new object[] {
                        request}, this.onEndAddIPAddressFilterDelegate, this.onAddIPAddressFilterCompletedDelegate, userState);
        }
        
        public onvif.services.device.RemoveIPAddressFilterResponse RemoveIPAddressFilter(onvif.services.device.RemoveIPAddressFilterRequest request) {
            return base.Channel.RemoveIPAddressFilter(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveIPAddressFilter(onvif.services.device.RemoveIPAddressFilterRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveIPAddressFilter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.RemoveIPAddressFilterResponse EndRemoveIPAddressFilter(System.IAsyncResult result) {
            return base.Channel.EndRemoveIPAddressFilter(result);
        }
        
        private System.IAsyncResult OnBeginRemoveIPAddressFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.RemoveIPAddressFilterRequest request = ((onvif.services.device.RemoveIPAddressFilterRequest)(inValues[0]));
            return this.BeginRemoveIPAddressFilter(request, callback, asyncState);
        }
        
        private object[] OnEndRemoveIPAddressFilter(System.IAsyncResult result) {
            onvif.services.device.RemoveIPAddressFilterResponse retVal = this.EndRemoveIPAddressFilter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveIPAddressFilterCompleted(object state) {
            if ((this.RemoveIPAddressFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveIPAddressFilterCompleted(this, new RemoveIPAddressFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveIPAddressFilterAsync(onvif.services.device.RemoveIPAddressFilterRequest request) {
            this.RemoveIPAddressFilterAsync(request, null);
        }
        
        public void RemoveIPAddressFilterAsync(onvif.services.device.RemoveIPAddressFilterRequest request, object userState) {
            if ((this.onBeginRemoveIPAddressFilterDelegate == null)) {
                this.onBeginRemoveIPAddressFilterDelegate = new BeginOperationDelegate(this.OnBeginRemoveIPAddressFilter);
            }
            if ((this.onEndRemoveIPAddressFilterDelegate == null)) {
                this.onEndRemoveIPAddressFilterDelegate = new EndOperationDelegate(this.OnEndRemoveIPAddressFilter);
            }
            if ((this.onRemoveIPAddressFilterCompletedDelegate == null)) {
                this.onRemoveIPAddressFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveIPAddressFilterCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveIPAddressFilterDelegate, new object[] {
                        request}, this.onEndRemoveIPAddressFilterDelegate, this.onRemoveIPAddressFilterCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetAccessPolicyResponse GetAccessPolicy(onvif.services.device.GetAccessPolicyRequest request) {
            return base.Channel.GetAccessPolicy(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccessPolicy(onvif.services.device.GetAccessPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccessPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetAccessPolicyResponse EndGetAccessPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetAccessPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetAccessPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetAccessPolicyRequest request = ((onvif.services.device.GetAccessPolicyRequest)(inValues[0]));
            return this.BeginGetAccessPolicy(request, callback, asyncState);
        }
        
        private object[] OnEndGetAccessPolicy(System.IAsyncResult result) {
            onvif.services.device.GetAccessPolicyResponse retVal = this.EndGetAccessPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccessPolicyCompleted(object state) {
            if ((this.GetAccessPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccessPolicyCompleted(this, new GetAccessPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccessPolicyAsync(onvif.services.device.GetAccessPolicyRequest request) {
            this.GetAccessPolicyAsync(request, null);
        }
        
        public void GetAccessPolicyAsync(onvif.services.device.GetAccessPolicyRequest request, object userState) {
            if ((this.onBeginGetAccessPolicyDelegate == null)) {
                this.onBeginGetAccessPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetAccessPolicy);
            }
            if ((this.onEndGetAccessPolicyDelegate == null)) {
                this.onEndGetAccessPolicyDelegate = new EndOperationDelegate(this.OnEndGetAccessPolicy);
            }
            if ((this.onGetAccessPolicyCompletedDelegate == null)) {
                this.onGetAccessPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccessPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccessPolicyDelegate, new object[] {
                        request}, this.onEndGetAccessPolicyDelegate, this.onGetAccessPolicyCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetAccessPolicyResponse SetAccessPolicy(onvif.services.device.SetAccessPolicyRequest request) {
            return base.Channel.SetAccessPolicy(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetAccessPolicy(onvif.services.device.SetAccessPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetAccessPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetAccessPolicyResponse EndSetAccessPolicy(System.IAsyncResult result) {
            return base.Channel.EndSetAccessPolicy(result);
        }
        
        private System.IAsyncResult OnBeginSetAccessPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetAccessPolicyRequest request = ((onvif.services.device.SetAccessPolicyRequest)(inValues[0]));
            return this.BeginSetAccessPolicy(request, callback, asyncState);
        }
        
        private object[] OnEndSetAccessPolicy(System.IAsyncResult result) {
            onvif.services.device.SetAccessPolicyResponse retVal = this.EndSetAccessPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetAccessPolicyCompleted(object state) {
            if ((this.SetAccessPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetAccessPolicyCompleted(this, new SetAccessPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetAccessPolicyAsync(onvif.services.device.SetAccessPolicyRequest request) {
            this.SetAccessPolicyAsync(request, null);
        }
        
        public void SetAccessPolicyAsync(onvif.services.device.SetAccessPolicyRequest request, object userState) {
            if ((this.onBeginSetAccessPolicyDelegate == null)) {
                this.onBeginSetAccessPolicyDelegate = new BeginOperationDelegate(this.OnBeginSetAccessPolicy);
            }
            if ((this.onEndSetAccessPolicyDelegate == null)) {
                this.onEndSetAccessPolicyDelegate = new EndOperationDelegate(this.OnEndSetAccessPolicy);
            }
            if ((this.onSetAccessPolicyCompletedDelegate == null)) {
                this.onSetAccessPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetAccessPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginSetAccessPolicyDelegate, new object[] {
                        request}, this.onEndSetAccessPolicyDelegate, this.onSetAccessPolicyCompletedDelegate, userState);
        }
        
        public onvif.services.device.CreateCertificateResponse CreateCertificate(onvif.services.device.CreateCertificateRequest request) {
            return base.Channel.CreateCertificate(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateCertificate(onvif.services.device.CreateCertificateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCertificate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.CreateCertificateResponse EndCreateCertificate(System.IAsyncResult result) {
            return base.Channel.EndCreateCertificate(result);
        }
        
        private System.IAsyncResult OnBeginCreateCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.CreateCertificateRequest request = ((onvif.services.device.CreateCertificateRequest)(inValues[0]));
            return this.BeginCreateCertificate(request, callback, asyncState);
        }
        
        private object[] OnEndCreateCertificate(System.IAsyncResult result) {
            onvif.services.device.CreateCertificateResponse retVal = this.EndCreateCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCertificateCompleted(object state) {
            if ((this.CreateCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCertificateCompleted(this, new CreateCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCertificateAsync(onvif.services.device.CreateCertificateRequest request) {
            this.CreateCertificateAsync(request, null);
        }
        
        public void CreateCertificateAsync(onvif.services.device.CreateCertificateRequest request, object userState) {
            if ((this.onBeginCreateCertificateDelegate == null)) {
                this.onBeginCreateCertificateDelegate = new BeginOperationDelegate(this.OnBeginCreateCertificate);
            }
            if ((this.onEndCreateCertificateDelegate == null)) {
                this.onEndCreateCertificateDelegate = new EndOperationDelegate(this.OnEndCreateCertificate);
            }
            if ((this.onCreateCertificateCompletedDelegate == null)) {
                this.onCreateCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCertificateDelegate, new object[] {
                        request}, this.onEndCreateCertificateDelegate, this.onCreateCertificateCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetCertificatesResponse GetCertificates(onvif.services.device.GetCertificatesRequest request) {
            return base.Channel.GetCertificates(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificates(onvif.services.device.GetCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetCertificatesResponse EndGetCertificates(System.IAsyncResult result) {
            return base.Channel.EndGetCertificates(result);
        }
        
        private System.IAsyncResult OnBeginGetCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetCertificatesRequest request = ((onvif.services.device.GetCertificatesRequest)(inValues[0]));
            return this.BeginGetCertificates(request, callback, asyncState);
        }
        
        private object[] OnEndGetCertificates(System.IAsyncResult result) {
            onvif.services.device.GetCertificatesResponse retVal = this.EndGetCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificatesCompleted(object state) {
            if ((this.GetCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificatesCompleted(this, new GetCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificatesAsync(onvif.services.device.GetCertificatesRequest request) {
            this.GetCertificatesAsync(request, null);
        }
        
        public void GetCertificatesAsync(onvif.services.device.GetCertificatesRequest request, object userState) {
            if ((this.onBeginGetCertificatesDelegate == null)) {
                this.onBeginGetCertificatesDelegate = new BeginOperationDelegate(this.OnBeginGetCertificates);
            }
            if ((this.onEndGetCertificatesDelegate == null)) {
                this.onEndGetCertificatesDelegate = new EndOperationDelegate(this.OnEndGetCertificates);
            }
            if ((this.onGetCertificatesCompletedDelegate == null)) {
                this.onGetCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificatesDelegate, new object[] {
                        request}, this.onEndGetCertificatesDelegate, this.onGetCertificatesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetCertificatesStatusResponse GetCertificatesStatus(onvif.services.device.GetCertificatesStatusRequest request) {
            return base.Channel.GetCertificatesStatus(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificatesStatus(onvif.services.device.GetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificatesStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetCertificatesStatusResponse EndGetCertificatesStatus(System.IAsyncResult result) {
            return base.Channel.EndGetCertificatesStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetCertificatesStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetCertificatesStatusRequest request = ((onvif.services.device.GetCertificatesStatusRequest)(inValues[0]));
            return this.BeginGetCertificatesStatus(request, callback, asyncState);
        }
        
        private object[] OnEndGetCertificatesStatus(System.IAsyncResult result) {
            onvif.services.device.GetCertificatesStatusResponse retVal = this.EndGetCertificatesStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificatesStatusCompleted(object state) {
            if ((this.GetCertificatesStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificatesStatusCompleted(this, new GetCertificatesStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificatesStatusAsync(onvif.services.device.GetCertificatesStatusRequest request) {
            this.GetCertificatesStatusAsync(request, null);
        }
        
        public void GetCertificatesStatusAsync(onvif.services.device.GetCertificatesStatusRequest request, object userState) {
            if ((this.onBeginGetCertificatesStatusDelegate == null)) {
                this.onBeginGetCertificatesStatusDelegate = new BeginOperationDelegate(this.OnBeginGetCertificatesStatus);
            }
            if ((this.onEndGetCertificatesStatusDelegate == null)) {
                this.onEndGetCertificatesStatusDelegate = new EndOperationDelegate(this.OnEndGetCertificatesStatus);
            }
            if ((this.onGetCertificatesStatusCompletedDelegate == null)) {
                this.onGetCertificatesStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificatesStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificatesStatusDelegate, new object[] {
                        request}, this.onEndGetCertificatesStatusDelegate, this.onGetCertificatesStatusCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetCertificatesStatusResponse SetCertificatesStatus(onvif.services.device.SetCertificatesStatusRequest request) {
            return base.Channel.SetCertificatesStatus(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetCertificatesStatus(onvif.services.device.SetCertificatesStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetCertificatesStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetCertificatesStatusResponse EndSetCertificatesStatus(System.IAsyncResult result) {
            return base.Channel.EndSetCertificatesStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetCertificatesStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetCertificatesStatusRequest request = ((onvif.services.device.SetCertificatesStatusRequest)(inValues[0]));
            return this.BeginSetCertificatesStatus(request, callback, asyncState);
        }
        
        private object[] OnEndSetCertificatesStatus(System.IAsyncResult result) {
            onvif.services.device.SetCertificatesStatusResponse retVal = this.EndSetCertificatesStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetCertificatesStatusCompleted(object state) {
            if ((this.SetCertificatesStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetCertificatesStatusCompleted(this, new SetCertificatesStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetCertificatesStatusAsync(onvif.services.device.SetCertificatesStatusRequest request) {
            this.SetCertificatesStatusAsync(request, null);
        }
        
        public void SetCertificatesStatusAsync(onvif.services.device.SetCertificatesStatusRequest request, object userState) {
            if ((this.onBeginSetCertificatesStatusDelegate == null)) {
                this.onBeginSetCertificatesStatusDelegate = new BeginOperationDelegate(this.OnBeginSetCertificatesStatus);
            }
            if ((this.onEndSetCertificatesStatusDelegate == null)) {
                this.onEndSetCertificatesStatusDelegate = new EndOperationDelegate(this.OnEndSetCertificatesStatus);
            }
            if ((this.onSetCertificatesStatusCompletedDelegate == null)) {
                this.onSetCertificatesStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetCertificatesStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetCertificatesStatusDelegate, new object[] {
                        request}, this.onEndSetCertificatesStatusDelegate, this.onSetCertificatesStatusCompletedDelegate, userState);
        }
        
        public onvif.services.device.DeleteCertificatesResponse DeleteCertificates(onvif.services.device.DeleteCertificatesRequest request) {
            return base.Channel.DeleteCertificates(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteCertificates(onvif.services.device.DeleteCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.DeleteCertificatesResponse EndDeleteCertificates(System.IAsyncResult result) {
            return base.Channel.EndDeleteCertificates(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.DeleteCertificatesRequest request = ((onvif.services.device.DeleteCertificatesRequest)(inValues[0]));
            return this.BeginDeleteCertificates(request, callback, asyncState);
        }
        
        private object[] OnEndDeleteCertificates(System.IAsyncResult result) {
            onvif.services.device.DeleteCertificatesResponse retVal = this.EndDeleteCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCertificatesCompleted(object state) {
            if ((this.DeleteCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCertificatesCompleted(this, new DeleteCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCertificatesAsync(onvif.services.device.DeleteCertificatesRequest request) {
            this.DeleteCertificatesAsync(request, null);
        }
        
        public void DeleteCertificatesAsync(onvif.services.device.DeleteCertificatesRequest request, object userState) {
            if ((this.onBeginDeleteCertificatesDelegate == null)) {
                this.onBeginDeleteCertificatesDelegate = new BeginOperationDelegate(this.OnBeginDeleteCertificates);
            }
            if ((this.onEndDeleteCertificatesDelegate == null)) {
                this.onEndDeleteCertificatesDelegate = new EndOperationDelegate(this.OnEndDeleteCertificates);
            }
            if ((this.onDeleteCertificatesCompletedDelegate == null)) {
                this.onDeleteCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCertificatesDelegate, new object[] {
                        request}, this.onEndDeleteCertificatesDelegate, this.onDeleteCertificatesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetPkcs10RequestResponse GetPkcs10Request(onvif.services.device.GetPkcs10RequestRequest request) {
            return base.Channel.GetPkcs10Request(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPkcs10Request(onvif.services.device.GetPkcs10RequestRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPkcs10Request(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetPkcs10RequestResponse EndGetPkcs10Request(System.IAsyncResult result) {
            return base.Channel.EndGetPkcs10Request(result);
        }
        
        private System.IAsyncResult OnBeginGetPkcs10Request(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetPkcs10RequestRequest request = ((onvif.services.device.GetPkcs10RequestRequest)(inValues[0]));
            return this.BeginGetPkcs10Request(request, callback, asyncState);
        }
        
        private object[] OnEndGetPkcs10Request(System.IAsyncResult result) {
            onvif.services.device.GetPkcs10RequestResponse retVal = this.EndGetPkcs10Request(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPkcs10RequestCompleted(object state) {
            if ((this.GetPkcs10RequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPkcs10RequestCompleted(this, new GetPkcs10RequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPkcs10RequestAsync(onvif.services.device.GetPkcs10RequestRequest request) {
            this.GetPkcs10RequestAsync(request, null);
        }
        
        public void GetPkcs10RequestAsync(onvif.services.device.GetPkcs10RequestRequest request, object userState) {
            if ((this.onBeginGetPkcs10RequestDelegate == null)) {
                this.onBeginGetPkcs10RequestDelegate = new BeginOperationDelegate(this.OnBeginGetPkcs10Request);
            }
            if ((this.onEndGetPkcs10RequestDelegate == null)) {
                this.onEndGetPkcs10RequestDelegate = new EndOperationDelegate(this.OnEndGetPkcs10Request);
            }
            if ((this.onGetPkcs10RequestCompletedDelegate == null)) {
                this.onGetPkcs10RequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPkcs10RequestCompleted);
            }
            base.InvokeAsync(this.onBeginGetPkcs10RequestDelegate, new object[] {
                        request}, this.onEndGetPkcs10RequestDelegate, this.onGetPkcs10RequestCompletedDelegate, userState);
        }
        
        public onvif.services.device.LoadCertificatesResponse LoadCertificates(onvif.services.device.LoadCertificatesRequest request) {
            return base.Channel.LoadCertificates(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadCertificates(onvif.services.device.LoadCertificatesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadCertificates(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.LoadCertificatesResponse EndLoadCertificates(System.IAsyncResult result) {
            return base.Channel.EndLoadCertificates(result);
        }
        
        private System.IAsyncResult OnBeginLoadCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.LoadCertificatesRequest request = ((onvif.services.device.LoadCertificatesRequest)(inValues[0]));
            return this.BeginLoadCertificates(request, callback, asyncState);
        }
        
        private object[] OnEndLoadCertificates(System.IAsyncResult result) {
            onvif.services.device.LoadCertificatesResponse retVal = this.EndLoadCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadCertificatesCompleted(object state) {
            if ((this.LoadCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCertificatesCompleted(this, new LoadCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCertificatesAsync(onvif.services.device.LoadCertificatesRequest request) {
            this.LoadCertificatesAsync(request, null);
        }
        
        public void LoadCertificatesAsync(onvif.services.device.LoadCertificatesRequest request, object userState) {
            if ((this.onBeginLoadCertificatesDelegate == null)) {
                this.onBeginLoadCertificatesDelegate = new BeginOperationDelegate(this.OnBeginLoadCertificates);
            }
            if ((this.onEndLoadCertificatesDelegate == null)) {
                this.onEndLoadCertificatesDelegate = new EndOperationDelegate(this.OnEndLoadCertificates);
            }
            if ((this.onLoadCertificatesCompletedDelegate == null)) {
                this.onLoadCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCertificatesDelegate, new object[] {
                        request}, this.onEndLoadCertificatesDelegate, this.onLoadCertificatesCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetClientCertificateModeResponse GetClientCertificateMode(onvif.services.device.GetClientCertificateModeRequest request) {
            return base.Channel.GetClientCertificateMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientCertificateMode(onvif.services.device.GetClientCertificateModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientCertificateMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetClientCertificateModeResponse EndGetClientCertificateMode(System.IAsyncResult result) {
            return base.Channel.EndGetClientCertificateMode(result);
        }
        
        private System.IAsyncResult OnBeginGetClientCertificateMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetClientCertificateModeRequest request = ((onvif.services.device.GetClientCertificateModeRequest)(inValues[0]));
            return this.BeginGetClientCertificateMode(request, callback, asyncState);
        }
        
        private object[] OnEndGetClientCertificateMode(System.IAsyncResult result) {
            onvif.services.device.GetClientCertificateModeResponse retVal = this.EndGetClientCertificateMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientCertificateModeCompleted(object state) {
            if ((this.GetClientCertificateModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientCertificateModeCompleted(this, new GetClientCertificateModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientCertificateModeAsync(onvif.services.device.GetClientCertificateModeRequest request) {
            this.GetClientCertificateModeAsync(request, null);
        }
        
        public void GetClientCertificateModeAsync(onvif.services.device.GetClientCertificateModeRequest request, object userState) {
            if ((this.onBeginGetClientCertificateModeDelegate == null)) {
                this.onBeginGetClientCertificateModeDelegate = new BeginOperationDelegate(this.OnBeginGetClientCertificateMode);
            }
            if ((this.onEndGetClientCertificateModeDelegate == null)) {
                this.onEndGetClientCertificateModeDelegate = new EndOperationDelegate(this.OnEndGetClientCertificateMode);
            }
            if ((this.onGetClientCertificateModeCompletedDelegate == null)) {
                this.onGetClientCertificateModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientCertificateModeCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientCertificateModeDelegate, new object[] {
                        request}, this.onEndGetClientCertificateModeDelegate, this.onGetClientCertificateModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetClientCertificateModeResponse SetClientCertificateMode(onvif.services.device.SetClientCertificateModeRequest request) {
            return base.Channel.SetClientCertificateMode(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetClientCertificateMode(onvif.services.device.SetClientCertificateModeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetClientCertificateMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetClientCertificateModeResponse EndSetClientCertificateMode(System.IAsyncResult result) {
            return base.Channel.EndSetClientCertificateMode(result);
        }
        
        private System.IAsyncResult OnBeginSetClientCertificateMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetClientCertificateModeRequest request = ((onvif.services.device.SetClientCertificateModeRequest)(inValues[0]));
            return this.BeginSetClientCertificateMode(request, callback, asyncState);
        }
        
        private object[] OnEndSetClientCertificateMode(System.IAsyncResult result) {
            onvif.services.device.SetClientCertificateModeResponse retVal = this.EndSetClientCertificateMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetClientCertificateModeCompleted(object state) {
            if ((this.SetClientCertificateModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetClientCertificateModeCompleted(this, new SetClientCertificateModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetClientCertificateModeAsync(onvif.services.device.SetClientCertificateModeRequest request) {
            this.SetClientCertificateModeAsync(request, null);
        }
        
        public void SetClientCertificateModeAsync(onvif.services.device.SetClientCertificateModeRequest request, object userState) {
            if ((this.onBeginSetClientCertificateModeDelegate == null)) {
                this.onBeginSetClientCertificateModeDelegate = new BeginOperationDelegate(this.OnBeginSetClientCertificateMode);
            }
            if ((this.onEndSetClientCertificateModeDelegate == null)) {
                this.onEndSetClientCertificateModeDelegate = new EndOperationDelegate(this.OnEndSetClientCertificateMode);
            }
            if ((this.onSetClientCertificateModeCompletedDelegate == null)) {
                this.onSetClientCertificateModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetClientCertificateModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetClientCertificateModeDelegate, new object[] {
                        request}, this.onEndSetClientCertificateModeDelegate, this.onSetClientCertificateModeCompletedDelegate, userState);
        }
        
        public onvif.services.device.GetRelayOutputsResponse GetRelayOutputs(onvif.services.device.GetRelayOutputsRequest request) {
            return base.Channel.GetRelayOutputs(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRelayOutputs(onvif.services.device.GetRelayOutputsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelayOutputs(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.GetRelayOutputsResponse EndGetRelayOutputs(System.IAsyncResult result) {
            return base.Channel.EndGetRelayOutputs(result);
        }
        
        private System.IAsyncResult OnBeginGetRelayOutputs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.GetRelayOutputsRequest request = ((onvif.services.device.GetRelayOutputsRequest)(inValues[0]));
            return this.BeginGetRelayOutputs(request, callback, asyncState);
        }
        
        private object[] OnEndGetRelayOutputs(System.IAsyncResult result) {
            onvif.services.device.GetRelayOutputsResponse retVal = this.EndGetRelayOutputs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelayOutputsCompleted(object state) {
            if ((this.GetRelayOutputsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelayOutputsCompleted(this, new GetRelayOutputsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelayOutputsAsync(onvif.services.device.GetRelayOutputsRequest request) {
            this.GetRelayOutputsAsync(request, null);
        }
        
        public void GetRelayOutputsAsync(onvif.services.device.GetRelayOutputsRequest request, object userState) {
            if ((this.onBeginGetRelayOutputsDelegate == null)) {
                this.onBeginGetRelayOutputsDelegate = new BeginOperationDelegate(this.OnBeginGetRelayOutputs);
            }
            if ((this.onEndGetRelayOutputsDelegate == null)) {
                this.onEndGetRelayOutputsDelegate = new EndOperationDelegate(this.OnEndGetRelayOutputs);
            }
            if ((this.onGetRelayOutputsCompletedDelegate == null)) {
                this.onGetRelayOutputsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelayOutputsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelayOutputsDelegate, new object[] {
                        request}, this.onEndGetRelayOutputsDelegate, this.onGetRelayOutputsCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetRelayOutputSettingsResponse SetRelayOutputSettings(onvif.services.device.SetRelayOutputSettingsRequest request) {
            return base.Channel.SetRelayOutputSettings(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRelayOutputSettings(onvif.services.device.SetRelayOutputSettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRelayOutputSettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetRelayOutputSettingsResponse EndSetRelayOutputSettings(System.IAsyncResult result) {
            return base.Channel.EndSetRelayOutputSettings(result);
        }
        
        private System.IAsyncResult OnBeginSetRelayOutputSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetRelayOutputSettingsRequest request = ((onvif.services.device.SetRelayOutputSettingsRequest)(inValues[0]));
            return this.BeginSetRelayOutputSettings(request, callback, asyncState);
        }
        
        private object[] OnEndSetRelayOutputSettings(System.IAsyncResult result) {
            onvif.services.device.SetRelayOutputSettingsResponse retVal = this.EndSetRelayOutputSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetRelayOutputSettingsCompleted(object state) {
            if ((this.SetRelayOutputSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRelayOutputSettingsCompleted(this, new SetRelayOutputSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRelayOutputSettingsAsync(onvif.services.device.SetRelayOutputSettingsRequest request) {
            this.SetRelayOutputSettingsAsync(request, null);
        }
        
        public void SetRelayOutputSettingsAsync(onvif.services.device.SetRelayOutputSettingsRequest request, object userState) {
            if ((this.onBeginSetRelayOutputSettingsDelegate == null)) {
                this.onBeginSetRelayOutputSettingsDelegate = new BeginOperationDelegate(this.OnBeginSetRelayOutputSettings);
            }
            if ((this.onEndSetRelayOutputSettingsDelegate == null)) {
                this.onEndSetRelayOutputSettingsDelegate = new EndOperationDelegate(this.OnEndSetRelayOutputSettings);
            }
            if ((this.onSetRelayOutputSettingsCompletedDelegate == null)) {
                this.onSetRelayOutputSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRelayOutputSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSetRelayOutputSettingsDelegate, new object[] {
                        request}, this.onEndSetRelayOutputSettingsDelegate, this.onSetRelayOutputSettingsCompletedDelegate, userState);
        }
        
        public onvif.services.device.SetRelayOutputStateResponse SetRelayOutputState(onvif.services.device.SetRelayOutputStateRequest request) {
            return base.Channel.SetRelayOutputState(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetRelayOutputState(onvif.services.device.SetRelayOutputStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetRelayOutputState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.device.SetRelayOutputStateResponse EndSetRelayOutputState(System.IAsyncResult result) {
            return base.Channel.EndSetRelayOutputState(result);
        }
        
        private System.IAsyncResult OnBeginSetRelayOutputState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.device.SetRelayOutputStateRequest request = ((onvif.services.device.SetRelayOutputStateRequest)(inValues[0]));
            return this.BeginSetRelayOutputState(request, callback, asyncState);
        }
        
        private object[] OnEndSetRelayOutputState(System.IAsyncResult result) {
            onvif.services.device.SetRelayOutputStateResponse retVal = this.EndSetRelayOutputState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetRelayOutputStateCompleted(object state) {
            if ((this.SetRelayOutputStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetRelayOutputStateCompleted(this, new SetRelayOutputStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetRelayOutputStateAsync(onvif.services.device.SetRelayOutputStateRequest request) {
            this.SetRelayOutputStateAsync(request, null);
        }
        
        public void SetRelayOutputStateAsync(onvif.services.device.SetRelayOutputStateRequest request, object userState) {
            if ((this.onBeginSetRelayOutputStateDelegate == null)) {
                this.onBeginSetRelayOutputStateDelegate = new BeginOperationDelegate(this.OnBeginSetRelayOutputState);
            }
            if ((this.onEndSetRelayOutputStateDelegate == null)) {
                this.onEndSetRelayOutputStateDelegate = new EndOperationDelegate(this.OnEndSetRelayOutputState);
            }
            if ((this.onSetRelayOutputStateCompletedDelegate == null)) {
                this.onSetRelayOutputStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetRelayOutputStateCompleted);
            }
            base.InvokeAsync(this.onBeginSetRelayOutputStateDelegate, new object[] {
                        request}, this.onEndSetRelayOutputStateDelegate, this.onSetRelayOutputStateCompletedDelegate, userState);
        }
    }
}
