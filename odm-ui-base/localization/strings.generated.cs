
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using odm.localization;


namespace odm.ui.controls {
	public partial class CommonApplicationStrings: LocalizedStringsBase<CommonApplicationStrings>{
		


		private const string s_On = @"On";
		private string m_On=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='On']/@value")]
		public string On {
			get { 
				if( m_On == null){
					return s_On;
				}
				return m_On; 
			}
			set { 
				if( value != m_On){
					m_On = value;
					NotifyPropertyChanged("On");
				}
			}  
		}
	


		private const string s_Off = @"Off";
		private string m_Off=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='Off']/@value")]
		public string Off {
			get { 
				if( m_Off == null){
					return s_Off;
				}
				return m_Off; 
			}
			set { 
				if( value != m_Off){
					m_Off = value;
					NotifyPropertyChanged("Off");
				}
			}  
		}
	


		private const string s_Yes = @"Yes";
		private string m_Yes=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='Yes']/@value")]
		public string Yes {
			get { 
				if( m_Yes == null){
					return s_Yes;
				}
				return m_Yes; 
			}
			set { 
				if( value != m_Yes){
					m_Yes = value;
					NotifyPropertyChanged("Yes");
				}
			}  
		}
	


		private const string s_No = @"No";
		private string m_No=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='No']/@value")]
		public string No {
			get { 
				if( m_No == null){
					return s_No;
				}
				return m_No; 
			}
			set { 
				if( value != m_No){
					m_No = value;
					NotifyPropertyChanged("No");
				}
			}  
		}
	


		private const string s_streaming = @"Streaming";
		private string m_streaming=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='streaming']/@value")]
		public string streaming {
			get { 
				if( m_streaming == null){
					return s_streaming;
				}
				return m_streaming; 
			}
			set { 
				if( value != m_streaming){
					m_streaming = value;
					NotifyPropertyChanged("streaming");
				}
			}  
		}
	


		private const string s_analytics = @"Analytics";
		private string m_analytics=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analytics']/@value")]
		public string analytics {
			get { 
				if( m_analytics == null){
					return s_analytics;
				}
				return m_analytics; 
			}
			set { 
				if( value != m_analytics){
					m_analytics = value;
					NotifyPropertyChanged("analytics");
				}
			}  
		}
	


		private const string s_loadingData = @"Loading data ...";
		private string m_loadingData=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='loadingData']/@value")]
		public string loadingData {
			get { 
				if( m_loadingData == null){
					return s_loadingData;
				}
				return m_loadingData; 
			}
			set { 
				if( value != m_loadingData){
					m_loadingData = value;
					NotifyPropertyChanged("loadingData");
				}
			}  
		}
	


		private const string s_applicationName = @"ONVIF Device Manager";
		private string m_applicationName=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='applicationName']/@value")]
		public string applicationName {
			get { 
				if( m_applicationName == null){
					return s_applicationName;
				}
				return m_applicationName; 
			}
			set { 
				if( value != m_applicationName){
					m_applicationName = value;
					NotifyPropertyChanged("applicationName");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class DeviceControlStrings: LocalizedStringsBase<DeviceControlStrings>{
		


		private const string s_title = @"Device configuration";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_languageEng = @"English";
		private string m_languageEng=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languageEng']/@value")]
		public string languageEng {
			get { 
				if( m_languageEng == null){
					return s_languageEng;
				}
				return m_languageEng; 
			}
			set { 
				if( value != m_languageEng){
					m_languageEng = value;
					NotifyPropertyChanged("languageEng");
				}
			}  
		}
	


		private const string s_languageRus = @"Русский";
		private string m_languageRus=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languageRus']/@value")]
		public string languageRus {
			get { 
				if( m_languageRus == null){
					return s_languageRus;
				}
				return m_languageRus; 
			}
			set { 
				if( value != m_languageRus){
					m_languageRus = value;
					NotifyPropertyChanged("languageRus");
				}
			}  
		}
	


		private const string s_languagetc = @"繁中";
		private string m_languagetc=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languagetc']/@value")]
		public string languagetc {
			get { 
				if( m_languagetc == null){
					return s_languagetc;
				}
				return m_languagetc; 
			}
			set { 
				if( value != m_languagetc){
					m_languagetc = value;
					NotifyPropertyChanged("languagetc");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class SaveCancelStrings: LocalizedStringsBase<SaveCancelStrings>{
		


		private const string s_save = @"Save";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	


		private const string s_cancel = @"Cancel";
		private string m_cancel=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cancel']/@value")]
		public string cancel {
			get { 
				if( m_cancel == null){
					return s_cancel;
				}
				return m_cancel; 
			}
			set { 
				if( value != m_cancel){
					m_cancel = value;
					NotifyPropertyChanged("cancel");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class LinkButtonsStrings: LocalizedStringsBase<LinkButtonsStrings>{
		


		private const string s_identificationAndStatus = @"Identification";
		private string m_identificationAndStatus=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='identificationAndStatus']/@value")]
		public string identificationAndStatus {
			get { 
				if( m_identificationAndStatus == null){
					return s_identificationAndStatus;
				}
				return m_identificationAndStatus; 
			}
			set { 
				if( value != m_identificationAndStatus){
					m_identificationAndStatus = value;
					NotifyPropertyChanged("identificationAndStatus");
				}
			}  
		}
	


		private const string s_timesettings = @"Time settings";
		private string m_timesettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timesettings']/@value")]
		public string timesettings {
			get { 
				if( m_timesettings == null){
					return s_timesettings;
				}
				return m_timesettings; 
			}
			set { 
				if( value != m_timesettings){
					m_timesettings = value;
					NotifyPropertyChanged("timesettings");
				}
			}  
		}
	


		private const string s_networkSettings = @"Network settings";
		private string m_networkSettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='networkSettings']/@value")]
		public string networkSettings {
			get { 
				if( m_networkSettings == null){
					return s_networkSettings;
				}
				return m_networkSettings; 
			}
			set { 
				if( value != m_networkSettings){
					m_networkSettings = value;
					NotifyPropertyChanged("networkSettings");
				}
			}  
		}
	


		private const string s_digitalIO = @"Digital IO";
		private string m_digitalIO=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='digitalIO']/@value")]
		public string digitalIO {
			get { 
				if( m_digitalIO == null){
					return s_digitalIO;
				}
				return m_digitalIO; 
			}
			set { 
				if( value != m_digitalIO){
					m_digitalIO = value;
					NotifyPropertyChanged("digitalIO");
				}
			}  
		}
	


		private const string s_maintenance = @"Maintenance";
		private string m_maintenance=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='maintenance']/@value")]
		public string maintenance {
			get { 
				if( m_maintenance == null){
					return s_maintenance;
				}
				return m_maintenance; 
			}
			set { 
				if( value != m_maintenance){
					m_maintenance = value;
					NotifyPropertyChanged("maintenance");
				}
			}  
		}
	


		private const string s_systemLog = @"System log";
		private string m_systemLog=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='systemLog']/@value")]
		public string systemLog {
			get { 
				if( m_systemLog == null){
					return s_systemLog;
				}
				return m_systemLog; 
			}
			set { 
				if( value != m_systemLog){
					m_systemLog = value;
					NotifyPropertyChanged("systemLog");
				}
			}  
		}
	


		private const string s_onvifExplorer = @"ONVIF explorer";
		private string m_onvifExplorer=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='onvifExplorer']/@value")]
		public string onvifExplorer {
			get { 
				if( m_onvifExplorer == null){
					return s_onvifExplorer;
				}
				return m_onvifExplorer; 
			}
			set { 
				if( value != m_onvifExplorer){
					m_onvifExplorer = value;
					NotifyPropertyChanged("onvifExplorer");
				}
			}  
		}
	


		private const string s_commonEvents = @"Common events";
		private string m_commonEvents=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='commonEvents']/@value")]
		public string commonEvents {
			get { 
				if( m_commonEvents == null){
					return s_commonEvents;
				}
				return m_commonEvents; 
			}
			set { 
				if( value != m_commonEvents){
					m_commonEvents = value;
					NotifyPropertyChanged("commonEvents");
				}
			}  
		}
	


		private const string s_liveVideo = @"Live video";
		private string m_liveVideo=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='liveVideo']/@value")]
		public string liveVideo {
			get { 
				if( m_liveVideo == null){
					return s_liveVideo;
				}
				return m_liveVideo; 
			}
			set { 
				if( value != m_liveVideo){
					m_liveVideo = value;
					NotifyPropertyChanged("liveVideo");
				}
			}  
		}
	


		private const string s_sensorSettings = @"Sensor settings";
		private string m_sensorSettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensorSettings']/@value")]
		public string sensorSettings {
			get { 
				if( m_sensorSettings == null){
					return s_sensorSettings;
				}
				return m_sensorSettings; 
			}
			set { 
				if( value != m_sensorSettings){
					m_sensorSettings = value;
					NotifyPropertyChanged("sensorSettings");
				}
			}  
		}
	


		private const string s_events = @"Events";
		private string m_events=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='events']/@value")]
		public string events {
			get { 
				if( m_events == null){
					return s_events;
				}
				return m_events; 
			}
			set { 
				if( value != m_events){
					m_events = value;
					NotifyPropertyChanged("events");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_depthCalibration = @"Depth calibration";
		private string m_depthCalibration=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='depthCalibration']/@value")]
		public string depthCalibration {
			get { 
				if( m_depthCalibration == null){
					return s_depthCalibration;
				}
				return m_depthCalibration; 
			}
			set { 
				if( value != m_depthCalibration){
					m_depthCalibration = value;
					NotifyPropertyChanged("depthCalibration");
				}
			}  
		}
	


		private const string s_videoStreaming = @"Video streaming";
		private string m_videoStreaming=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='videoStreaming']/@value")]
		public string videoStreaming {
			get { 
				if( m_videoStreaming == null){
					return s_videoStreaming;
				}
				return m_videoStreaming; 
			}
			set { 
				if( value != m_videoStreaming){
					m_videoStreaming = value;
					NotifyPropertyChanged("videoStreaming");
				}
			}  
		}
	


		private const string s_displayAnnotation = @"Display  annotation";
		private string m_displayAnnotation=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='displayAnnotation']/@value")]
		public string displayAnnotation {
			get { 
				if( m_displayAnnotation == null){
					return s_displayAnnotation;
				}
				return m_displayAnnotation; 
			}
			set { 
				if( value != m_displayAnnotation){
					m_displayAnnotation = value;
					NotifyPropertyChanged("displayAnnotation");
				}
			}  
		}
	


		private const string s_tamperingDetectors = @"Tampering detectors";
		private string m_tamperingDetectors=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='tamperingDetectors']/@value")]
		public string tamperingDetectors {
			get { 
				if( m_tamperingDetectors == null){
					return s_tamperingDetectors;
				}
				return m_tamperingDetectors; 
			}
			set { 
				if( value != m_tamperingDetectors){
					m_tamperingDetectors = value;
					NotifyPropertyChanged("tamperingDetectors");
				}
			}  
		}
	


		private const string s_objectTracker = @"Object tracker";
		private string m_objectTracker=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='objectTracker']/@value")]
		public string objectTracker {
			get { 
				if( m_objectTracker == null){
					return s_objectTracker;
				}
				return m_objectTracker; 
			}
			set { 
				if( value != m_objectTracker){
					m_objectTracker = value;
					NotifyPropertyChanged("objectTracker");
				}
			}  
		}
	


		private const string s_ruleEngine = @"Rule engine";
		private string m_ruleEngine=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleEngine']/@value")]
		public string ruleEngine {
			get { 
				if( m_ruleEngine == null){
					return s_ruleEngine;
				}
				return m_ruleEngine; 
			}
			set { 
				if( value != m_ruleEngine){
					m_ruleEngine = value;
					NotifyPropertyChanged("ruleEngine");
				}
			}  
		}
	


		private const string s_cantishaker = @"Antishaker";
		private string m_cantishaker=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cantishaker']/@value")]
		public string cantishaker {
			get { 
				if( m_cantishaker == null){
					return s_cantishaker;
				}
				return m_cantishaker; 
			}
			set { 
				if( value != m_cantishaker){
					m_cantishaker = value;
					NotifyPropertyChanged("cantishaker");
				}
			}  
		}
	


		private const string s_rotation = @"Rotation";
		private string m_rotation=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotation']/@value")]
		public string rotation {
			get { 
				if( m_rotation == null){
					return s_rotation;
				}
				return m_rotation; 
			}
			set { 
				if( value != m_rotation){
					m_rotation = value;
					NotifyPropertyChanged("rotation");
				}
			}  
		}
	


		private const string s_analogueOutput = @"Analogue output";
		private string m_analogueOutput=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analogueOutput']/@value")]
		public string analogueOutput {
			get { 
				if( m_analogueOutput == null){
					return s_analogueOutput;
				}
				return m_analogueOutput; 
			}
			set { 
				if( value != m_analogueOutput){
					m_analogueOutput = value;
					NotifyPropertyChanged("analogueOutput");
				}
			}  
		}
	


		private const string s_profileEditor = @"Profiles";
		private string m_profileEditor=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='profileEditor']/@value")]
		public string profileEditor {
			get { 
				if( m_profileEditor == null){
					return s_profileEditor;
				}
				return m_profileEditor; 
			}
			set { 
				if( value != m_profileEditor){
					m_profileEditor = value;
					NotifyPropertyChanged("profileEditor");
				}
			}  
		}
	
	}

}
	

namespace odm.controllers {
	public partial class InfoFormStrings: LocalizedStringsBase<InfoFormStrings>{
		


		private const string s_titleSave = @"Saving changes...";
		private string m_titleSave=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='titleSave']/@value")]
		public string titleSave {
			get { 
				if( m_titleSave == null){
					return s_titleSave;
				}
				return m_titleSave; 
			}
			set { 
				if( value != m_titleSave){
					m_titleSave = value;
					NotifyPropertyChanged("titleSave");
				}
			}  
		}
	


		private const string s_titleInfo = @"Information ...";
		private string m_titleInfo=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='titleInfo']/@value")]
		public string titleInfo {
			get { 
				if( m_titleInfo == null){
					return s_titleInfo;
				}
				return m_titleInfo; 
			}
			set { 
				if( value != m_titleInfo){
					m_titleInfo = value;
					NotifyPropertyChanged("titleInfo");
				}
			}  
		}
	


		private const string s_close = @"Close";
		private string m_close=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='close']/@value")]
		public string close {
			get { 
				if( m_close == null){
					return s_close;
				}
				return m_close; 
			}
			set { 
				if( value != m_close){
					m_close = value;
					NotifyPropertyChanged("close");
				}
			}  
		}
	


		private const string s_applyChangesTitle = @"Applying ...";
		private string m_applyChangesTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='applyChangesTitle']/@value")]
		public string applyChangesTitle {
			get { 
				if( m_applyChangesTitle == null){
					return s_applyChangesTitle;
				}
				return m_applyChangesTitle; 
			}
			set { 
				if( value != m_applyChangesTitle){
					m_applyChangesTitle = value;
					NotifyPropertyChanged("applyChangesTitle");
				}
			}  
		}
	


		private const string s_ifoTitle = @"Information ...";
		private string m_ifoTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='ifoTitle']/@value")]
		public string ifoTitle {
			get { 
				if( m_ifoTitle == null){
					return s_ifoTitle;
				}
				return m_ifoTitle; 
			}
			set { 
				if( value != m_ifoTitle){
					m_ifoTitle = value;
					NotifyPropertyChanged("ifoTitle");
				}
			}  
		}
	


		private const string s_errorTitle = @"ERROR ...";
		private string m_errorTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='errorTitle']/@value")]
		public string errorTitle {
			get { 
				if( m_errorTitle == null){
					return s_errorTitle;
				}
				return m_errorTitle; 
			}
			set { 
				if( value != m_errorTitle){
					m_errorTitle = value;
					NotifyPropertyChanged("errorTitle");
				}
			}  
		}
	


		private const string s_applyChanges = @"Please wait until changes will be applied";
		private string m_applyChanges=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='applyChanges']/@value")]
		public string applyChanges {
			get { 
				if( m_applyChanges == null){
					return s_applyChanges;
				}
				return m_applyChanges; 
			}
			set { 
				if( value != m_applyChanges){
					m_applyChanges = value;
					NotifyPropertyChanged("applyChanges");
				}
			}  
		}
	


		private const string s_needToReboot = @"Device need to be rebooted. Please refresh devices list.";
		private string m_needToReboot=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='needToReboot']/@value")]
		public string needToReboot {
			get { 
				if( m_needToReboot == null){
					return s_needToReboot;
				}
				return m_needToReboot; 
			}
			set { 
				if( value != m_needToReboot){
					m_needToReboot = value;
					NotifyPropertyChanged("needToReboot");
				}
			}  
		}
	


		private const string s_firmwareUpdated = @"Firmware update is complete. Please wait for your device to reboot.";
		private string m_firmwareUpdated=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='firmwareUpdated']/@value")]
		public string firmwareUpdated {
			get { 
				if( m_firmwareUpdated == null){
					return s_firmwareUpdated;
				}
				return m_firmwareUpdated; 
			}
			set { 
				if( value != m_firmwareUpdated){
					m_firmwareUpdated = value;
					NotifyPropertyChanged("firmwareUpdated");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class EmptySelectionStrings: LocalizedStringsBase<EmptySelectionStrings>{
		


		private const string s_title = @"No connected devices.";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_text = @"Please check the device is properly connected, or contact support.";
		private string m_text=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='text']/@value")]
		public string text {
			get { 
				if( m_text == null){
					return s_text;
				}
				return m_text; 
			}
			set { 
				if( value != m_text){
					m_text = value;
					NotifyPropertyChanged("text");
				}
			}  
		}
	


		private const string s_textContacts = @"";
		private string m_textContacts=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='textContacts']/@value")]
		public string textContacts {
			get { 
				if( m_textContacts == null){
					return s_textContacts;
				}
				return m_textContacts; 
			}
			set { 
				if( value != m_textContacts){
					m_textContacts = value;
					NotifyPropertyChanged("textContacts");
				}
			}  
		}
	
	}

}
	

namespace odm {
	public partial class ExceptionStrings: LocalizedStringsBase<ExceptionStrings>{
		


		private const string s_sExceptionWSDiscoveryTitle = @"WSDiscovery error";
		private string m_sExceptionWSDiscoveryTitle=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sExceptionWSDiscoveryTitle']/@value")]
		public string sExceptionWSDiscoveryTitle {
			get { 
				if( m_sExceptionWSDiscoveryTitle == null){
					return s_sExceptionWSDiscoveryTitle;
				}
				return m_sExceptionWSDiscoveryTitle; 
			}
			set { 
				if( value != m_sExceptionWSDiscoveryTitle){
					m_sExceptionWSDiscoveryTitle = value;
					NotifyPropertyChanged("sExceptionWSDiscoveryTitle");
				}
			}  
		}
	


		private const string s_sErrorDevInfoNull = @"Error was during device configuration reading. Please refresh devices list";
		private string m_sErrorDevInfoNull=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDevInfoNull']/@value")]
		public string sErrorDevInfoNull {
			get { 
				if( m_sErrorDevInfoNull == null){
					return s_sErrorDevInfoNull;
				}
				return m_sErrorDevInfoNull; 
			}
			set { 
				if( value != m_sErrorDevInfoNull){
					m_sErrorDevInfoNull = value;
					NotifyPropertyChanged("sErrorDevInfoNull");
				}
			}  
		}
	


		private const string s_sErrorDeviceName = @"none";
		private string m_sErrorDeviceName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDeviceName']/@value")]
		public string sErrorDeviceName {
			get { 
				if( m_sErrorDeviceName == null){
					return s_sErrorDeviceName;
				}
				return m_sErrorDeviceName; 
			}
			set { 
				if( value != m_sErrorDeviceName){
					m_sErrorDeviceName = value;
					NotifyPropertyChanged("sErrorDeviceName");
				}
			}  
		}
	


		private const string s_sErrorDeviceFirmware = @"none";
		private string m_sErrorDeviceFirmware=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDeviceFirmware']/@value")]
		public string sErrorDeviceFirmware {
			get { 
				if( m_sErrorDeviceFirmware == null){
					return s_sErrorDeviceFirmware;
				}
				return m_sErrorDeviceFirmware; 
			}
			set { 
				if( value != m_sErrorDeviceFirmware){
					m_sErrorDeviceFirmware = value;
					NotifyPropertyChanged("sErrorDeviceFirmware");
				}
			}  
		}
	


		private const string s_sErrorSaveVideoStreaming = @"Error was during saving video streaming settings. Please refresh device.";
		private string m_sErrorSaveVideoStreaming=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveVideoStreaming']/@value")]
		public string sErrorSaveVideoStreaming {
			get { 
				if( m_sErrorSaveVideoStreaming == null){
					return s_sErrorSaveVideoStreaming;
				}
				return m_sErrorSaveVideoStreaming; 
			}
			set { 
				if( value != m_sErrorSaveVideoStreaming){
					m_sErrorSaveVideoStreaming = value;
					NotifyPropertyChanged("sErrorSaveVideoStreaming");
				}
			}  
		}
	


		private const string s_sErrorSaveNetworkSettings = @"Error was during saving network settings. Please refresh device.";
		private string m_sErrorSaveNetworkSettings=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveNetworkSettings']/@value")]
		public string sErrorSaveNetworkSettings {
			get { 
				if( m_sErrorSaveNetworkSettings == null){
					return s_sErrorSaveNetworkSettings;
				}
				return m_sErrorSaveNetworkSettings; 
			}
			set { 
				if( value != m_sErrorSaveNetworkSettings){
					m_sErrorSaveNetworkSettings = value;
					NotifyPropertyChanged("sErrorSaveNetworkSettings");
				}
			}  
		}
	


		private const string s_sErrorSaveDeviceNameSettings = @"Error was during saving device name. Please refresh device.";
		private string m_sErrorSaveDeviceNameSettings=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveDeviceNameSettings']/@value")]
		public string sErrorSaveDeviceNameSettings {
			get { 
				if( m_sErrorSaveDeviceNameSettings == null){
					return s_sErrorSaveDeviceNameSettings;
				}
				return m_sErrorSaveDeviceNameSettings; 
			}
			set { 
				if( value != m_sErrorSaveDeviceNameSettings){
					m_sErrorSaveDeviceNameSettings = value;
					NotifyPropertyChanged("sErrorSaveDeviceNameSettings");
				}
			}  
		}
	


		private const string s_sErrorVlc = @"Media stream error";
		private string m_sErrorVlc=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlc']/@value")]
		public string sErrorVlc {
			get { 
				if( m_sErrorVlc == null){
					return s_sErrorVlc;
				}
				return m_sErrorVlc; 
			}
			set { 
				if( value != m_sErrorVlc){
					m_sErrorVlc = value;
					NotifyPropertyChanged("sErrorVlc");
				}
			}  
		}
	


		private const string s_sErrorVlcPlayer = @"Cann't play media stream.";
		private string m_sErrorVlcPlayer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcPlayer']/@value")]
		public string sErrorVlcPlayer {
			get { 
				if( m_sErrorVlcPlayer == null){
					return s_sErrorVlcPlayer;
				}
				return m_sErrorVlcPlayer; 
			}
			set { 
				if( value != m_sErrorVlcPlayer){
					m_sErrorVlcPlayer = value;
					NotifyPropertyChanged("sErrorVlcPlayer");
				}
			}  
		}
	


		private const string s_sErrorVlcMediaUriIsEmpty = @"Stream uri is emtpy";
		private string m_sErrorVlcMediaUriIsEmpty=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcMediaUriIsEmpty']/@value")]
		public string sErrorVlcMediaUriIsEmpty {
			get { 
				if( m_sErrorVlcMediaUriIsEmpty == null){
					return s_sErrorVlcMediaUriIsEmpty;
				}
				return m_sErrorVlcMediaUriIsEmpty; 
			}
			set { 
				if( value != m_sErrorVlcMediaUriIsEmpty){
					m_sErrorVlcMediaUriIsEmpty = value;
					NotifyPropertyChanged("sErrorVlcMediaUriIsEmpty");
				}
			}  
		}
	


		private const string s_sErrorVlcMediaUriIsBad = @"Stream uri is unknown";
		private string m_sErrorVlcMediaUriIsBad=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcMediaUriIsBad']/@value")]
		public string sErrorVlcMediaUriIsBad {
			get { 
				if( m_sErrorVlcMediaUriIsBad == null){
					return s_sErrorVlcMediaUriIsBad;
				}
				return m_sErrorVlcMediaUriIsBad; 
			}
			set { 
				if( value != m_sErrorVlcMediaUriIsBad){
					m_sErrorVlcMediaUriIsBad = value;
					NotifyPropertyChanged("sErrorVlcMediaUriIsBad");
				}
			}  
		}
	


		private const string s_errBindName = @"Name value incorrect: ";
		private string m_errBindName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindName']/@value")]
		public string errBindName {
			get { 
				if( m_errBindName == null){
					return s_errBindName;
				}
				return m_errBindName; 
			}
			set { 
				if( value != m_errBindName){
					m_errBindName = value;
					NotifyPropertyChanged("errBindName");
				}
			}  
		}
	


		private const string s_errBindFirmwareVer = @"Firmware value incorrect: ";
		private string m_errBindFirmwareVer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFirmwareVer']/@value")]
		public string errBindFirmwareVer {
			get { 
				if( m_errBindFirmwareVer == null){
					return s_errBindFirmwareVer;
				}
				return m_errBindFirmwareVer; 
			}
			set { 
				if( value != m_errBindFirmwareVer){
					m_errBindFirmwareVer = value;
					NotifyPropertyChanged("errBindFirmwareVer");
				}
			}  
		}
	


		private const string s_errBindDeviceID = @"Device Id value incorrect: ";
		private string m_errBindDeviceID=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindDeviceID']/@value")]
		public string errBindDeviceID {
			get { 
				if( m_errBindDeviceID == null){
					return s_errBindDeviceID;
				}
				return m_errBindDeviceID; 
			}
			set { 
				if( value != m_errBindDeviceID){
					m_errBindDeviceID = value;
					NotifyPropertyChanged("errBindDeviceID");
				}
			}  
		}
	


		private const string s_errBindHardwareVer = @"Hardware Ver. value incorrect: ";
		private string m_errBindHardwareVer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindHardwareVer']/@value")]
		public string errBindHardwareVer {
			get { 
				if( m_errBindHardwareVer == null){
					return s_errBindHardwareVer;
				}
				return m_errBindHardwareVer; 
			}
			set { 
				if( value != m_errBindHardwareVer){
					m_errBindHardwareVer = value;
					NotifyPropertyChanged("errBindHardwareVer");
				}
			}  
		}
	


		private const string s_errBindNetworkIPAddress = @"Network IP Address value incorrect: ";
		private string m_errBindNetworkIPAddress=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindNetworkIPAddress']/@value")]
		public string errBindNetworkIPAddress {
			get { 
				if( m_errBindNetworkIPAddress == null){
					return s_errBindNetworkIPAddress;
				}
				return m_errBindNetworkIPAddress; 
			}
			set { 
				if( value != m_errBindNetworkIPAddress){
					m_errBindNetworkIPAddress = value;
					NotifyPropertyChanged("errBindNetworkIPAddress");
				}
			}  
		}
	


		private const string s_errBindMACAddress = @"MAC Address value incorrect: ";
		private string m_errBindMACAddress=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMACAddress']/@value")]
		public string errBindMACAddress {
			get { 
				if( m_errBindMACAddress == null){
					return s_errBindMACAddress;
				}
				return m_errBindMACAddress; 
			}
			set { 
				if( value != m_errBindMACAddress){
					m_errBindMACAddress = value;
					NotifyPropertyChanged("errBindMACAddress");
				}
			}  
		}
	


		private const string s_errBinddateTime = @"DateTime value incorrect: ";
		private string m_errBinddateTime=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBinddateTime']/@value")]
		public string errBinddateTime {
			get { 
				if( m_errBinddateTime == null){
					return s_errBinddateTime;
				}
				return m_errBinddateTime; 
			}
			set { 
				if( value != m_errBinddateTime){
					m_errBinddateTime = value;
					NotifyPropertyChanged("errBinddateTime");
				}
			}  
		}
	


		private const string s_errBind2 = @"value incorrect: ";
		private string m_errBind2=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind2']/@value")]
		public string errBind2 {
			get { 
				if( m_errBind2 == null){
					return s_errBind2;
				}
				return m_errBind2; 
			}
			set { 
				if( value != m_errBind2){
					m_errBind2 = value;
					NotifyPropertyChanged("errBind2");
				}
			}  
		}
	


		private const string s_errBindNetworkSetMac = @"Mac address value incorrect: ";
		private string m_errBindNetworkSetMac=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindNetworkSetMac']/@value")]
		public string errBindNetworkSetMac {
			get { 
				if( m_errBindNetworkSetMac == null){
					return s_errBindNetworkSetMac;
				}
				return m_errBindNetworkSetMac; 
			}
			set { 
				if( value != m_errBindNetworkSetMac){
					m_errBindNetworkSetMac = value;
					NotifyPropertyChanged("errBindNetworkSetMac");
				}
			}  
		}
	


		private const string s_errBindStaticDns = @"Static dns value incorrect: ";
		private string m_errBindStaticDns=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticDns']/@value")]
		public string errBindStaticDns {
			get { 
				if( m_errBindStaticDns == null){
					return s_errBindStaticDns;
				}
				return m_errBindStaticDns; 
			}
			set { 
				if( value != m_errBindStaticDns){
					m_errBindStaticDns = value;
					NotifyPropertyChanged("errBindStaticDns");
				}
			}  
		}
	


		private const string s_errBindStaticGateway = @"Static gateway value incorrect: ";
		private string m_errBindStaticGateway=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticGateway']/@value")]
		public string errBindStaticGateway {
			get { 
				if( m_errBindStaticGateway == null){
					return s_errBindStaticGateway;
				}
				return m_errBindStaticGateway; 
			}
			set { 
				if( value != m_errBindStaticGateway){
					m_errBindStaticGateway = value;
					NotifyPropertyChanged("errBindStaticGateway");
				}
			}  
		}
	


		private const string s_errBindSubnetMask = @"Subnet mask value incorrect: ";
		private string m_errBindSubnetMask=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSubnetMask']/@value")]
		public string errBindSubnetMask {
			get { 
				if( m_errBindSubnetMask == null){
					return s_errBindSubnetMask;
				}
				return m_errBindSubnetMask; 
			}
			set { 
				if( value != m_errBindSubnetMask){
					m_errBindSubnetMask = value;
					NotifyPropertyChanged("errBindSubnetMask");
				}
			}  
		}
	


		private const string s_errBindStaticIp = @"Static ip value incorrect: ";
		private string m_errBindStaticIp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticIp']/@value")]
		public string errBindStaticIp {
			get { 
				if( m_errBindStaticIp == null){
					return s_errBindStaticIp;
				}
				return m_errBindStaticIp; 
			}
			set { 
				if( value != m_errBindStaticIp){
					m_errBindStaticIp = value;
					NotifyPropertyChanged("errBindStaticIp");
				}
			}  
		}
	


		private const string s_errBindDhcp = @"Dhcp value incorrect: ";
		private string m_errBindDhcp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindDhcp']/@value")]
		public string errBindDhcp {
			get { 
				if( m_errBindDhcp == null){
					return s_errBindDhcp;
				}
				return m_errBindDhcp; 
			}
			set { 
				if( value != m_errBindDhcp){
					m_errBindDhcp = value;
					NotifyPropertyChanged("errBindDhcp");
				}
			}  
		}
	


		private const string s_errBind4 = @"value incorrect: ";
		private string m_errBind4=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind4']/@value")]
		public string errBind4 {
			get { 
				if( m_errBind4 == null){
					return s_errBind4;
				}
				return m_errBind4; 
			}
			set { 
				if( value != m_errBind4){
					m_errBind4 = value;
					NotifyPropertyChanged("errBind4");
				}
			}  
		}
	


		private const string s_errBindCurrentFirmwareVersion = @"Current firmware version value incorrect: ";
		private string m_errBindCurrentFirmwareVersion=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindCurrentFirmwareVersion']/@value")]
		public string errBindCurrentFirmwareVersion {
			get { 
				if( m_errBindCurrentFirmwareVersion == null){
					return s_errBindCurrentFirmwareVersion;
				}
				return m_errBindCurrentFirmwareVersion; 
			}
			set { 
				if( value != m_errBindCurrentFirmwareVersion){
					m_errBindCurrentFirmwareVersion = value;
					NotifyPropertyChanged("errBindCurrentFirmwareVersion");
				}
			}  
		}
	


		private const string s_errBindFirmwareUpgradeSupported = @"Upgrade suported value Null";
		private string m_errBindFirmwareUpgradeSupported=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFirmwareUpgradeSupported']/@value")]
		public string errBindFirmwareUpgradeSupported {
			get { 
				if( m_errBindFirmwareUpgradeSupported == null){
					return s_errBindFirmwareUpgradeSupported;
				}
				return m_errBindFirmwareUpgradeSupported; 
			}
			set { 
				if( value != m_errBindFirmwareUpgradeSupported){
					m_errBindFirmwareUpgradeSupported = value;
					NotifyPropertyChanged("errBindFirmwareUpgradeSupported");
				}
			}  
		}
	


		private const string s_errBind6 = @"value incorrect: ";
		private string m_errBind6=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind6']/@value")]
		public string errBind6 {
			get { 
				if( m_errBind6 == null){
					return s_errBind6;
				}
				return m_errBind6; 
			}
			set { 
				if( value != m_errBind6){
					m_errBind6 = value;
					NotifyPropertyChanged("errBind6");
				}
			}  
		}
	


		private const string s_errBindEventSnapShot = @"Snap shot incorrect";
		private string m_errBindEventSnapShot=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindEventSnapShot']/@value")]
		public string errBindEventSnapShot {
			get { 
				if( m_errBindEventSnapShot == null){
					return s_errBindEventSnapShot;
				}
				return m_errBindEventSnapShot; 
			}
			set { 
				if( value != m_errBindEventSnapShot){
					m_errBindEventSnapShot = value;
					NotifyPropertyChanged("errBindEventSnapShot");
				}
			}  
		}
	


		private const string s_errBindFocalLength = @"Focal length value incorrect: ";
		private string m_errBindFocalLength=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFocalLength']/@value")]
		public string errBindFocalLength {
			get { 
				if( m_errBindFocalLength == null){
					return s_errBindFocalLength;
				}
				return m_errBindFocalLength; 
			}
			set { 
				if( value != m_errBindFocalLength){
					m_errBindFocalLength = value;
					NotifyPropertyChanged("errBindFocalLength");
				}
			}  
		}
	


		private const string s_errBindSensorPixelSize = @"Sensor pixel size value incorrect: ";
		private string m_errBindSensorPixelSize=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSensorPixelSize']/@value")]
		public string errBindSensorPixelSize {
			get { 
				if( m_errBindSensorPixelSize == null){
					return s_errBindSensorPixelSize;
				}
				return m_errBindSensorPixelSize; 
			}
			set { 
				if( value != m_errBindSensorPixelSize){
					m_errBindSensorPixelSize = value;
					NotifyPropertyChanged("errBindSensorPixelSize");
				}
			}  
		}
	


		private const string s_errBindMatrixFormat = @"Matrix format value incorrect: ";
		private string m_errBindMatrixFormat=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMatrixFormat']/@value")]
		public string errBindMatrixFormat {
			get { 
				if( m_errBindMatrixFormat == null){
					return s_errBindMatrixFormat;
				}
				return m_errBindMatrixFormat; 
			}
			set { 
				if( value != m_errBindMatrixFormat){
					m_errBindMatrixFormat = value;
					NotifyPropertyChanged("errBindMatrixFormat");
				}
			}  
		}
	


		private const string s_errBindVStrBitrateMinMax = @"Bitrate minimun/maximun value incorrect";
		private string m_errBindVStrBitrateMinMax=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrBitrateMinMax']/@value")]
		public string errBindVStrBitrateMinMax {
			get { 
				if( m_errBindVStrBitrateMinMax == null){
					return s_errBindVStrBitrateMinMax;
				}
				return m_errBindVStrBitrateMinMax; 
			}
			set { 
				if( value != m_errBindVStrBitrateMinMax){
					m_errBindVStrBitrateMinMax = value;
					NotifyPropertyChanged("errBindVStrBitrateMinMax");
				}
			}  
		}
	


		private const string s_errBindVStrBitrate = @"Bitrate value incorrect: ";
		private string m_errBindVStrBitrate=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrBitrate']/@value")]
		public string errBindVStrBitrate {
			get { 
				if( m_errBindVStrBitrate == null){
					return s_errBindVStrBitrate;
				}
				return m_errBindVStrBitrate; 
			}
			set { 
				if( value != m_errBindVStrBitrate){
					m_errBindVStrBitrate = value;
					NotifyPropertyChanged("errBindVStrBitrate");
				}
			}  
		}
	


		private const string s_errBindVStrCurrentEncoder = @"Encoder value incorrect: ";
		private string m_errBindVStrCurrentEncoder=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrCurrentEncoder']/@value")]
		public string errBindVStrCurrentEncoder {
			get { 
				if( m_errBindVStrCurrentEncoder == null){
					return s_errBindVStrCurrentEncoder;
				}
				return m_errBindVStrCurrentEncoder; 
			}
			set { 
				if( value != m_errBindVStrCurrentEncoder){
					m_errBindVStrCurrentEncoder = value;
					NotifyPropertyChanged("errBindVStrCurrentEncoder");
				}
			}  
		}
	


		private const string s_errBindVStrcurrentResolution = @"Resolution value incorrect: ";
		private string m_errBindVStrcurrentResolution=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrcurrentResolution']/@value")]
		public string errBindVStrcurrentResolution {
			get { 
				if( m_errBindVStrcurrentResolution == null){
					return s_errBindVStrcurrentResolution;
				}
				return m_errBindVStrcurrentResolution; 
			}
			set { 
				if( value != m_errBindVStrcurrentResolution){
					m_errBindVStrcurrentResolution = value;
					NotifyPropertyChanged("errBindVStrcurrentResolution");
				}
			}  
		}
	


		private const string s_errBindVStrMetadata = @"Metadata value incorrect: ";
		private string m_errBindVStrMetadata=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrMetadata']/@value")]
		public string errBindVStrMetadata {
			get { 
				if( m_errBindVStrMetadata == null){
					return s_errBindVStrMetadata;
				}
				return m_errBindVStrMetadata; 
			}
			set { 
				if( value != m_errBindVStrMetadata){
					m_errBindVStrMetadata = value;
					NotifyPropertyChanged("errBindVStrMetadata");
				}
			}  
		}
	


		private const string s_errBindVStrChannelName = @"Channel name value incorrect: ";
		private string m_errBindVStrChannelName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrChannelName']/@value")]
		public string errBindVStrChannelName {
			get { 
				if( m_errBindVStrChannelName == null){
					return s_errBindVStrChannelName;
				}
				return m_errBindVStrChannelName; 
			}
			set { 
				if( value != m_errBindVStrChannelName){
					m_errBindVStrChannelName = value;
					NotifyPropertyChanged("errBindVStrChannelName");
				}
			}  
		}
	


		private const string s_errBindVStrFrameRate = @"Frame rate value incorrect: ";
		private string m_errBindVStrFrameRate=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrFrameRate']/@value")]
		public string errBindVStrFrameRate {
			get { 
				if( m_errBindVStrFrameRate == null){
					return s_errBindVStrFrameRate;
				}
				return m_errBindVStrFrameRate; 
			}
			set { 
				if( value != m_errBindVStrFrameRate){
					m_errBindVStrFrameRate = value;
					NotifyPropertyChanged("errBindVStrFrameRate");
				}
			}  
		}
	


		private const string s_errBindVStrFrameRateMinMax = @"Frame rate min/max value incorrect";
		private string m_errBindVStrFrameRateMinMax=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrFrameRateMinMax']/@value")]
		public string errBindVStrFrameRateMinMax {
			get { 
				if( m_errBindVStrFrameRateMinMax == null){
					return s_errBindVStrFrameRateMinMax;
				}
				return m_errBindVStrFrameRateMinMax; 
			}
			set { 
				if( value != m_errBindVStrFrameRateMinMax){
					m_errBindVStrFrameRateMinMax = value;
					NotifyPropertyChanged("errBindVStrFrameRateMinMax");
				}
			}  
		}
	


		private const string s_errBindMovingRects = @"Moving rects value incorrect: ";
		private string m_errBindMovingRects=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMovingRects']/@value")]
		public string errBindMovingRects {
			get { 
				if( m_errBindMovingRects == null){
					return s_errBindMovingRects;
				}
				return m_errBindMovingRects; 
			}
			set { 
				if( value != m_errBindMovingRects){
					m_errBindMovingRects = value;
					NotifyPropertyChanged("errBindMovingRects");
				}
			}  
		}
	


		private const string s_errBindTimeStamp = @"Time stamp value incorrect: ";
		private string m_errBindTimeStamp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindTimeStamp']/@value")]
		public string errBindTimeStamp {
			get { 
				if( m_errBindTimeStamp == null){
					return s_errBindTimeStamp;
				}
				return m_errBindTimeStamp; 
			}
			set { 
				if( value != m_errBindTimeStamp){
					m_errBindTimeStamp = value;
					NotifyPropertyChanged("errBindTimeStamp");
				}
			}  
		}
	


		private const string s_errBindTracking = @"Tracking value incorrect: ";
		private string m_errBindTracking=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindTracking']/@value")]
		public string errBindTracking {
			get { 
				if( m_errBindTracking == null){
					return s_errBindTracking;
				}
				return m_errBindTracking; 
			}
			set { 
				if( value != m_errBindTracking){
					m_errBindTracking = value;
					NotifyPropertyChanged("errBindTracking");
				}
			}  
		}
	


		private const string s_errBindSpeed = @"Speed value incorrect: ";
		private string m_errBindSpeed=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSpeed']/@value")]
		public string errBindSpeed {
			get { 
				if( m_errBindSpeed == null){
					return s_errBindSpeed;
				}
				return m_errBindSpeed; 
			}
			set { 
				if( value != m_errBindSpeed){
					m_errBindSpeed = value;
					NotifyPropertyChanged("errBindSpeed");
				}
			}  
		}
	


		private const string s_errBindUserRegion = @"User region value incorrect: ";
		private string m_errBindUserRegion=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindUserRegion']/@value")]
		public string errBindUserRegion {
			get { 
				if( m_errBindUserRegion == null){
					return s_errBindUserRegion;
				}
				return m_errBindUserRegion; 
			}
			set { 
				if( value != m_errBindUserRegion){
					m_errBindUserRegion = value;
					NotifyPropertyChanged("errBindUserRegion");
				}
			}  
		}
	


		private const string s_errBindChannelName = @"Channel name value incorrect: ";
		private string m_errBindChannelName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindChannelName']/@value")]
		public string errBindChannelName {
			get { 
				if( m_errBindChannelName == null){
					return s_errBindChannelName;
				}
				return m_errBindChannelName; 
			}
			set { 
				if( value != m_errBindChannelName){
					m_errBindChannelName = value;
					NotifyPropertyChanged("errBindChannelName");
				}
			}  
		}
	


		private const string s_errBind11 = @"value incorrect: ";
		private string m_errBind11=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind11']/@value")]
		public string errBind11 {
			get { 
				if( m_errBind11 == null){
					return s_errBind11;
				}
				return m_errBind11; 
			}
			set { 
				if( value != m_errBind11){
					m_errBind11 = value;
					NotifyPropertyChanged("errBind11");
				}
			}  
		}
	


		private const string s_errBindContrastSensitivity = @"Contrast sensitivity value incorrect: ";
		private string m_errBindContrastSensitivity=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindContrastSensitivity']/@value")]
		public string errBindContrastSensitivity {
			get { 
				if( m_errBindContrastSensitivity == null){
					return s_errBindContrastSensitivity;
				}
				return m_errBindContrastSensitivity; 
			}
			set { 
				if( value != m_errBindContrastSensitivity){
					m_errBindContrastSensitivity = value;
					NotifyPropertyChanged("errBindContrastSensitivity");
				}
			}  
		}
	


		private const string s_errBindMinMaxObjectArea = @"Min object area Greater than Max object ares";
		private string m_errBindMinMaxObjectArea=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMinMaxObjectArea']/@value")]
		public string errBindMinMaxObjectArea {
			get { 
				if( m_errBindMinMaxObjectArea == null){
					return s_errBindMinMaxObjectArea;
				}
				return m_errBindMinMaxObjectArea; 
			}
			set { 
				if( value != m_errBindMinMaxObjectArea){
					m_errBindMinMaxObjectArea = value;
					NotifyPropertyChanged("errBindMinMaxObjectArea");
				}
			}  
		}
	


		private const string s_errBindObjectArea = @"Object area value incorrect";
		private string m_errBindObjectArea=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindObjectArea']/@value")]
		public string errBindObjectArea {
			get { 
				if( m_errBindObjectArea == null){
					return s_errBindObjectArea;
				}
				return m_errBindObjectArea; 
			}
			set { 
				if( value != m_errBindObjectArea){
					m_errBindObjectArea = value;
					NotifyPropertyChanged("errBindObjectArea");
				}
			}  
		}
	


		private const string s_errBindMaxObjectSpeed = @"Max object speed value incorrect: ";
		private string m_errBindMaxObjectSpeed=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMaxObjectSpeed']/@value")]
		public string errBindMaxObjectSpeed {
			get { 
				if( m_errBindMaxObjectSpeed == null){
					return s_errBindMaxObjectSpeed;
				}
				return m_errBindMaxObjectSpeed; 
			}
			set { 
				if( value != m_errBindMaxObjectSpeed){
					m_errBindMaxObjectSpeed = value;
					NotifyPropertyChanged("errBindMaxObjectSpeed");
				}
			}  
		}
	


		private const string s_errBindStabilizationTime = @"Stabilization time value incorrect: ";
		private string m_errBindStabilizationTime=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStabilizationTime']/@value")]
		public string errBindStabilizationTime {
			get { 
				if( m_errBindStabilizationTime == null){
					return s_errBindStabilizationTime;
				}
				return m_errBindStabilizationTime; 
			}
			set { 
				if( value != m_errBindStabilizationTime){
					m_errBindStabilizationTime = value;
					NotifyPropertyChanged("errBindStabilizationTime");
				}
			}  
		}
	


		private const string s_errBind13 = @"value incorrect: ";
		private string m_errBind13=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind13']/@value")]
		public string errBind13 {
			get { 
				if( m_errBind13 == null){
					return s_errBind13;
				}
				return m_errBind13; 
			}
			set { 
				if( value != m_errBind13){
					m_errBind13 = value;
					NotifyPropertyChanged("errBind13");
				}
			}  
		}
	


		private const string s_errBind14 = @"value incorrect: ";
		private string m_errBind14=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind14']/@value")]
		public string errBind14 {
			get { 
				if( m_errBind14 == null){
					return s_errBind14;
				}
				return m_errBind14; 
			}
			set { 
				if( value != m_errBind14){
					m_errBind14 = value;
					NotifyPropertyChanged("errBind14");
				}
			}  
		}
	


		private const string s_errBind15 = @"value incorrect: ";
		private string m_errBind15=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind15']/@value")]
		public string errBind15 {
			get { 
				if( m_errBind15 == null){
					return s_errBind15;
				}
				return m_errBind15; 
			}
			set { 
				if( value != m_errBind15){
					m_errBind15 = value;
					NotifyPropertyChanged("errBind15");
				}
			}  
		}
	


		private const string s_errBind16 = @"value incorrect: ";
		private string m_errBind16=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind16']/@value")]
		public string errBind16 {
			get { 
				if( m_errBind16 == null){
					return s_errBind16;
				}
				return m_errBind16; 
			}
			set { 
				if( value != m_errBind16){
					m_errBind16 = value;
					NotifyPropertyChanged("errBind16");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class DevicesListControlStrings: LocalizedStringsBase<DevicesListControlStrings>{
		


		private const string s_title = @"Network";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='DevicesListControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_refresh = @"Refresh";
		private string m_refresh=null;
		[XPath(@"/localized-strings/module[@name='DevicesListControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='refresh']/@value")]
		public string refresh {
			get { 
				if( m_refresh == null){
					return s_refresh;
				}
				return m_refresh; 
			}
			set { 
				if( value != m_refresh){
					m_refresh = value;
					NotifyPropertyChanged("refresh");
				}
			}  
		}
	


		private const string s_columnName = @"Name";
		private string m_columnName=null;
		[XPath(@"/localized-strings/module[@name='DevicesListControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='columnName']/@value")]
		public string columnName {
			get { 
				if( m_columnName == null){
					return s_columnName;
				}
				return m_columnName; 
			}
			set { 
				if( value != m_columnName){
					m_columnName = value;
					NotifyPropertyChanged("columnName");
				}
			}  
		}
	


		private const string s_columnIPadress = @"IP Adress";
		private string m_columnIPadress=null;
		[XPath(@"/localized-strings/module[@name='DevicesListControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='columnIPadress']/@value")]
		public string columnIPadress {
			get { 
				if( m_columnIPadress == null){
					return s_columnIPadress;
				}
				return m_columnIPadress; 
			}
			set { 
				if( value != m_columnIPadress){
					m_columnIPadress = value;
					NotifyPropertyChanged("columnIPadress");
				}
			}  
		}
	


		private const string s_columnType = @"Firmware";
		private string m_columnType=null;
		[XPath(@"/localized-strings/module[@name='DevicesListControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='columnType']/@value")]
		public string columnType {
			get { 
				if( m_columnType == null){
					return s_columnType;
				}
				return m_columnType; 
			}
			set { 
				if( value != m_columnType){
					m_columnType = value;
					NotifyPropertyChanged("columnType");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyOnvifExplorerStrings: LocalizedStringsBase<PropertyOnvifExplorerStrings>{
		


		private const string s_title = @"Onvif explorer";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyOnvifExplorerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_save = @"Save";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='PropertyOnvifExplorerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyIdentificationStrings: LocalizedStringsBase<PropertyIdentificationStrings>{
		


		private const string s_title = @"Identification";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_name = @"Name";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_location = @"Location";
		private string m_location=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='location']/@value")]
		public string location {
			get { 
				if( m_location == null){
					return s_location;
				}
				return m_location; 
			}
			set { 
				if( value != m_location){
					m_location = value;
					NotifyPropertyChanged("location");
				}
			}  
		}
	


		private const string s_curTime = @"Current time";
		private string m_curTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='curTime']/@value")]
		public string curTime {
			get { 
				if( m_curTime == null){
					return s_curTime;
				}
				return m_curTime; 
			}
			set { 
				if( value != m_curTime){
					m_curTime = value;
					NotifyPropertyChanged("curTime");
				}
			}  
		}
	


		private const string s_deviceID = @"Device ID";
		private string m_deviceID=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='deviceID']/@value")]
		public string deviceID {
			get { 
				if( m_deviceID == null){
					return s_deviceID;
				}
				return m_deviceID; 
			}
			set { 
				if( value != m_deviceID){
					m_deviceID = value;
					NotifyPropertyChanged("deviceID");
				}
			}  
		}
	


		private const string s_firmware = @"Firmware";
		private string m_firmware=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='firmware']/@value")]
		public string firmware {
			get { 
				if( m_firmware == null){
					return s_firmware;
				}
				return m_firmware; 
			}
			set { 
				if( value != m_firmware){
					m_firmware = value;
					NotifyPropertyChanged("firmware");
				}
			}  
		}
	


		private const string s_hardware = @"Hardware";
		private string m_hardware=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='hardware']/@value")]
		public string hardware {
			get { 
				if( m_hardware == null){
					return s_hardware;
				}
				return m_hardware; 
			}
			set { 
				if( value != m_hardware){
					m_hardware = value;
					NotifyPropertyChanged("hardware");
				}
			}  
		}
	


		private const string s_version = @"Version";
		private string m_version=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='version']/@value")]
		public string version {
			get { 
				if( m_version == null){
					return s_version;
				}
				return m_version; 
			}
			set { 
				if( value != m_version){
					m_version = value;
					NotifyPropertyChanged("version");
				}
			}  
		}
	


		private const string s_ipAddress = @"IP address";
		private string m_ipAddress=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ipAddress']/@value")]
		public string ipAddress {
			get { 
				if( m_ipAddress == null){
					return s_ipAddress;
				}
				return m_ipAddress; 
			}
			set { 
				if( value != m_ipAddress){
					m_ipAddress = value;
					NotifyPropertyChanged("ipAddress");
				}
			}  
		}
	


		private const string s_macAddress = @"MAC address";
		private string m_macAddress=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='macAddress']/@value")]
		public string macAddress {
			get { 
				if( m_macAddress == null){
					return s_macAddress;
				}
				return m_macAddress; 
			}
			set { 
				if( value != m_macAddress){
					m_macAddress = value;
					NotifyPropertyChanged("macAddress");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyTimeZoneStrings: LocalizedStringsBase<PropertyTimeZoneStrings>{
		


		private const string s_title = @"Time settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_currentTime = @"Current time";
		private string m_currentTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='currentTime']/@value")]
		public string currentTime {
			get { 
				if( m_currentTime == null){
					return s_currentTime;
				}
				return m_currentTime; 
			}
			set { 
				if( value != m_currentTime){
					m_currentTime = value;
					NotifyPropertyChanged("currentTime");
				}
			}  
		}
	


		private const string s_newTime = @"New time";
		private string m_newTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='newTime']/@value")]
		public string newTime {
			get { 
				if( m_newTime == null){
					return s_newTime;
				}
				return m_newTime; 
			}
			set { 
				if( value != m_newTime){
					m_newTime = value;
					NotifyPropertyChanged("newTime");
				}
			}  
		}
	


		private const string s_timeZone = @"Time zone:";
		private string m_timeZone=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timeZone']/@value")]
		public string timeZone {
			get { 
				if( m_timeZone == null){
					return s_timeZone;
				}
				return m_timeZone; 
			}
			set { 
				if( value != m_timeZone){
					m_timeZone = value;
					NotifyPropertyChanged("timeZone");
				}
			}  
		}
	


		private const string s_autoAdjustString = @"Autometically adjust for daylight saving time changes.";
		private string m_autoAdjustString=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='autoAdjustString']/@value")]
		public string autoAdjustString {
			get { 
				if( m_autoAdjustString == null){
					return s_autoAdjustString;
				}
				return m_autoAdjustString; 
			}
			set { 
				if( value != m_autoAdjustString){
					m_autoAdjustString = value;
					NotifyPropertyChanged("autoAdjustString");
				}
			}  
		}
	


		private const string s_sinchronizeWithComp = @"Synchronize with computer time";
		private string m_sinchronizeWithComp=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sinchronizeWithComp']/@value")]
		public string sinchronizeWithComp {
			get { 
				if( m_sinchronizeWithComp == null){
					return s_sinchronizeWithComp;
				}
				return m_sinchronizeWithComp; 
			}
			set { 
				if( value != m_sinchronizeWithComp){
					m_sinchronizeWithComp = value;
					NotifyPropertyChanged("sinchronizeWithComp");
				}
			}  
		}
	


		private const string s_date = @"Date:";
		private string m_date=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='date']/@value")]
		public string date {
			get { 
				if( m_date == null){
					return s_date;
				}
				return m_date; 
			}
			set { 
				if( value != m_date){
					m_date = value;
					NotifyPropertyChanged("date");
				}
			}  
		}
	


		private const string s_time = @"Time:";
		private string m_time=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='time']/@value")]
		public string time {
			get { 
				if( m_time == null){
					return s_time;
				}
				return m_time; 
			}
			set { 
				if( value != m_time){
					m_time = value;
					NotifyPropertyChanged("time");
				}
			}  
		}
	


		private const string s_sinchronizeWithNTP = @"Synchronize with NTP server";
		private string m_sinchronizeWithNTP=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sinchronizeWithNTP']/@value")]
		public string sinchronizeWithNTP {
			get { 
				if( m_sinchronizeWithNTP == null){
					return s_sinchronizeWithNTP;
				}
				return m_sinchronizeWithNTP; 
			}
			set { 
				if( value != m_sinchronizeWithNTP){
					m_sinchronizeWithNTP = value;
					NotifyPropertyChanged("sinchronizeWithNTP");
				}
			}  
		}
	


		private const string s_NTPserver = @"NTP server:";
		private string m_NTPserver=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='NTPserver']/@value")]
		public string NTPserver {
			get { 
				if( m_NTPserver == null){
					return s_NTPserver;
				}
				return m_NTPserver; 
			}
			set { 
				if( value != m_NTPserver){
					m_NTPserver = value;
					NotifyPropertyChanged("NTPserver");
				}
			}  
		}
	


		private const string s_manually = @"Set manually:";
		private string m_manually=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='manually']/@value")]
		public string manually {
			get { 
				if( m_manually == null){
					return s_manually;
				}
				return m_manually; 
			}
			set { 
				if( value != m_manually){
					m_manually = value;
					NotifyPropertyChanged("manually");
				}
			}  
		}
	


		private const string s_timeMode = @"Time mode:";
		private string m_timeMode=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timeMode']/@value")]
		public string timeMode {
			get { 
				if( m_timeMode == null){
					return s_timeMode;
				}
				return m_timeMode; 
			}
			set { 
				if( value != m_timeMode){
					m_timeMode = value;
					NotifyPropertyChanged("timeMode");
				}
			}  
		}
	


		private const string s_ntpServerSetupTitle = @"NTP server setup";
		private string m_ntpServerSetupTitle=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpServerSetupTitle']/@value")]
		public string ntpServerSetupTitle {
			get { 
				if( m_ntpServerSetupTitle == null){
					return s_ntpServerSetupTitle;
				}
				return m_ntpServerSetupTitle; 
			}
			set { 
				if( value != m_ntpServerSetupTitle){
					m_ntpServerSetupTitle = value;
					NotifyPropertyChanged("ntpServerSetupTitle");
				}
			}  
		}
	


		private const string s_ntpServerSetupSet = @"Set";
		private string m_ntpServerSetupSet=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpServerSetupSet']/@value")]
		public string ntpServerSetupSet {
			get { 
				if( m_ntpServerSetupSet == null){
					return s_ntpServerSetupSet;
				}
				return m_ntpServerSetupSet; 
			}
			set { 
				if( value != m_ntpServerSetupSet){
					m_ntpServerSetupSet = value;
					NotifyPropertyChanged("ntpServerSetupSet");
				}
			}  
		}
	


		private const string s_warning = @"Warning: the time zone of the device is not the same as the time zone of the PC";
		private string m_warning=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='warning']/@value")]
		public string warning {
			get { 
				if( m_warning == null){
					return s_warning;
				}
				return m_warning; 
			}
			set { 
				if( value != m_warning){
					m_warning = value;
					NotifyPropertyChanged("warning");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyNetworkSettingsStrings: LocalizedStringsBase<PropertyNetworkSettingsStrings>{
		


		private const string s_title = @"Network settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_dhcp = @"DHCP";
		private string m_dhcp=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dhcp']/@value")]
		public string dhcp {
			get { 
				if( m_dhcp == null){
					return s_dhcp;
				}
				return m_dhcp; 
			}
			set { 
				if( value != m_dhcp){
					m_dhcp = value;
					NotifyPropertyChanged("dhcp");
				}
			}  
		}
	


		private const string s_ipAddr = @"Device IP address ";
		private string m_ipAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ipAddr']/@value")]
		public string ipAddr {
			get { 
				if( m_ipAddr == null){
					return s_ipAddr;
				}
				return m_ipAddr; 
			}
			set { 
				if( value != m_ipAddr){
					m_ipAddr = value;
					NotifyPropertyChanged("ipAddr");
				}
			}  
		}
	


		private const string s_subnetMask = @"Subnet mask";
		private string m_subnetMask=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='subnetMask']/@value")]
		public string subnetMask {
			get { 
				if( m_subnetMask == null){
					return s_subnetMask;
				}
				return m_subnetMask; 
			}
			set { 
				if( value != m_subnetMask){
					m_subnetMask = value;
					NotifyPropertyChanged("subnetMask");
				}
			}  
		}
	


		private const string s_gateAddr = @"Gateway address";
		private string m_gateAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='gateAddr']/@value")]
		public string gateAddr {
			get { 
				if( m_gateAddr == null){
					return s_gateAddr;
				}
				return m_gateAddr; 
			}
			set { 
				if( value != m_gateAddr){
					m_gateAddr = value;
					NotifyPropertyChanged("gateAddr");
				}
			}  
		}
	


		private const string s_dnsAddr = @"DNS address";
		private string m_dnsAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dnsAddr']/@value")]
		public string dnsAddr {
			get { 
				if( m_dnsAddr == null){
					return s_dnsAddr;
				}
				return m_dnsAddr; 
			}
			set { 
				if( value != m_dnsAddr){
					m_dnsAddr = value;
					NotifyPropertyChanged("dnsAddr");
				}
			}  
		}
	


		private const string s_macAddr = @"MAC address";
		private string m_macAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='macAddr']/@value")]
		public string macAddr {
			get { 
				if( m_macAddr == null){
					return s_macAddr;
				}
				return m_macAddr; 
			}
			set { 
				if( value != m_macAddr){
					m_macAddr = value;
					NotifyPropertyChanged("macAddr");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyDigitalIOStrings: LocalizedStringsBase<PropertyDigitalIOStrings>{
		


		private const string s_title = @"Digital IO";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_inputName = @"Name";
		private string m_inputName=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='inputName']/@value")]
		public string inputName {
			get { 
				if( m_inputName == null){
					return s_inputName;
				}
				return m_inputName; 
			}
			set { 
				if( value != m_inputName){
					m_inputName = value;
					NotifyPropertyChanged("inputName");
				}
			}  
		}
	


		private const string s_inputNormalStatus = @"Normal status";
		private string m_inputNormalStatus=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='inputNormalStatus']/@value")]
		public string inputNormalStatus {
			get { 
				if( m_inputNormalStatus == null){
					return s_inputNormalStatus;
				}
				return m_inputNormalStatus; 
			}
			set { 
				if( value != m_inputNormalStatus){
					m_inputNormalStatus = value;
					NotifyPropertyChanged("inputNormalStatus");
				}
			}  
		}
	


		private const string s_inputCurrentStatus = @"Current status";
		private string m_inputCurrentStatus=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='inputCurrentStatus']/@value")]
		public string inputCurrentStatus {
			get { 
				if( m_inputCurrentStatus == null){
					return s_inputCurrentStatus;
				}
				return m_inputCurrentStatus; 
			}
			set { 
				if( value != m_inputCurrentStatus){
					m_inputCurrentStatus = value;
					NotifyPropertyChanged("inputCurrentStatus");
				}
			}  
		}
	


		private const string s_outputName = @"Name";
		private string m_outputName=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outputName']/@value")]
		public string outputName {
			get { 
				if( m_outputName == null){
					return s_outputName;
				}
				return m_outputName; 
			}
			set { 
				if( value != m_outputName){
					m_outputName = value;
					NotifyPropertyChanged("outputName");
				}
			}  
		}
	


		private const string s_outputIdleStatus = @"Idle status";
		private string m_outputIdleStatus=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outputIdleStatus']/@value")]
		public string outputIdleStatus {
			get { 
				if( m_outputIdleStatus == null){
					return s_outputIdleStatus;
				}
				return m_outputIdleStatus; 
			}
			set { 
				if( value != m_outputIdleStatus){
					m_outputIdleStatus = value;
					NotifyPropertyChanged("outputIdleStatus");
				}
			}  
		}
	


		private const string s_outputCurrentStatus = @"Current status";
		private string m_outputCurrentStatus=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outputCurrentStatus']/@value")]
		public string outputCurrentStatus {
			get { 
				if( m_outputCurrentStatus == null){
					return s_outputCurrentStatus;
				}
				return m_outputCurrentStatus; 
			}
			set { 
				if( value != m_outputCurrentStatus){
					m_outputCurrentStatus = value;
					NotifyPropertyChanged("outputCurrentStatus");
				}
			}  
		}
	


		private const string s_inputs = @"Digital inputs";
		private string m_inputs=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='inputs']/@value")]
		public string inputs {
			get { 
				if( m_inputs == null){
					return s_inputs;
				}
				return m_inputs; 
			}
			set { 
				if( value != m_inputs){
					m_inputs = value;
					NotifyPropertyChanged("inputs");
				}
			}  
		}
	


		private const string s_outputs = @"Digital outputs (relays)";
		private string m_outputs=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outputs']/@value")]
		public string outputs {
			get { 
				if( m_outputs == null){
					return s_outputs;
				}
				return m_outputs; 
			}
			set { 
				if( value != m_outputs){
					m_outputs = value;
					NotifyPropertyChanged("outputs");
				}
			}  
		}
	


		private const string s_eventAction = @"Event action";
		private string m_eventAction=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventAction']/@value")]
		public string eventAction {
			get { 
				if( m_eventAction == null){
					return s_eventAction;
				}
				return m_eventAction; 
			}
			set { 
				if( value != m_eventAction){
					m_eventAction = value;
					NotifyPropertyChanged("eventAction");
				}
			}  
		}
	


		private const string s_eventSendONVIFmessage = @"Send ONVIF message";
		private string m_eventSendONVIFmessage=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventSendONVIFmessage']/@value")]
		public string eventSendONVIFmessage {
			get { 
				if( m_eventSendONVIFmessage == null){
					return s_eventSendONVIFmessage;
				}
				return m_eventSendONVIFmessage; 
			}
			set { 
				if( value != m_eventSendONVIFmessage){
					m_eventSendONVIFmessage = value;
					NotifyPropertyChanged("eventSendONVIFmessage");
				}
			}  
		}
	


		private const string s_triggerRelay = @"Trigger relay";
		private string m_triggerRelay=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='triggerRelay']/@value")]
		public string triggerRelay {
			get { 
				if( m_triggerRelay == null){
					return s_triggerRelay;
				}
				return m_triggerRelay; 
			}
			set { 
				if( value != m_triggerRelay){
					m_triggerRelay = value;
					NotifyPropertyChanged("triggerRelay");
				}
			}  
		}
	


		private const string s_recordChannel = @"Record channel";
		private string m_recordChannel=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='recordChannel']/@value")]
		public string recordChannel {
			get { 
				if( m_recordChannel == null){
					return s_recordChannel;
				}
				return m_recordChannel; 
			}
			set { 
				if( value != m_recordChannel){
					m_recordChannel = value;
					NotifyPropertyChanged("recordChannel");
				}
			}  
		}
	


		private const string s_switchAnalogue = @"Switch analogue video on";
		private string m_switchAnalogue=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='switchAnalogue']/@value")]
		public string switchAnalogue {
			get { 
				if( m_switchAnalogue == null){
					return s_switchAnalogue;
				}
				return m_switchAnalogue; 
			}
			set { 
				if( value != m_switchAnalogue){
					m_switchAnalogue = value;
					NotifyPropertyChanged("switchAnalogue");
				}
			}  
		}
	


		private const string s_buttonTriggerRelay = @"Trigger relay";
		private string m_buttonTriggerRelay=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='buttonTriggerRelay']/@value")]
		public string buttonTriggerRelay {
			get { 
				if( m_buttonTriggerRelay == null){
					return s_buttonTriggerRelay;
				}
				return m_buttonTriggerRelay; 
			}
			set { 
				if( value != m_buttonTriggerRelay){
					m_buttonTriggerRelay = value;
					NotifyPropertyChanged("buttonTriggerRelay");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyMaintenanceStrings: LocalizedStringsBase<PropertyMaintenanceStrings>{
		


		private const string s_title = @"Maintenance";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_configuration = @"Configuration";
		private string m_configuration=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='configuration']/@value")]
		public string configuration {
			get { 
				if( m_configuration == null){
					return s_configuration;
				}
				return m_configuration; 
			}
			set { 
				if( value != m_configuration){
					m_configuration = value;
					NotifyPropertyChanged("configuration");
				}
			}  
		}
	


		private const string s_btnBackup = @"Backup";
		private string m_btnBackup=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnBackup']/@value")]
		public string btnBackup {
			get { 
				if( m_btnBackup == null){
					return s_btnBackup;
				}
				return m_btnBackup; 
			}
			set { 
				if( value != m_btnBackup){
					m_btnBackup = value;
					NotifyPropertyChanged("btnBackup");
				}
			}  
		}
	


		private const string s_btnRestore = @"Restore";
		private string m_btnRestore=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnRestore']/@value")]
		public string btnRestore {
			get { 
				if( m_btnRestore == null){
					return s_btnRestore;
				}
				return m_btnRestore; 
			}
			set { 
				if( value != m_btnRestore){
					m_btnRestore = value;
					NotifyPropertyChanged("btnRestore");
				}
			}  
		}
	


		private const string s_factoryReset = @"Factory reset";
		private string m_factoryReset=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='factoryReset']/@value")]
		public string factoryReset {
			get { 
				if( m_factoryReset == null){
					return s_factoryReset;
				}
				return m_factoryReset; 
			}
			set { 
				if( value != m_factoryReset){
					m_factoryReset = value;
					NotifyPropertyChanged("factoryReset");
				}
			}  
		}
	


		private const string s_btnSoftReset = @"Soft reset";
		private string m_btnSoftReset=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnSoftReset']/@value")]
		public string btnSoftReset {
			get { 
				if( m_btnSoftReset == null){
					return s_btnSoftReset;
				}
				return m_btnSoftReset; 
			}
			set { 
				if( value != m_btnSoftReset){
					m_btnSoftReset = value;
					NotifyPropertyChanged("btnSoftReset");
				}
			}  
		}
	


		private const string s_btnHardReset = @"Hard reset";
		private string m_btnHardReset=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnHardReset']/@value")]
		public string btnHardReset {
			get { 
				if( m_btnHardReset == null){
					return s_btnHardReset;
				}
				return m_btnHardReset; 
			}
			set { 
				if( value != m_btnHardReset){
					m_btnHardReset = value;
					NotifyPropertyChanged("btnHardReset");
				}
			}  
		}
	


		private const string s_diagnostics = @"Diagnostics and support";
		private string m_diagnostics=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='diagnostics']/@value")]
		public string diagnostics {
			get { 
				if( m_diagnostics == null){
					return s_diagnostics;
				}
				return m_diagnostics; 
			}
			set { 
				if( value != m_diagnostics){
					m_diagnostics = value;
					NotifyPropertyChanged("diagnostics");
				}
			}  
		}
	


		private const string s_btnDownloadDump = @"Download Dump";
		private string m_btnDownloadDump=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnDownloadDump']/@value")]
		public string btnDownloadDump {
			get { 
				if( m_btnDownloadDump == null){
					return s_btnDownloadDump;
				}
				return m_btnDownloadDump; 
			}
			set { 
				if( value != m_btnDownloadDump){
					m_btnDownloadDump = value;
					NotifyPropertyChanged("btnDownloadDump");
				}
			}  
		}
	


		private const string s_firmwareVer = @"Current firmware version";
		private string m_firmwareVer=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='firmwareVer']/@value")]
		public string firmwareVer {
			get { 
				if( m_firmwareVer == null){
					return s_firmwareVer;
				}
				return m_firmwareVer; 
			}
			set { 
				if( value != m_firmwareVer){
					m_firmwareVer = value;
					NotifyPropertyChanged("firmwareVer");
				}
			}  
		}
	


		private const string s_upgrateFirmware = @"Upgrade firmware";
		private string m_upgrateFirmware=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='upgrateFirmware']/@value")]
		public string upgrateFirmware {
			get { 
				if( m_upgrateFirmware == null){
					return s_upgrateFirmware;
				}
				return m_upgrateFirmware; 
			}
			set { 
				if( value != m_upgrateFirmware){
					m_upgrateFirmware = value;
					NotifyPropertyChanged("upgrateFirmware");
				}
			}  
		}
	


		private const string s_btnUpgrate = @"Upgrade";
		private string m_btnUpgrate=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnUpgrate']/@value")]
		public string btnUpgrate {
			get { 
				if( m_btnUpgrate == null){
					return s_btnUpgrate;
				}
				return m_btnUpgrate; 
			}
			set { 
				if( value != m_btnUpgrate){
					m_btnUpgrate = value;
					NotifyPropertyChanged("btnUpgrate");
				}
			}  
		}
	


		private const string s_updateCompleate = @"Firmware update is complete. Please wait for your device to reboot. ";
		private string m_updateCompleate=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='updateCompleate']/@value")]
		public string updateCompleate {
			get { 
				if( m_updateCompleate == null){
					return s_updateCompleate;
				}
				return m_updateCompleate; 
			}
			set { 
				if( value != m_updateCompleate){
					m_updateCompleate = value;
					NotifyPropertyChanged("updateCompleate");
				}
			}  
		}
	


		private const string s_backupCompleate = @"Backup is complete.";
		private string m_backupCompleate=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='backupCompleate']/@value")]
		public string backupCompleate {
			get { 
				if( m_backupCompleate == null){
					return s_backupCompleate;
				}
				return m_backupCompleate; 
			}
			set { 
				if( value != m_backupCompleate){
					m_backupCompleate = value;
					NotifyPropertyChanged("backupCompleate");
				}
			}  
		}
	


		private const string s_restoreCompleate = @"Restore is complete. Please wait for your device to reboot. ";
		private string m_restoreCompleate=null;
		[XPath(@"/localized-strings/module[@name='PropertyMaintenanceStrings' and @namespace='odm.ui.controls']/descendant::string[@name='restoreCompleate']/@value")]
		public string restoreCompleate {
			get { 
				if( m_restoreCompleate == null){
					return s_restoreCompleate;
				}
				return m_restoreCompleate; 
			}
			set { 
				if( value != m_restoreCompleate){
					m_restoreCompleate = value;
					NotifyPropertyChanged("restoreCompleate");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class SystemLogStrings: LocalizedStringsBase<SystemLogStrings>{
		


		private const string s_title = @"System log";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='SystemLogStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class CommonEventsStrings: LocalizedStringsBase<CommonEventsStrings>{
		


		private const string s_title = @"Common events";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_ruleID = @"Rule ID";
		private string m_ruleID=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleID']/@value")]
		public string ruleID {
			get { 
				if( m_ruleID == null){
					return s_ruleID;
				}
				return m_ruleID; 
			}
			set { 
				if( value != m_ruleID){
					m_ruleID = value;
					NotifyPropertyChanged("ruleID");
				}
			}  
		}
	


		private const string s_eventID = @"Event ID";
		private string m_eventID=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventID']/@value")]
		public string eventID {
			get { 
				if( m_eventID == null){
					return s_eventID;
				}
				return m_eventID; 
			}
			set { 
				if( value != m_eventID){
					m_eventID = value;
					NotifyPropertyChanged("eventID");
				}
			}  
		}
	


		private const string s_dateTime = @"Date/Time";
		private string m_dateTime=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dateTime']/@value")]
		public string dateTime {
			get { 
				if( m_dateTime == null){
					return s_dateTime;
				}
				return m_dateTime; 
			}
			set { 
				if( value != m_dateTime){
					m_dateTime = value;
					NotifyPropertyChanged("dateTime");
				}
			}  
		}
	


		private const string s_type = @"Type";
		private string m_type=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='type']/@value")]
		public string type {
			get { 
				if( m_type == null){
					return s_type;
				}
				return m_type; 
			}
			set { 
				if( value != m_type){
					m_type = value;
					NotifyPropertyChanged("type");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyProfileEditorStrings: LocalizedStringsBase<PropertyProfileEditorStrings>{
		


		private const string s_title = @"Profiles";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_newProf = @"New";
		private string m_newProf=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='newProf']/@value")]
		public string newProf {
			get { 
				if( m_newProf == null){
					return s_newProf;
				}
				return m_newProf; 
			}
			set { 
				if( value != m_newProf){
					m_newProf = value;
					NotifyPropertyChanged("newProf");
				}
			}  
		}
	


		private const string s_rename = @"Rename";
		private string m_rename=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rename']/@value")]
		public string rename {
			get { 
				if( m_rename == null){
					return s_rename;
				}
				return m_rename; 
			}
			set { 
				if( value != m_rename){
					m_rename = value;
					NotifyPropertyChanged("rename");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_select = @"Apply";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyLiveVideoStrings: LocalizedStringsBase<PropertyLiveVideoStrings>{
		


		private const string s_title = @"Live video";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyLiveVideoStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_folder = @"Select";
		private string m_folder=null;
		[XPath(@"/localized-strings/module[@name='PropertyLiveVideoStrings' and @namespace='odm.ui.controls']/descendant::string[@name='folder']/@value")]
		public string folder {
			get { 
				if( m_folder == null){
					return s_folder;
				}
				return m_folder; 
			}
			set { 
				if( value != m_folder){
					m_folder = value;
					NotifyPropertyChanged("folder");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertySensorSettingsStrings: LocalizedStringsBase<PropertySensorSettingsStrings>{
		


		private const string s_title = @"Sensor settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_brightness = @"Brightness";
		private string m_brightness=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='brightness']/@value")]
		public string brightness {
			get { 
				if( m_brightness == null){
					return s_brightness;
				}
				return m_brightness; 
			}
			set { 
				if( value != m_brightness){
					m_brightness = value;
					NotifyPropertyChanged("brightness");
				}
			}  
		}
	


		private const string s_saturation = @"Color saturation";
		private string m_saturation=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='saturation']/@value")]
		public string saturation {
			get { 
				if( m_saturation == null){
					return s_saturation;
				}
				return m_saturation; 
			}
			set { 
				if( value != m_saturation){
					m_saturation = value;
					NotifyPropertyChanged("saturation");
				}
			}  
		}
	


		private const string s_contrast = @"Contrast";
		private string m_contrast=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='contrast']/@value")]
		public string contrast {
			get { 
				if( m_contrast == null){
					return s_contrast;
				}
				return m_contrast; 
			}
			set { 
				if( value != m_contrast){
					m_contrast = value;
					NotifyPropertyChanged("contrast");
				}
			}  
		}
	


		private const string s_sharpness = @"Sharpness";
		private string m_sharpness=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sharpness']/@value")]
		public string sharpness {
			get { 
				if( m_sharpness == null){
					return s_sharpness;
				}
				return m_sharpness; 
			}
			set { 
				if( value != m_sharpness){
					m_sharpness = value;
					NotifyPropertyChanged("sharpness");
				}
			}  
		}
	


		private const string s_whitemode = @"White balance AUTO mode";
		private string m_whitemode=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='whitemode']/@value")]
		public string whitemode {
			get { 
				if( m_whitemode == null){
					return s_whitemode;
				}
				return m_whitemode; 
			}
			set { 
				if( value != m_whitemode){
					m_whitemode = value;
					NotifyPropertyChanged("whitemode");
				}
			}  
		}
	


		private const string s_whiteBalanceCb = @"White balance Cb";
		private string m_whiteBalanceCb=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='whiteBalanceCb']/@value")]
		public string whiteBalanceCb {
			get { 
				if( m_whiteBalanceCb == null){
					return s_whiteBalanceCb;
				}
				return m_whiteBalanceCb; 
			}
			set { 
				if( value != m_whiteBalanceCb){
					m_whiteBalanceCb = value;
					NotifyPropertyChanged("whiteBalanceCb");
				}
			}  
		}
	


		private const string s_whiteBalanceCr = @"White balance Cr";
		private string m_whiteBalanceCr=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='whiteBalanceCr']/@value")]
		public string whiteBalanceCr {
			get { 
				if( m_whiteBalanceCr == null){
					return s_whiteBalanceCr;
				}
				return m_whiteBalanceCr; 
			}
			set { 
				if( value != m_whiteBalanceCr){
					m_whiteBalanceCr = value;
					NotifyPropertyChanged("whiteBalanceCr");
				}
			}  
		}
	


		private const string s_auto = @"Auto";
		private string m_auto=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='auto']/@value")]
		public string auto {
			get { 
				if( m_auto == null){
					return s_auto;
				}
				return m_auto; 
			}
			set { 
				if( value != m_auto){
					m_auto = value;
					NotifyPropertyChanged("auto");
				}
			}  
		}
	


		private const string s_min = @"min";
		private string m_min=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='min']/@value")]
		public string min {
			get { 
				if( m_min == null){
					return s_min;
				}
				return m_min; 
			}
			set { 
				if( value != m_min){
					m_min = value;
					NotifyPropertyChanged("min");
				}
			}  
		}
	


		private const string s_max = @"max";
		private string m_max=null;
		[XPath(@"/localized-strings/module[@name='PropertySensorSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='max']/@value")]
		public string max {
			get { 
				if( m_max == null){
					return s_max;
				}
				return m_max; 
			}
			set { 
				if( value != m_max){
					m_max = value;
					NotifyPropertyChanged("max");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyChannelEventsStrings: LocalizedStringsBase<PropertyChannelEventsStrings>{
		


		private const string s_title = @"Events";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_ruleID = @"Rule ID";
		private string m_ruleID=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleID']/@value")]
		public string ruleID {
			get { 
				if( m_ruleID == null){
					return s_ruleID;
				}
				return m_ruleID; 
			}
			set { 
				if( value != m_ruleID){
					m_ruleID = value;
					NotifyPropertyChanged("ruleID");
				}
			}  
		}
	


		private const string s_eventID = @"Event ID";
		private string m_eventID=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventID']/@value")]
		public string eventID {
			get { 
				if( m_eventID == null){
					return s_eventID;
				}
				return m_eventID; 
			}
			set { 
				if( value != m_eventID){
					m_eventID = value;
					NotifyPropertyChanged("eventID");
				}
			}  
		}
	


		private const string s_dateTime = @"Date/Time";
		private string m_dateTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dateTime']/@value")]
		public string dateTime {
			get { 
				if( m_dateTime == null){
					return s_dateTime;
				}
				return m_dateTime; 
			}
			set { 
				if( value != m_dateTime){
					m_dateTime = value;
					NotifyPropertyChanged("dateTime");
				}
			}  
		}
	


		private const string s_type = @"Type";
		private string m_type=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='type']/@value")]
		public string type {
			get { 
				if( m_type == null){
					return s_type;
				}
				return m_type; 
			}
			set { 
				if( value != m_type){
					m_type = value;
					NotifyPropertyChanged("type");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyDepthCalibrationStrings: LocalizedStringsBase<PropertyDepthCalibrationStrings>{
		


		private const string s_physHeightTitle = @"Calibration settings";
		private string m_physHeightTitle=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='physHeightTitle']/@value")]
		public string physHeightTitle {
			get { 
				if( m_physHeightTitle == null){
					return s_physHeightTitle;
				}
				return m_physHeightTitle; 
			}
			set { 
				if( value != m_physHeightTitle){
					m_physHeightTitle = value;
					NotifyPropertyChanged("physHeightTitle");
				}
			}  
		}
	


		private const string s_physHeightSave = @"Set";
		private string m_physHeightSave=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='physHeightSave']/@value")]
		public string physHeightSave {
			get { 
				if( m_physHeightSave == null){
					return s_physHeightSave;
				}
				return m_physHeightSave; 
			}
			set { 
				if( value != m_physHeightSave){
					m_physHeightSave = value;
					NotifyPropertyChanged("physHeightSave");
				}
			}  
		}
	


		private const string s_title = @"Depth calibration";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_focalLength = @"Focal length, mm";
		private string m_focalLength=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='focalLength']/@value")]
		public string focalLength {
			get { 
				if( m_focalLength == null){
					return s_focalLength;
				}
				return m_focalLength; 
			}
			set { 
				if( value != m_focalLength){
					m_focalLength = value;
					NotifyPropertyChanged("focalLength");
				}
			}  
		}
	


		private const string s_sensorPixel = @"Photosensor pixel size, m*";
		private string m_sensorPixel=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensorPixel']/@value")]
		public string sensorPixel {
			get { 
				if( m_sensorPixel == null){
					return s_sensorPixel;
				}
				return m_sensorPixel; 
			}
			set { 
				if( value != m_sensorPixel){
					m_sensorPixel = value;
					NotifyPropertyChanged("sensorPixel");
				}
			}  
		}
	


		private const string s_matrixFormat = @"Matrix format";
		private string m_matrixFormat=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='matrixFormat']/@value")]
		public string matrixFormat {
			get { 
				if( m_matrixFormat == null){
					return s_matrixFormat;
				}
				return m_matrixFormat; 
			}
			set { 
				if( value != m_matrixFormat){
					m_matrixFormat = value;
					NotifyPropertyChanged("matrixFormat");
				}
			}  
		}
	


		private const string s_save = @"Calibrate";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	


		private const string s_cancel = @"Exit";
		private string m_cancel=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cancel']/@value")]
		public string cancel {
			get { 
				if( m_cancel == null){
					return s_cancel;
				}
				return m_cancel; 
			}
			set { 
				if( value != m_cancel){
					m_cancel = value;
					NotifyPropertyChanged("cancel");
				}
			}  
		}
	


		private const string s_heightMarker = @"Height marker";
		private string m_heightMarker=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='heightMarker']/@value")]
		public string heightMarker {
			get { 
				if( m_heightMarker == null){
					return s_heightMarker;
				}
				return m_heightMarker; 
			}
			set { 
				if( value != m_heightMarker){
					m_heightMarker = value;
					NotifyPropertyChanged("heightMarker");
				}
			}  
		}
	


		private const string s_marker2D = @"2D-marker";
		private string m_marker2D=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='marker2D']/@value")]
		public string marker2D {
			get { 
				if( m_marker2D == null){
					return s_marker2D;
				}
				return m_marker2D; 
			}
			set { 
				if( value != m_marker2D){
					m_marker2D = value;
					NotifyPropertyChanged("marker2D");
				}
			}  
		}
	


		private const string s_width = @"Width";
		private string m_width=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='width']/@value")]
		public string width {
			get { 
				if( m_width == null){
					return s_width;
				}
				return m_width; 
			}
			set { 
				if( value != m_width){
					m_width = value;
					NotifyPropertyChanged("width");
				}
			}  
		}
	


		private const string s_heigth = @"Heigth";
		private string m_heigth=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='heigth']/@value")]
		public string heigth {
			get { 
				if( m_heigth == null){
					return s_heigth;
				}
				return m_heigth; 
			}
			set { 
				if( value != m_heigth){
					m_heigth = value;
					NotifyPropertyChanged("heigth");
				}
			}  
		}
	


		private const string s_widthLiteral = @"w";
		private string m_widthLiteral=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='widthLiteral']/@value")]
		public string widthLiteral {
			get { 
				if( m_widthLiteral == null){
					return s_widthLiteral;
				}
				return m_widthLiteral; 
			}
			set { 
				if( value != m_widthLiteral){
					m_widthLiteral = value;
					NotifyPropertyChanged("widthLiteral");
				}
			}  
		}
	


		private const string s_heigthLiteral = @"h";
		private string m_heigthLiteral=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='heigthLiteral']/@value")]
		public string heigthLiteral {
			get { 
				if( m_heigthLiteral == null){
					return s_heigthLiteral;
				}
				return m_heigthLiteral; 
			}
			set { 
				if( value != m_heigthLiteral){
					m_heigthLiteral = value;
					NotifyPropertyChanged("heigthLiteral");
				}
			}  
		}
	


		private const string s_unknow = @"I don't know";
		private string m_unknow=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='unknow']/@value")]
		public string unknow {
			get { 
				if( m_unknow == null){
					return s_unknow;
				}
				return m_unknow; 
			}
			set { 
				if( value != m_unknow){
					m_unknow = value;
					NotifyPropertyChanged("unknow");
				}
			}  
		}
	


		private const string s_clibrate = @"Calibrate";
		private string m_clibrate=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='clibrate']/@value")]
		public string clibrate {
			get { 
				if( m_clibrate == null){
					return s_clibrate;
				}
				return m_clibrate; 
			}
			set { 
				if( value != m_clibrate){
					m_clibrate = value;
					NotifyPropertyChanged("clibrate");
				}
			}  
		}
	


		private const string s_physHeight = @"Real perspector size, cm";
		private string m_physHeight=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='physHeight']/@value")]
		public string physHeight {
			get { 
				if( m_physHeight == null){
					return s_physHeight;
				}
				return m_physHeight; 
			}
			set { 
				if( value != m_physHeight){
					m_physHeight = value;
					NotifyPropertyChanged("physHeight");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyVideoStreamingStrings: LocalizedStringsBase<PropertyVideoStreamingStrings>{
		


		private const string s_title = @"Video streaming";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_resolution = @"Resolution, pixels";
		private string m_resolution=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='resolution']/@value")]
		public string resolution {
			get { 
				if( m_resolution == null){
					return s_resolution;
				}
				return m_resolution; 
			}
			set { 
				if( value != m_resolution){
					m_resolution = value;
					NotifyPropertyChanged("resolution");
				}
			}  
		}
	


		private const string s_frameRate = @"Frame rate, fps";
		private string m_frameRate=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='frameRate']/@value")]
		public string frameRate {
			get { 
				if( m_frameRate == null){
					return s_frameRate;
				}
				return m_frameRate; 
			}
			set { 
				if( value != m_frameRate){
					m_frameRate = value;
					NotifyPropertyChanged("frameRate");
				}
			}  
		}
	


		private const string s_encodingInterval = @"Encoding interval";
		private string m_encodingInterval=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='encodingInterval']/@value")]
		public string encodingInterval {
			get { 
				if( m_encodingInterval == null){
					return s_encodingInterval;
				}
				return m_encodingInterval; 
			}
			set { 
				if( value != m_encodingInterval){
					m_encodingInterval = value;
					NotifyPropertyChanged("encodingInterval");
				}
			}  
		}
	


		private const string s_encoder = @"Encoder";
		private string m_encoder=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='encoder']/@value")]
		public string encoder {
			get { 
				if( m_encoder == null){
					return s_encoder;
				}
				return m_encoder; 
			}
			set { 
				if( value != m_encoder){
					m_encoder = value;
					NotifyPropertyChanged("encoder");
				}
			}  
		}
	


		private const string s_bitrate = @"Target bitrate, kbps";
		private string m_bitrate=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='bitrate']/@value")]
		public string bitrate {
			get { 
				if( m_bitrate == null){
					return s_bitrate;
				}
				return m_bitrate; 
			}
			set { 
				if( value != m_bitrate){
					m_bitrate = value;
					NotifyPropertyChanged("bitrate");
				}
			}  
		}
	


		private const string s_prioriy = @"Priority";
		private string m_prioriy=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='prioriy']/@value")]
		public string prioriy {
			get { 
				if( m_prioriy == null){
					return s_prioriy;
				}
				return m_prioriy; 
			}
			set { 
				if( value != m_prioriy){
					m_prioriy = value;
					NotifyPropertyChanged("prioriy");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata stream On/Off";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_channelName = @"Channel name";
		private string m_channelName=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='channelName']/@value")]
		public string channelName {
			get { 
				if( m_channelName == null){
					return s_channelName;
				}
				return m_channelName; 
			}
			set { 
				if( value != m_channelName){
					m_channelName = value;
					NotifyPropertyChanged("channelName");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyMetadataStrings: LocalizedStringsBase<PropertyMetadataStrings>{
		


		private const string s_title = @"Metadata";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyMetadataStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_empty = @"No metadata available";
		private string m_empty=null;
		[XPath(@"/localized-strings/module[@name='PropertyMetadataStrings' and @namespace='odm.ui.controls']/descendant::string[@name='empty']/@value")]
		public string empty {
			get { 
				if( m_empty == null){
					return s_empty;
				}
				return m_empty; 
			}
			set { 
				if( value != m_empty){
					m_empty = value;
					NotifyPropertyChanged("empty");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyDisplayAnnotationStrings: LocalizedStringsBase<PropertyDisplayAnnotationStrings>{
		


		private const string s_title = @"Display annotation";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_timestamp = @"Timestamp";
		private string m_timestamp=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timestamp']/@value")]
		public string timestamp {
			get { 
				if( m_timestamp == null){
					return s_timestamp;
				}
				return m_timestamp; 
			}
			set { 
				if( value != m_timestamp){
					m_timestamp = value;
					NotifyPropertyChanged("timestamp");
				}
			}  
		}
	


		private const string s_objects = @"Moving rects";
		private string m_objects=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='objects']/@value")]
		public string objects {
			get { 
				if( m_objects == null){
					return s_objects;
				}
				return m_objects; 
			}
			set { 
				if( value != m_objects){
					m_objects = value;
					NotifyPropertyChanged("objects");
				}
			}  
		}
	


		private const string s_trajectories = @"Objects and trajectories";
		private string m_trajectories=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='trajectories']/@value")]
		public string trajectories {
			get { 
				if( m_trajectories == null){
					return s_trajectories;
				}
				return m_trajectories; 
			}
			set { 
				if( value != m_trajectories){
					m_trajectories = value;
					NotifyPropertyChanged("trajectories");
				}
			}  
		}
	


		private const string s_speed = @"Speed";
		private string m_speed=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speed']/@value")]
		public string speed {
			get { 
				if( m_speed == null){
					return s_speed;
				}
				return m_speed; 
			}
			set { 
				if( value != m_speed){
					m_speed = value;
					NotifyPropertyChanged("speed");
				}
			}  
		}
	


		private const string s_userRegion = @"Region of interest";
		private string m_userRegion=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='userRegion']/@value")]
		public string userRegion {
			get { 
				if( m_userRegion == null){
					return s_userRegion;
				}
				return m_userRegion; 
			}
			set { 
				if( value != m_userRegion){
					m_userRegion = value;
					NotifyPropertyChanged("userRegion");
				}
			}  
		}
	


		private const string s_channelName = @"Channel name";
		private string m_channelName=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='channelName']/@value")]
		public string channelName {
			get { 
				if( m_channelName == null){
					return s_channelName;
				}
				return m_channelName; 
			}
			set { 
				if( value != m_channelName){
					m_channelName = value;
					NotifyPropertyChanged("channelName");
				}
			}  
		}
	


		private const string s_sysInfo = @"System Info";
		private string m_sysInfo=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sysInfo']/@value")]
		public string sysInfo {
			get { 
				if( m_sysInfo == null){
					return s_sysInfo;
				}
				return m_sysInfo; 
			}
			set { 
				if( value != m_sysInfo){
					m_sysInfo = value;
					NotifyPropertyChanged("sysInfo");
				}
			}  
		}
	


		private const string s_calibrationNet = @"Calibration Net";
		private string m_calibrationNet=null;
		[XPath(@"/localized-strings/module[@name='PropertyDisplayAnnotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='calibrationNet']/@value")]
		public string calibrationNet {
			get { 
				if( m_calibrationNet == null){
					return s_calibrationNet;
				}
				return m_calibrationNet; 
			}
			set { 
				if( value != m_calibrationNet){
					m_calibrationNet = value;
					NotifyPropertyChanged("calibrationNet");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyTamperingDetectorsStrings: LocalizedStringsBase<PropertyTamperingDetectorsStrings>{
		


		private const string s_title = @"Tampering detectors";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_signalLost = @"Signal lost";
		private string m_signalLost=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='signalLost']/@value")]
		public string signalLost {
			get { 
				if( m_signalLost == null){
					return s_signalLost;
				}
				return m_signalLost; 
			}
			set { 
				if( value != m_signalLost){
					m_signalLost = value;
					NotifyPropertyChanged("signalLost");
				}
			}  
		}
	


		private const string s_globalChange = @"Global change";
		private string m_globalChange=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='globalChange']/@value")]
		public string globalChange {
			get { 
				if( m_globalChange == null){
					return s_globalChange;
				}
				return m_globalChange; 
			}
			set { 
				if( value != m_globalChange){
					m_globalChange = value;
					NotifyPropertyChanged("globalChange");
				}
			}  
		}
	


		private const string s_sceneDark = @"Scene too dark";
		private string m_sceneDark=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sceneDark']/@value")]
		public string sceneDark {
			get { 
				if( m_sceneDark == null){
					return s_sceneDark;
				}
				return m_sceneDark; 
			}
			set { 
				if( value != m_sceneDark){
					m_sceneDark = value;
					NotifyPropertyChanged("sceneDark");
				}
			}  
		}
	


		private const string s_sceneBright = @"Scene too bright";
		private string m_sceneBright=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sceneBright']/@value")]
		public string sceneBright {
			get { 
				if( m_sceneBright == null){
					return s_sceneBright;
				}
				return m_sceneBright; 
			}
			set { 
				if( value != m_sceneBright){
					m_sceneBright = value;
					NotifyPropertyChanged("sceneBright");
				}
			}  
		}
	


		private const string s_sceneNoisy = @"Scene too noisy";
		private string m_sceneNoisy=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sceneNoisy']/@value")]
		public string sceneNoisy {
			get { 
				if( m_sceneNoisy == null){
					return s_sceneNoisy;
				}
				return m_sceneNoisy; 
			}
			set { 
				if( value != m_sceneNoisy){
					m_sceneNoisy = value;
					NotifyPropertyChanged("sceneNoisy");
				}
			}  
		}
	


		private const string s_outFocus = @"Out of focus";
		private string m_outFocus=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outFocus']/@value")]
		public string outFocus {
			get { 
				if( m_outFocus == null){
					return s_outFocus;
				}
				return m_outFocus; 
			}
			set { 
				if( value != m_outFocus){
					m_outFocus = value;
					NotifyPropertyChanged("outFocus");
				}
			}  
		}
	


		private const string s_fieldObstructed = @"Field of view obstructed";
		private string m_fieldObstructed=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='fieldObstructed']/@value")]
		public string fieldObstructed {
			get { 
				if( m_fieldObstructed == null){
					return s_fieldObstructed;
				}
				return m_fieldObstructed; 
			}
			set { 
				if( value != m_fieldObstructed){
					m_fieldObstructed = value;
					NotifyPropertyChanged("fieldObstructed");
				}
			}  
		}
	


		private const string s_cameraDisplaced = @"Camera displaced";
		private string m_cameraDisplaced=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cameraDisplaced']/@value")]
		public string cameraDisplaced {
			get { 
				if( m_cameraDisplaced == null){
					return s_cameraDisplaced;
				}
				return m_cameraDisplaced; 
			}
			set { 
				if( value != m_cameraDisplaced){
					m_cameraDisplaced = value;
					NotifyPropertyChanged("cameraDisplaced");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyObjectTrackerStrings: LocalizedStringsBase<PropertyObjectTrackerStrings>{
		


		private const string s_title = @"Object tracker";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_contrast = @"Contrast sensitivity";
		private string m_contrast=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='contrast']/@value")]
		public string contrast {
			get { 
				if( m_contrast == null){
					return s_contrast;
				}
				return m_contrast; 
			}
			set { 
				if( value != m_contrast){
					m_contrast = value;
					NotifyPropertyChanged("contrast");
				}
			}  
		}
	


		private const string s_areaMin = @"Object area min, m*m";
		private string m_areaMin=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='areaMin']/@value")]
		public string areaMin {
			get { 
				if( m_areaMin == null){
					return s_areaMin;
				}
				return m_areaMin; 
			}
			set { 
				if( value != m_areaMin){
					m_areaMin = value;
					NotifyPropertyChanged("areaMin");
				}
			}  
		}
	


		private const string s_areaMax = @"Object area max, m*m";
		private string m_areaMax=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='areaMax']/@value")]
		public string areaMax {
			get { 
				if( m_areaMax == null){
					return s_areaMax;
				}
				return m_areaMax; 
			}
			set { 
				if( value != m_areaMax){
					m_areaMax = value;
					NotifyPropertyChanged("areaMax");
				}
			}  
		}
	


		private const string s_speedMax = @"Speed max, m/s";
		private string m_speedMax=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speedMax']/@value")]
		public string speedMax {
			get { 
				if( m_speedMax == null){
					return s_speedMax;
				}
				return m_speedMax; 
			}
			set { 
				if( value != m_speedMax){
					m_speedMax = value;
					NotifyPropertyChanged("speedMax");
				}
			}  
		}
	


		private const string s_stabilization = @"Stabilization time, ms";
		private string m_stabilization=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='stabilization']/@value")]
		public string stabilization {
			get { 
				if( m_stabilization == null){
					return s_stabilization;
				}
				return m_stabilization; 
			}
			set { 
				if( value != m_stabilization){
					m_stabilization = value;
					NotifyPropertyChanged("stabilization");
				}
			}  
		}
	


		private const string s_displacement = @"Displacement sensitivity";
		private string m_displacement=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='displacement']/@value")]
		public string displacement {
			get { 
				if( m_displacement == null){
					return s_displacement;
				}
				return m_displacement; 
			}
			set { 
				if( value != m_displacement){
					m_displacement = value;
					NotifyPropertyChanged("displacement");
				}
			}  
		}
	


		private const string s_direction = @"Direction";
		private string m_direction=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='direction']/@value")]
		public string direction {
			get { 
				if( m_direction == null){
					return s_direction;
				}
				return m_direction; 
			}
			set { 
				if( value != m_direction){
					m_direction = value;
					NotifyPropertyChanged("direction");
				}
			}  
		}
	


		private const string s_all = @"All";
		private string m_all=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='all']/@value")]
		public string all {
			get { 
				if( m_all == null){
					return s_all;
				}
				return m_all; 
			}
			set { 
				if( value != m_all){
					m_all = value;
					NotifyPropertyChanged("all");
				}
			}  
		}
	


		private const string s_none = @"None";
		private string m_none=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='none']/@value")]
		public string none {
			get { 
				if( m_none == null){
					return s_none;
				}
				return m_none; 
			}
			set { 
				if( value != m_none){
					m_none = value;
					NotifyPropertyChanged("none");
				}
			}  
		}
	


		private const string s_sensitivity = @"Sensitivity";
		private string m_sensitivity=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensitivity']/@value")]
		public string sensitivity {
			get { 
				if( m_sensitivity == null){
					return s_sensitivity;
				}
				return m_sensitivity; 
			}
			set { 
				if( value != m_sensitivity){
					m_sensitivity = value;
					NotifyPropertyChanged("sensitivity");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyRuleEngineStrings: LocalizedStringsBase<PropertyRuleEngineStrings>{
		


		private const string s_title = @"Rule engine";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_btnAdd = @"Add";
		private string m_btnAdd=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnAdd']/@value")]
		public string btnAdd {
			get { 
				if( m_btnAdd == null){
					return s_btnAdd;
				}
				return m_btnAdd; 
			}
			set { 
				if( value != m_btnAdd){
					m_btnAdd = value;
					NotifyPropertyChanged("btnAdd");
				}
			}  
		}
	


		private const string s_btnRemove = @"Remove";
		private string m_btnRemove=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnRemove']/@value")]
		public string btnRemove {
			get { 
				if( m_btnRemove == null){
					return s_btnRemove;
				}
				return m_btnRemove; 
			}
			set { 
				if( value != m_btnRemove){
					m_btnRemove = value;
					NotifyPropertyChanged("btnRemove");
				}
			}  
		}
	


		private const string s_name = @"Name";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_groupRule = @"Generate alarm when:";
		private string m_groupRule=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='groupRule']/@value")]
		public string groupRule {
			get { 
				if( m_groupRule == null){
					return s_groupRule;
				}
				return m_groupRule; 
			}
			set { 
				if( value != m_groupRule){
					m_groupRule = value;
					NotifyPropertyChanged("groupRule");
				}
			}  
		}
	


		private const string s_groupAction = @"Upon alarm:";
		private string m_groupAction=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='groupAction']/@value")]
		public string groupAction {
			get { 
				if( m_groupAction == null){
					return s_groupAction;
				}
				return m_groupAction; 
			}
			set { 
				if( value != m_groupAction){
					m_groupAction = value;
					NotifyPropertyChanged("groupAction");
				}
			}  
		}
	


		private const string s_moving = @"Moving";
		private string m_moving=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='moving']/@value")]
		public string moving {
			get { 
				if( m_moving == null){
					return s_moving;
				}
				return m_moving; 
			}
			set { 
				if( value != m_moving){
					m_moving = value;
					NotifyPropertyChanged("moving");
				}
			}  
		}
	


		private const string s_meters = @"m";
		private string m_meters=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='meters']/@value")]
		public string meters {
			get { 
				if( m_meters == null){
					return s_meters;
				}
				return m_meters; 
			}
			set { 
				if( value != m_meters){
					m_meters = value;
					NotifyPropertyChanged("meters");
				}
			}  
		}
	


		private const string s_movingInDirections = @"in directions:";
		private string m_movingInDirections=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='movingInDirections']/@value")]
		public string movingInDirections {
			get { 
				if( m_movingInDirections == null){
					return s_movingInDirections;
				}
				return m_movingInDirections; 
			}
			set { 
				if( value != m_movingInDirections){
					m_movingInDirections = value;
					NotifyPropertyChanged("movingInDirections");
				}
			}  
		}
	


		private const string s_loitering = @"Loitering";
		private string m_loitering=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='loitering']/@value")]
		public string loitering {
			get { 
				if( m_loitering == null){
					return s_loitering;
				}
				return m_loitering; 
			}
			set { 
				if( value != m_loitering){
					m_loitering = value;
					NotifyPropertyChanged("loitering");
				}
			}  
		}
	


		private const string s_seconds = @"s";
		private string m_seconds=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='seconds']/@value")]
		public string seconds {
			get { 
				if( m_seconds == null){
					return s_seconds;
				}
				return m_seconds; 
			}
			set { 
				if( value != m_seconds){
					m_seconds = value;
					NotifyPropertyChanged("seconds");
				}
			}  
		}
	


		private const string s_within = @"within";
		private string m_within=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='within']/@value")]
		public string within {
			get { 
				if( m_within == null){
					return s_within;
				}
				return m_within; 
			}
			set { 
				if( value != m_within){
					m_within = value;
					NotifyPropertyChanged("within");
				}
			}  
		}
	


		private const string s_running = @"Running faster then";
		private string m_running=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='running']/@value")]
		public string running {
			get { 
				if( m_running == null){
					return s_running;
				}
				return m_running; 
			}
			set { 
				if( value != m_running){
					m_running = value;
					NotifyPropertyChanged("running");
				}
			}  
		}
	


		private const string s_speed = @"m/s";
		private string m_speed=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speed']/@value")]
		public string speed {
			get { 
				if( m_speed == null){
					return s_speed;
				}
				return m_speed; 
			}
			set { 
				if( value != m_speed){
					m_speed = value;
					NotifyPropertyChanged("speed");
				}
			}  
		}
	


		private const string s_abandoning = @"Abandoning item";
		private string m_abandoning=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='abandoning']/@value")]
		public string abandoning {
			get { 
				if( m_abandoning == null){
					return s_abandoning;
				}
				return m_abandoning; 
			}
			set { 
				if( value != m_abandoning){
					m_abandoning = value;
					NotifyPropertyChanged("abandoning");
				}
			}  
		}
	


		private const string s_sendOnvif = @"Send ONVIF message";
		private string m_sendOnvif=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sendOnvif']/@value")]
		public string sendOnvif {
			get { 
				if( m_sendOnvif == null){
					return s_sendOnvif;
				}
				return m_sendOnvif; 
			}
			set { 
				if( value != m_sendOnvif){
					m_sendOnvif = value;
					NotifyPropertyChanged("sendOnvif");
				}
			}  
		}
	


		private const string s_setFramerate = @"Set Framerate to";
		private string m_setFramerate=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setFramerate']/@value")]
		public string setFramerate {
			get { 
				if( m_setFramerate == null){
					return s_setFramerate;
				}
				return m_setFramerate; 
			}
			set { 
				if( value != m_setFramerate){
					m_setFramerate = value;
					NotifyPropertyChanged("setFramerate");
				}
			}  
		}
	


		private const string s_fps = @"fps";
		private string m_fps=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='fps']/@value")]
		public string fps {
			get { 
				if( m_fps == null){
					return s_fps;
				}
				return m_fps; 
			}
			set { 
				if( value != m_fps){
					m_fps = value;
					NotifyPropertyChanged("fps");
				}
			}  
		}
	


		private const string s_turnOnRelay = @"Turn on";
		private string m_turnOnRelay=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='turnOnRelay']/@value")]
		public string turnOnRelay {
			get { 
				if( m_turnOnRelay == null){
					return s_turnOnRelay;
				}
				return m_turnOnRelay; 
			}
			set { 
				if( value != m_turnOnRelay){
					m_turnOnRelay = value;
					NotifyPropertyChanged("turnOnRelay");
				}
			}  
		}
	


		private const string s_turnOnAnalog = @"Turn on analogue output";
		private string m_turnOnAnalog=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='turnOnAnalog']/@value")]
		public string turnOnAnalog {
			get { 
				if( m_turnOnAnalog == null){
					return s_turnOnAnalog;
				}
				return m_turnOnAnalog; 
			}
			set { 
				if( value != m_turnOnAnalog){
					m_turnOnAnalog = value;
					NotifyPropertyChanged("turnOnAnalog");
				}
			}  
		}
	


		private const string s_record = @"Record to local or network drive";
		private string m_record=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='record']/@value")]
		public string record {
			get { 
				if( m_record == null){
					return s_record;
				}
				return m_record; 
			}
			set { 
				if( value != m_record){
					m_record = value;
					NotifyPropertyChanged("record");
				}
			}  
		}
	


		private const string s_ptz = @"Target PTZ-camera";
		private string m_ptz=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ptz']/@value")]
		public string ptz {
			get { 
				if( m_ptz == null){
					return s_ptz;
				}
				return m_ptz; 
			}
			set { 
				if( value != m_ptz){
					m_ptz = value;
					NotifyPropertyChanged("ptz");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyAntishakerStrings: LocalizedStringsBase<PropertyAntishakerStrings>{
		


		private const string s_title = @"Antishaker";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyAntishakerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyRotationStrings: LocalizedStringsBase<PropertyRotationStrings>{
		


		private const string s_title = @"Rotation";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_rotate = @"Rotation:";
		private string m_rotate=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate']/@value")]
		public string rotate {
			get { 
				if( m_rotate == null){
					return s_rotate;
				}
				return m_rotate; 
			}
			set { 
				if( value != m_rotate){
					m_rotate = value;
					NotifyPropertyChanged("rotate");
				}
			}  
		}
	


		private const string s_rotate0 = @"0'(None)";
		private string m_rotate0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate0']/@value")]
		public string rotate0 {
			get { 
				if( m_rotate0 == null){
					return s_rotate0;
				}
				return m_rotate0; 
			}
			set { 
				if( value != m_rotate0){
					m_rotate0 = value;
					NotifyPropertyChanged("rotate0");
				}
			}  
		}
	


		private const string s_rotate90 = @"90'";
		private string m_rotate90=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate90']/@value")]
		public string rotate90 {
			get { 
				if( m_rotate90 == null){
					return s_rotate90;
				}
				return m_rotate90; 
			}
			set { 
				if( value != m_rotate90){
					m_rotate90 = value;
					NotifyPropertyChanged("rotate90");
				}
			}  
		}
	


		private const string s_rotate180 = @"180'";
		private string m_rotate180=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate180']/@value")]
		public string rotate180 {
			get { 
				if( m_rotate180 == null){
					return s_rotate180;
				}
				return m_rotate180; 
			}
			set { 
				if( value != m_rotate180){
					m_rotate180 = value;
					NotifyPropertyChanged("rotate180");
				}
			}  
		}
	


		private const string s_rotate270 = @"270'";
		private string m_rotate270=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate270']/@value")]
		public string rotate270 {
			get { 
				if( m_rotate270 == null){
					return s_rotate270;
				}
				return m_rotate270; 
			}
			set { 
				if( value != m_rotate270){
					m_rotate270 = value;
					NotifyPropertyChanged("rotate270");
				}
			}  
		}
	


		private const string s_flip = @"Flip:";
		private string m_flip=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flip']/@value")]
		public string flip {
			get { 
				if( m_flip == null){
					return s_flip;
				}
				return m_flip; 
			}
			set { 
				if( value != m_flip){
					m_flip = value;
					NotifyPropertyChanged("flip");
				}
			}  
		}
	


		private const string s_flipH0 = @"None";
		private string m_flipH0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipH0']/@value")]
		public string flipH0 {
			get { 
				if( m_flipH0 == null){
					return s_flipH0;
				}
				return m_flipH0; 
			}
			set { 
				if( value != m_flipH0){
					m_flipH0 = value;
					NotifyPropertyChanged("flipH0");
				}
			}  
		}
	


		private const string s_flipH = @"Horizontal";
		private string m_flipH=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipH']/@value")]
		public string flipH {
			get { 
				if( m_flipH == null){
					return s_flipH;
				}
				return m_flipH; 
			}
			set { 
				if( value != m_flipH){
					m_flipH = value;
					NotifyPropertyChanged("flipH");
				}
			}  
		}
	


		private const string s_flipV0 = @"None";
		private string m_flipV0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipV0']/@value")]
		public string flipV0 {
			get { 
				if( m_flipV0 == null){
					return s_flipV0;
				}
				return m_flipV0; 
			}
			set { 
				if( value != m_flipV0){
					m_flipV0 = value;
					NotifyPropertyChanged("flipV0");
				}
			}  
		}
	


		private const string s_flipV = @"Vertical";
		private string m_flipV=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipV']/@value")]
		public string flipV {
			get { 
				if( m_flipV == null){
					return s_flipV;
				}
				return m_flipV; 
			}
			set { 
				if( value != m_flipV){
					m_flipV = value;
					NotifyPropertyChanged("flipV");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyAnalogueOutputStrings: LocalizedStringsBase<PropertyAnalogueOutputStrings>{
		


		private const string s_title = @"Analogue output";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_loop = @"Loop-through";
		private string m_loop=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='loop']/@value")]
		public string loop {
			get { 
				if( m_loop == null){
					return s_loop;
				}
				return m_loop; 
			}
			set { 
				if( value != m_loop){
					m_loop = value;
					NotifyPropertyChanged("loop");
				}
			}  
		}
	


		private const string s_digital = @"Digital processing";
		private string m_digital=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='digital']/@value")]
		public string digital {
			get { 
				if( m_digital == null){
					return s_digital;
				}
				return m_digital; 
			}
			set { 
				if( value != m_digital){
					m_digital = value;
					NotifyPropertyChanged("digital");
				}
			}  
		}
	


		private const string s_off = @"Off";
		private string m_off=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='off']/@value")]
		public string off {
			get { 
				if( m_off == null){
					return s_off;
				}
				return m_off; 
			}
			set { 
				if( value != m_off){
					m_off = value;
					NotifyPropertyChanged("off");
				}
			}  
		}
	
	}

}
	