//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace onvif.services.imaging {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", ConfigurationName="imaging.ImagingPort")]
    public interface ImagingPort {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/GetImagingSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.GetImagingSettingsResponse GetImagingSettings(onvif.services.imaging.GetImagingSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/GetImagingSettings", ReplyAction="*")]
        System.IAsyncResult BeginGetImagingSettings(onvif.services.imaging.GetImagingSettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.GetImagingSettingsResponse EndGetImagingSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/SetImagingSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.SetImagingSettingsResponse SetImagingSettings(onvif.services.imaging.SetImagingSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/SetImagingSettings", ReplyAction="*")]
        System.IAsyncResult BeginSetImagingSettings(onvif.services.imaging.SetImagingSettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.SetImagingSettingsResponse EndSetImagingSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/GetOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.GetOptionsResponse GetOptions(onvif.services.imaging.GetOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/GetOptions", ReplyAction="*")]
        System.IAsyncResult BeginGetOptions(onvif.services.imaging.GetOptionsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.GetOptionsResponse EndGetOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/Move", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.MoveResponse Move(onvif.services.imaging.MoveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/Move", ReplyAction="*")]
        System.IAsyncResult BeginMove(onvif.services.imaging.MoveRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.MoveResponse EndMove(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/GetMoveOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.GetMoveOptionsResponse GetMoveOptions(onvif.services.imaging.GetMoveOptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/GetMoveOptions", ReplyAction="*")]
        System.IAsyncResult BeginGetMoveOptions(onvif.services.imaging.GetMoveOptionsRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.GetMoveOptionsResponse EndGetMoveOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/FocusStop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.StopResponse Stop(onvif.services.imaging.StopRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/FocusStop", ReplyAction="*")]
        System.IAsyncResult BeginStop(onvif.services.imaging.StopRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.StopResponse EndStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.onvif.org/ver10/imaging/wsdl/GetStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        onvif.services.imaging.GetStatusResponse GetStatus(onvif.services.imaging.GetStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.onvif.org/ver10/imaging/wsdl/GetStatus", ReplyAction="*")]
        System.IAsyncResult BeginGetStatus(onvif.services.imaging.GetStatusRequest request, System.AsyncCallback callback, object asyncState);
        
        onvif.services.imaging.GetStatusResponse EndGetStatus(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensation backlightCompensationField;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private float colorSaturationField;
        
        private bool colorSaturationFieldSpecified;
        
        private float contrastField;
        
        private bool contrastFieldSpecified;
        
        private Exposure exposureField;
        
        private FocusConfiguration focusField;
        
        private IrCutFilterMode irCutFilterField;
        
        private bool irCutFilterFieldSpecified;
        
        private float sharpnessField;
        
        private bool sharpnessFieldSpecified;
        
        private WideDynamicRange wideDynamicRangeField;
        
        private WhiteBalance whiteBalanceField;
        
        private ImagingSettingsExtension extensionField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensation BacklightCompensation {
            get {
                return this.backlightCompensationField;
            }
            set {
                this.backlightCompensationField = value;
                this.RaisePropertyChanged("BacklightCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
                this.RaisePropertyChanged("Brightness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
                this.RaisePropertyChanged("BrightnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float ColorSaturation {
            get {
                return this.colorSaturationField;
            }
            set {
                this.colorSaturationField = value;
                this.RaisePropertyChanged("ColorSaturation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColorSaturationSpecified {
            get {
                return this.colorSaturationFieldSpecified;
            }
            set {
                this.colorSaturationFieldSpecified = value;
                this.RaisePropertyChanged("ColorSaturationSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float Contrast {
            get {
                return this.contrastField;
            }
            set {
                this.contrastField = value;
                this.RaisePropertyChanged("Contrast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified {
            get {
                return this.contrastFieldSpecified;
            }
            set {
                this.contrastFieldSpecified = value;
                this.RaisePropertyChanged("ContrastSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Exposure Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
                this.RaisePropertyChanged("Exposure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FocusConfiguration Focus {
            get {
                return this.focusField;
            }
            set {
                this.focusField = value;
                this.RaisePropertyChanged("Focus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public IrCutFilterMode IrCutFilter {
            get {
                return this.irCutFilterField;
            }
            set {
                this.irCutFilterField = value;
                this.RaisePropertyChanged("IrCutFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IrCutFilterSpecified {
            get {
                return this.irCutFilterFieldSpecified;
            }
            set {
                this.irCutFilterFieldSpecified = value;
                this.RaisePropertyChanged("IrCutFilterSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float Sharpness {
            get {
                return this.sharpnessField;
            }
            set {
                this.sharpnessField = value;
                this.RaisePropertyChanged("Sharpness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharpnessSpecified {
            get {
                return this.sharpnessFieldSpecified;
            }
            set {
                this.sharpnessFieldSpecified = value;
                this.RaisePropertyChanged("SharpnessSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public WideDynamicRange WideDynamicRange {
            get {
                return this.wideDynamicRangeField;
            }
            set {
                this.wideDynamicRangeField = value;
                this.RaisePropertyChanged("WideDynamicRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public WhiteBalance WhiteBalance {
            get {
                return this.whiteBalanceField;
            }
            set {
                this.whiteBalanceField = value;
                this.RaisePropertyChanged("WhiteBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public ImagingSettingsExtension Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BacklightCompensation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensationMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensationMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum BacklightCompensationMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float positionField;
        
        private MoveStatus moveStatusField;
        
        private string errorField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MoveStatus MoveStatus {
            get {
                return this.moveStatusField;
            }
            set {
                this.moveStatusField = value;
                this.RaisePropertyChanged("MoveStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum MoveStatus {
        
        /// <remarks/>
        IDLE,
        
        /// <remarks/>
        MOVING,
        
        /// <remarks/>
        UNKNOWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FocusStatus focusStatusField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FocusStatus FocusStatus {
            get {
                return this.focusStatusField;
            }
            set {
                this.focusStatusField = value;
                this.RaisePropertyChanged("FocusStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ContinuousFocusOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FloatRange speedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FloatRange Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FloatRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float minField;
        
        private float maxField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
                this.RaisePropertyChanged("Min");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
                this.RaisePropertyChanged("Max");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelativeFocusOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FloatRange distanceField;
        
        private FloatRange speedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FloatRange Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AbsoluteFocusOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FloatRange positionField;
        
        private FloatRange speedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FloatRange Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class MoveOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AbsoluteFocusOptions absoluteField;
        
        private RelativeFocusOptions relativeField;
        
        private ContinuousFocusOptions continuousField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AbsoluteFocusOptions Absolute {
            get {
                return this.absoluteField;
            }
            set {
                this.absoluteField = value;
                this.RaisePropertyChanged("Absolute");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RelativeFocusOptions Relative {
            get {
                return this.relativeField;
            }
            set {
                this.relativeField = value;
                this.RaisePropertyChanged("Relative");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ContinuousFocusOptions Continuous {
            get {
                return this.continuousField;
            }
            set {
                this.continuousField = value;
                this.RaisePropertyChanged("Continuous");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ContinuousFocus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float speedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class RelativeFocus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float distanceField;
        
        private float speedField;
        
        private bool speedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified {
            get {
                return this.speedFieldSpecified;
            }
            set {
                this.speedFieldSpecified = value;
                this.RaisePropertyChanged("SpeedSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class AbsoluteFocus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float positionField;
        
        private float speedField;
        
        private bool speedFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public float Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
                this.RaisePropertyChanged("Speed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpeedSpecified {
            get {
                return this.speedFieldSpecified;
            }
            set {
                this.speedFieldSpecified = value;
                this.RaisePropertyChanged("SpeedSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusMove : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AbsoluteFocus absoluteField;
        
        private RelativeFocus relativeField;
        
        private ContinuousFocus continuousField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AbsoluteFocus Absolute {
            get {
                return this.absoluteField;
            }
            set {
                this.absoluteField = value;
                this.RaisePropertyChanged("Absolute");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RelativeFocus Relative {
            get {
                return this.relativeField;
            }
            set {
                this.relativeField = value;
                this.RaisePropertyChanged("Relative");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ContinuousFocus Continuous {
            get {
                return this.continuousField;
            }
            set {
                this.continuousField = value;
                this.RaisePropertyChanged("Continuous");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalanceOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WhiteBalanceMode[] modeField;
        
        private FloatRange yrGainField;
        
        private FloatRange ybGainField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Order=0)]
        public WhiteBalanceMode[] Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange YrGain {
            get {
                return this.yrGainField;
            }
            set {
                this.yrGainField = value;
                this.RaisePropertyChanged("YrGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange YbGain {
            get {
                return this.ybGainField;
            }
            set {
                this.ybGainField = value;
                this.RaisePropertyChanged("YbGain");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WhiteBalanceMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WideDynamicRangeOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode[] modeField;
        
        private FloatRange levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Order=0)]
        public WideDynamicMode[] Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum WideDynamicMode {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AutoFocusMode[] autoFocusModesField;
        
        private FloatRange defaultSpeedField;
        
        private FloatRange nearLimitField;
        
        private FloatRange farLimitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AutoFocusModes", Order=0)]
        public AutoFocusMode[] AutoFocusModes {
            get {
                return this.autoFocusModesField;
            }
            set {
                this.autoFocusModesField = value;
                this.RaisePropertyChanged("AutoFocusModes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange DefaultSpeed {
            get {
                return this.defaultSpeedField;
            }
            set {
                this.defaultSpeedField = value;
                this.RaisePropertyChanged("DefaultSpeed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange NearLimit {
            get {
                return this.nearLimitField;
            }
            set {
                this.nearLimitField = value;
                this.RaisePropertyChanged("NearLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FloatRange FarLimit {
            get {
                return this.farLimitField;
            }
            set {
                this.farLimitField = value;
                this.RaisePropertyChanged("FarLimit");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum AutoFocusMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ExposureOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExposureMode[] modeField;
        
        private ExposurePriority[] priorityField;
        
        private FloatRange minExposureTimeField;
        
        private FloatRange maxExposureTimeField;
        
        private FloatRange minGainField;
        
        private FloatRange maxGainField;
        
        private FloatRange minIrisField;
        
        private FloatRange maxIrisField;
        
        private FloatRange exposureTimeField;
        
        private FloatRange gainField;
        
        private FloatRange irisField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Order=0)]
        public ExposureMode[] Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Priority", Order=1)]
        public ExposurePriority[] Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange MinExposureTime {
            get {
                return this.minExposureTimeField;
            }
            set {
                this.minExposureTimeField = value;
                this.RaisePropertyChanged("MinExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FloatRange MaxExposureTime {
            get {
                return this.maxExposureTimeField;
            }
            set {
                this.maxExposureTimeField = value;
                this.RaisePropertyChanged("MaxExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FloatRange MinGain {
            get {
                return this.minGainField;
            }
            set {
                this.minGainField = value;
                this.RaisePropertyChanged("MinGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FloatRange MaxGain {
            get {
                return this.maxGainField;
            }
            set {
                this.maxGainField = value;
                this.RaisePropertyChanged("MaxGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public FloatRange MinIris {
            get {
                return this.minIrisField;
            }
            set {
                this.minIrisField = value;
                this.RaisePropertyChanged("MinIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public FloatRange MaxIris {
            get {
                return this.maxIrisField;
            }
            set {
                this.maxIrisField = value;
                this.RaisePropertyChanged("MaxIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public FloatRange ExposureTime {
            get {
                return this.exposureTimeField;
            }
            set {
                this.exposureTimeField = value;
                this.RaisePropertyChanged("ExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public FloatRange Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
                this.RaisePropertyChanged("Gain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public FloatRange Iris {
            get {
                return this.irisField;
            }
            set {
                this.irisField = value;
                this.RaisePropertyChanged("Iris");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposureMode {
        
        /// <remarks/>
        AUTO,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum ExposurePriority {
        
        /// <remarks/>
        LowNoise,
        
        /// <remarks/>
        FrameRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class BacklightCompensationOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode[] modeField;
        
        private FloatRange levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Mode", Order=0)]
        public WideDynamicMode[] Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BacklightCompensationOptions backlightCompensationField;
        
        private FloatRange brightnessField;
        
        private FloatRange colorSaturationField;
        
        private FloatRange contrastField;
        
        private ExposureOptions exposureField;
        
        private FocusOptions focusField;
        
        private IrCutFilterMode[] irCutFilterModesField;
        
        private FloatRange sharpnessField;
        
        private WideDynamicRangeOptions wideDynamicRangeField;
        
        private WhiteBalanceOptions whiteBalanceField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BacklightCompensationOptions BacklightCompensation {
            get {
                return this.backlightCompensationField;
            }
            set {
                this.backlightCompensationField = value;
                this.RaisePropertyChanged("BacklightCompensation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FloatRange Brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
                this.RaisePropertyChanged("Brightness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FloatRange ColorSaturation {
            get {
                return this.colorSaturationField;
            }
            set {
                this.colorSaturationField = value;
                this.RaisePropertyChanged("ColorSaturation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FloatRange Contrast {
            get {
                return this.contrastField;
            }
            set {
                this.contrastField = value;
                this.RaisePropertyChanged("Contrast");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public ExposureOptions Exposure {
            get {
                return this.exposureField;
            }
            set {
                this.exposureField = value;
                this.RaisePropertyChanged("Exposure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FocusOptions Focus {
            get {
                return this.focusField;
            }
            set {
                this.focusField = value;
                this.RaisePropertyChanged("Focus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IrCutFilterModes", Order=6)]
        public IrCutFilterMode[] IrCutFilterModes {
            get {
                return this.irCutFilterModesField;
            }
            set {
                this.irCutFilterModesField = value;
                this.RaisePropertyChanged("IrCutFilterModes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public FloatRange Sharpness {
            get {
                return this.sharpnessField;
            }
            set {
                this.sharpnessField = value;
                this.RaisePropertyChanged("Sharpness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public WideDynamicRangeOptions WideDynamicRange {
            get {
                return this.wideDynamicRangeField;
            }
            set {
                this.wideDynamicRangeField = value;
                this.RaisePropertyChanged("WideDynamicRange");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public WhiteBalanceOptions WhiteBalance {
            get {
                return this.whiteBalanceField;
            }
            set {
                this.whiteBalanceField = value;
                this.RaisePropertyChanged("WhiteBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=10)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public enum IrCutFilterMode {
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        AUTO,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class ImagingSettingsExtension : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WhiteBalance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WhiteBalanceMode modeField;
        
        private float crGainField;
        
        private float cbGainField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WhiteBalanceMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float CrGain {
            get {
                return this.crGainField;
            }
            set {
                this.crGainField = value;
                this.RaisePropertyChanged("CrGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float CbGain {
            get {
                return this.cbGainField;
            }
            set {
                this.cbGainField = value;
                this.RaisePropertyChanged("CbGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class WideDynamicRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private WideDynamicMode modeField;
        
        private float levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WideDynamicMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("Level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class FocusConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AutoFocusMode autoFocusModeField;
        
        private float defaultSpeedField;
        
        private float nearLimitField;
        
        private float farLimitField;
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AutoFocusMode AutoFocusMode {
            get {
                return this.autoFocusModeField;
            }
            set {
                this.autoFocusModeField = value;
                this.RaisePropertyChanged("AutoFocusMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public float DefaultSpeed {
            get {
                return this.defaultSpeedField;
            }
            set {
                this.defaultSpeedField = value;
                this.RaisePropertyChanged("DefaultSpeed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public float NearLimit {
            get {
                return this.nearLimitField;
            }
            set {
                this.nearLimitField = value;
                this.RaisePropertyChanged("NearLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float FarLimit {
            get {
                return this.farLimitField;
            }
            set {
                this.farLimitField = value;
                this.RaisePropertyChanged("FarLimit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Rectangle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private float bottomField;
        
        private bool bottomFieldSpecified;
        
        private float topField;
        
        private bool topFieldSpecified;
        
        private float rightField;
        
        private bool rightFieldSpecified;
        
        private float leftField;
        
        private bool leftFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bottomSpecified {
            get {
                return this.bottomFieldSpecified;
            }
            set {
                this.bottomFieldSpecified = value;
                this.RaisePropertyChanged("bottomSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("top");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool topSpecified {
            get {
                return this.topFieldSpecified;
            }
            set {
                this.topFieldSpecified = value;
                this.RaisePropertyChanged("topSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("right");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rightSpecified {
            get {
                return this.rightFieldSpecified;
            }
            set {
                this.rightFieldSpecified = value;
                this.RaisePropertyChanged("rightSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leftSpecified {
            get {
                return this.leftFieldSpecified;
            }
            set {
                this.leftFieldSpecified = value;
                this.RaisePropertyChanged("leftSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.onvif.org/ver10/schema")]
    public partial class Exposure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ExposureMode modeField;
        
        private ExposurePriority priorityField;
        
        private Rectangle windowField;
        
        private float minExposureTimeField;
        
        private float maxExposureTimeField;
        
        private float minGainField;
        
        private float maxGainField;
        
        private float minIrisField;
        
        private float maxIrisField;
        
        private float exposureTimeField;
        
        private float gainField;
        
        private float irisField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ExposureMode Mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
                this.RaisePropertyChanged("Mode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ExposurePriority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
                this.RaisePropertyChanged("Priority");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Rectangle Window {
            get {
                return this.windowField;
            }
            set {
                this.windowField = value;
                this.RaisePropertyChanged("Window");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float MinExposureTime {
            get {
                return this.minExposureTimeField;
            }
            set {
                this.minExposureTimeField = value;
                this.RaisePropertyChanged("MinExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float MaxExposureTime {
            get {
                return this.maxExposureTimeField;
            }
            set {
                this.maxExposureTimeField = value;
                this.RaisePropertyChanged("MaxExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public float MinGain {
            get {
                return this.minGainField;
            }
            set {
                this.minGainField = value;
                this.RaisePropertyChanged("MinGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public float MaxGain {
            get {
                return this.maxGainField;
            }
            set {
                this.maxGainField = value;
                this.RaisePropertyChanged("MaxGain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public float MinIris {
            get {
                return this.minIrisField;
            }
            set {
                this.minIrisField = value;
                this.RaisePropertyChanged("MinIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public float MaxIris {
            get {
                return this.maxIrisField;
            }
            set {
                this.maxIrisField = value;
                this.RaisePropertyChanged("MaxIris");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public float ExposureTime {
            get {
                return this.exposureTimeField;
            }
            set {
                this.exposureTimeField = value;
                this.RaisePropertyChanged("ExposureTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public float Gain {
            get {
                return this.gainField;
            }
            set {
                this.gainField = value;
                this.RaisePropertyChanged("Gain");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public float Iris {
            get {
                return this.irisField;
            }
            set {
                this.irisField = value;
                this.RaisePropertyChanged("Iris");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImagingSettings", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetImagingSettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        public GetImagingSettingsRequest() {
        }
        
        public GetImagingSettingsRequest(string VideoSourceToken) {
            this.VideoSourceToken = VideoSourceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetImagingSettingsResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetImagingSettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.ImagingSettings ImagingSettings;
        
        public GetImagingSettingsResponse() {
        }
        
        public GetImagingSettingsResponse(onvif.services.imaging.ImagingSettings ImagingSettings) {
            this.ImagingSettings = ImagingSettings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetImagingSettings", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class SetImagingSettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.ImagingSettings ImagingSettings;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ForcePersistence;
        
        public SetImagingSettingsRequest() {
        }
        
        public SetImagingSettingsRequest(string VideoSourceToken, onvif.services.imaging.ImagingSettings ImagingSettings, bool ForcePersistence) {
            this.VideoSourceToken = VideoSourceToken;
            this.ImagingSettings = ImagingSettings;
            this.ForcePersistence = ForcePersistence;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetImagingSettingsResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class SetImagingSettingsResponse {
        
        public SetImagingSettingsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOptions", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetOptionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        public GetOptionsRequest() {
        }
        
        public GetOptionsRequest(string VideoSourceToken) {
            this.VideoSourceToken = VideoSourceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOptionsResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetOptionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.ImagingOptions ImagingOptions;
        
        public GetOptionsResponse() {
        }
        
        public GetOptionsResponse(onvif.services.imaging.ImagingOptions ImagingOptions) {
            this.ImagingOptions = ImagingOptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Move", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class MoveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.FocusMove Focus;
        
        public MoveRequest() {
        }
        
        public MoveRequest(string VideoSourceToken, onvif.services.imaging.FocusMove Focus) {
            this.VideoSourceToken = VideoSourceToken;
            this.Focus = Focus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class MoveResponse {
        
        public MoveResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMoveOptions", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetMoveOptionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        public GetMoveOptionsRequest() {
        }
        
        public GetMoveOptionsRequest(string VideoSourceToken) {
            this.VideoSourceToken = VideoSourceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMoveOptionsResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetMoveOptionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.MoveOptions MoveOptions;
        
        public GetMoveOptionsResponse() {
        }
        
        public GetMoveOptionsResponse(onvif.services.imaging.MoveOptions MoveOptions) {
            this.MoveOptions = MoveOptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Stop", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class StopRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        public StopRequest() {
        }
        
        public StopRequest(string VideoSourceToken) {
            this.VideoSourceToken = VideoSourceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StopResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class StopResponse {
        
        public StopResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStatus", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoSourceToken;
        
        public GetStatusRequest() {
        }
        
        public GetStatusRequest(string VideoSourceToken) {
            this.VideoSourceToken = VideoSourceToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStatusResponse", WrapperNamespace="http://www.onvif.org/ver10/imaging/wsdl", IsWrapped=true)]
    public partial class GetStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.onvif.org/ver10/imaging/wsdl", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public onvif.services.imaging.ImagingStatus Status;
        
        public GetStatusResponse() {
        }
        
        public GetStatusResponse(onvif.services.imaging.ImagingStatus Status) {
            this.Status = Status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImagingPortChannel : onvif.services.imaging.ImagingPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetImagingSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetImagingSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.GetImagingSettingsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.GetImagingSettingsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetImagingSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetImagingSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.SetImagingSettingsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.SetImagingSettingsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.GetOptionsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.GetOptionsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.MoveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.MoveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMoveOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMoveOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.GetMoveOptionsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.GetMoveOptionsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.StopResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.StopResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public onvif.services.imaging.GetStatusResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((onvif.services.imaging.GetStatusResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImagingPortClient : System.ServiceModel.ClientBase<onvif.services.imaging.ImagingPort>, onvif.services.imaging.ImagingPort {
        
        private BeginOperationDelegate onBeginGetImagingSettingsDelegate;
        
        private EndOperationDelegate onEndGetImagingSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetImagingSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetImagingSettingsDelegate;
        
        private EndOperationDelegate onEndSetImagingSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onSetImagingSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionsDelegate;
        
        private EndOperationDelegate onEndGetOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDelegate;
        
        private EndOperationDelegate onEndMoveDelegate;
        
        private System.Threading.SendOrPostCallback onMoveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMoveOptionsDelegate;
        
        private EndOperationDelegate onEndGetMoveOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMoveOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopDelegate;
        
        private EndOperationDelegate onEndStopDelegate;
        
        private System.Threading.SendOrPostCallback onStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusDelegate;
        
        private EndOperationDelegate onEndGetStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusCompletedDelegate;
        
        public ImagingPortClient() {
        }
        
        public ImagingPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImagingPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetImagingSettingsCompletedEventArgs> GetImagingSettingsCompleted;
        
        public event System.EventHandler<SetImagingSettingsCompletedEventArgs> SetImagingSettingsCompleted;
        
        public event System.EventHandler<GetOptionsCompletedEventArgs> GetOptionsCompleted;
        
        public event System.EventHandler<MoveCompletedEventArgs> MoveCompleted;
        
        public event System.EventHandler<GetMoveOptionsCompletedEventArgs> GetMoveOptionsCompleted;
        
        public event System.EventHandler<StopCompletedEventArgs> StopCompleted;
        
        public event System.EventHandler<GetStatusCompletedEventArgs> GetStatusCompleted;
        
        public onvif.services.imaging.GetImagingSettingsResponse GetImagingSettings(onvif.services.imaging.GetImagingSettingsRequest request) {
            return base.Channel.GetImagingSettings(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetImagingSettings(onvif.services.imaging.GetImagingSettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetImagingSettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.GetImagingSettingsResponse EndGetImagingSettings(System.IAsyncResult result) {
            return base.Channel.EndGetImagingSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetImagingSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.GetImagingSettingsRequest request = ((onvif.services.imaging.GetImagingSettingsRequest)(inValues[0]));
            return this.BeginGetImagingSettings(request, callback, asyncState);
        }
        
        private object[] OnEndGetImagingSettings(System.IAsyncResult result) {
            onvif.services.imaging.GetImagingSettingsResponse retVal = this.EndGetImagingSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetImagingSettingsCompleted(object state) {
            if ((this.GetImagingSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetImagingSettingsCompleted(this, new GetImagingSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetImagingSettingsAsync(onvif.services.imaging.GetImagingSettingsRequest request) {
            this.GetImagingSettingsAsync(request, null);
        }
        
        public void GetImagingSettingsAsync(onvif.services.imaging.GetImagingSettingsRequest request, object userState) {
            if ((this.onBeginGetImagingSettingsDelegate == null)) {
                this.onBeginGetImagingSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetImagingSettings);
            }
            if ((this.onEndGetImagingSettingsDelegate == null)) {
                this.onEndGetImagingSettingsDelegate = new EndOperationDelegate(this.OnEndGetImagingSettings);
            }
            if ((this.onGetImagingSettingsCompletedDelegate == null)) {
                this.onGetImagingSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetImagingSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetImagingSettingsDelegate, new object[] {
                        request}, this.onEndGetImagingSettingsDelegate, this.onGetImagingSettingsCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.SetImagingSettingsResponse SetImagingSettings(onvif.services.imaging.SetImagingSettingsRequest request) {
            return base.Channel.SetImagingSettings(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetImagingSettings(onvif.services.imaging.SetImagingSettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetImagingSettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.SetImagingSettingsResponse EndSetImagingSettings(System.IAsyncResult result) {
            return base.Channel.EndSetImagingSettings(result);
        }
        
        private System.IAsyncResult OnBeginSetImagingSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.SetImagingSettingsRequest request = ((onvif.services.imaging.SetImagingSettingsRequest)(inValues[0]));
            return this.BeginSetImagingSettings(request, callback, asyncState);
        }
        
        private object[] OnEndSetImagingSettings(System.IAsyncResult result) {
            onvif.services.imaging.SetImagingSettingsResponse retVal = this.EndSetImagingSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetImagingSettingsCompleted(object state) {
            if ((this.SetImagingSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetImagingSettingsCompleted(this, new SetImagingSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetImagingSettingsAsync(onvif.services.imaging.SetImagingSettingsRequest request) {
            this.SetImagingSettingsAsync(request, null);
        }
        
        public void SetImagingSettingsAsync(onvif.services.imaging.SetImagingSettingsRequest request, object userState) {
            if ((this.onBeginSetImagingSettingsDelegate == null)) {
                this.onBeginSetImagingSettingsDelegate = new BeginOperationDelegate(this.OnBeginSetImagingSettings);
            }
            if ((this.onEndSetImagingSettingsDelegate == null)) {
                this.onEndSetImagingSettingsDelegate = new EndOperationDelegate(this.OnEndSetImagingSettings);
            }
            if ((this.onSetImagingSettingsCompletedDelegate == null)) {
                this.onSetImagingSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetImagingSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginSetImagingSettingsDelegate, new object[] {
                        request}, this.onEndSetImagingSettingsDelegate, this.onSetImagingSettingsCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.GetOptionsResponse GetOptions(onvif.services.imaging.GetOptionsRequest request) {
            return base.Channel.GetOptions(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOptions(onvif.services.imaging.GetOptionsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptions(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.GetOptionsResponse EndGetOptions(System.IAsyncResult result) {
            return base.Channel.EndGetOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.GetOptionsRequest request = ((onvif.services.imaging.GetOptionsRequest)(inValues[0]));
            return this.BeginGetOptions(request, callback, asyncState);
        }
        
        private object[] OnEndGetOptions(System.IAsyncResult result) {
            onvif.services.imaging.GetOptionsResponse retVal = this.EndGetOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionsCompleted(object state) {
            if ((this.GetOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionsCompleted(this, new GetOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionsAsync(onvif.services.imaging.GetOptionsRequest request) {
            this.GetOptionsAsync(request, null);
        }
        
        public void GetOptionsAsync(onvif.services.imaging.GetOptionsRequest request, object userState) {
            if ((this.onBeginGetOptionsDelegate == null)) {
                this.onBeginGetOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetOptions);
            }
            if ((this.onEndGetOptionsDelegate == null)) {
                this.onEndGetOptionsDelegate = new EndOperationDelegate(this.OnEndGetOptions);
            }
            if ((this.onGetOptionsCompletedDelegate == null)) {
                this.onGetOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionsDelegate, new object[] {
                        request}, this.onEndGetOptionsDelegate, this.onGetOptionsCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.MoveResponse Move(onvif.services.imaging.MoveRequest request) {
            return base.Channel.Move(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMove(onvif.services.imaging.MoveRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMove(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.MoveResponse EndMove(System.IAsyncResult result) {
            return base.Channel.EndMove(result);
        }
        
        private System.IAsyncResult OnBeginMove(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.MoveRequest request = ((onvif.services.imaging.MoveRequest)(inValues[0]));
            return this.BeginMove(request, callback, asyncState);
        }
        
        private object[] OnEndMove(System.IAsyncResult result) {
            onvif.services.imaging.MoveResponse retVal = this.EndMove(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveCompleted(object state) {
            if ((this.MoveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveCompleted(this, new MoveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveAsync(onvif.services.imaging.MoveRequest request) {
            this.MoveAsync(request, null);
        }
        
        public void MoveAsync(onvif.services.imaging.MoveRequest request, object userState) {
            if ((this.onBeginMoveDelegate == null)) {
                this.onBeginMoveDelegate = new BeginOperationDelegate(this.OnBeginMove);
            }
            if ((this.onEndMoveDelegate == null)) {
                this.onEndMoveDelegate = new EndOperationDelegate(this.OnEndMove);
            }
            if ((this.onMoveCompletedDelegate == null)) {
                this.onMoveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveCompleted);
            }
            base.InvokeAsync(this.onBeginMoveDelegate, new object[] {
                        request}, this.onEndMoveDelegate, this.onMoveCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.GetMoveOptionsResponse GetMoveOptions(onvif.services.imaging.GetMoveOptionsRequest request) {
            return base.Channel.GetMoveOptions(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMoveOptions(onvif.services.imaging.GetMoveOptionsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMoveOptions(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.GetMoveOptionsResponse EndGetMoveOptions(System.IAsyncResult result) {
            return base.Channel.EndGetMoveOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetMoveOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.GetMoveOptionsRequest request = ((onvif.services.imaging.GetMoveOptionsRequest)(inValues[0]));
            return this.BeginGetMoveOptions(request, callback, asyncState);
        }
        
        private object[] OnEndGetMoveOptions(System.IAsyncResult result) {
            onvif.services.imaging.GetMoveOptionsResponse retVal = this.EndGetMoveOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMoveOptionsCompleted(object state) {
            if ((this.GetMoveOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMoveOptionsCompleted(this, new GetMoveOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMoveOptionsAsync(onvif.services.imaging.GetMoveOptionsRequest request) {
            this.GetMoveOptionsAsync(request, null);
        }
        
        public void GetMoveOptionsAsync(onvif.services.imaging.GetMoveOptionsRequest request, object userState) {
            if ((this.onBeginGetMoveOptionsDelegate == null)) {
                this.onBeginGetMoveOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetMoveOptions);
            }
            if ((this.onEndGetMoveOptionsDelegate == null)) {
                this.onEndGetMoveOptionsDelegate = new EndOperationDelegate(this.OnEndGetMoveOptions);
            }
            if ((this.onGetMoveOptionsCompletedDelegate == null)) {
                this.onGetMoveOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMoveOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMoveOptionsDelegate, new object[] {
                        request}, this.onEndGetMoveOptionsDelegate, this.onGetMoveOptionsCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.StopResponse Stop(onvif.services.imaging.StopRequest request) {
            return base.Channel.Stop(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStop(onvif.services.imaging.StopRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStop(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.StopResponse EndStop(System.IAsyncResult result) {
            return base.Channel.EndStop(result);
        }
        
        private System.IAsyncResult OnBeginStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.StopRequest request = ((onvif.services.imaging.StopRequest)(inValues[0]));
            return this.BeginStop(request, callback, asyncState);
        }
        
        private object[] OnEndStop(System.IAsyncResult result) {
            onvif.services.imaging.StopResponse retVal = this.EndStop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnStopCompleted(object state) {
            if ((this.StopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopCompleted(this, new StopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopAsync(onvif.services.imaging.StopRequest request) {
            this.StopAsync(request, null);
        }
        
        public void StopAsync(onvif.services.imaging.StopRequest request, object userState) {
            if ((this.onBeginStopDelegate == null)) {
                this.onBeginStopDelegate = new BeginOperationDelegate(this.OnBeginStop);
            }
            if ((this.onEndStopDelegate == null)) {
                this.onEndStopDelegate = new EndOperationDelegate(this.OnEndStop);
            }
            if ((this.onStopCompletedDelegate == null)) {
                this.onStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopCompleted);
            }
            base.InvokeAsync(this.onBeginStopDelegate, new object[] {
                        request}, this.onEndStopDelegate, this.onStopCompletedDelegate, userState);
        }
        
        public onvif.services.imaging.GetStatusResponse GetStatus(onvif.services.imaging.GetStatusRequest request) {
            return base.Channel.GetStatus(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStatus(onvif.services.imaging.GetStatusRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public onvif.services.imaging.GetStatusResponse EndGetStatus(System.IAsyncResult result) {
            return base.Channel.EndGetStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            onvif.services.imaging.GetStatusRequest request = ((onvif.services.imaging.GetStatusRequest)(inValues[0]));
            return this.BeginGetStatus(request, callback, asyncState);
        }
        
        private object[] OnEndGetStatus(System.IAsyncResult result) {
            onvif.services.imaging.GetStatusResponse retVal = this.EndGetStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusCompleted(object state) {
            if ((this.GetStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusAsync(onvif.services.imaging.GetStatusRequest request) {
            this.GetStatusAsync(request, null);
        }
        
        public void GetStatusAsync(onvif.services.imaging.GetStatusRequest request, object userState) {
            if ((this.onBeginGetStatusDelegate == null)) {
                this.onBeginGetStatusDelegate = new BeginOperationDelegate(this.OnBeginGetStatus);
            }
            if ((this.onEndGetStatusDelegate == null)) {
                this.onEndGetStatusDelegate = new EndOperationDelegate(this.OnEndGetStatus);
            }
            if ((this.onGetStatusCompletedDelegate == null)) {
                this.onGetStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusDelegate, new object[] {
                        request}, this.onEndGetStatusDelegate, this.onGetStatusCompletedDelegate, userState);
        }
    }
}
